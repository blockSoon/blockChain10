{
	"id": "f9f28f5a2937391d64385e2f7c0dac36",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/contracts/metaTransacion.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./SoonToken.sol\";\r\n\r\ncontract MetaTransaction {\r\n    SoonToken soonToken;\r\n\r\n    constructor(address _CA) {\r\n        soonToken = SoonToken(_CA);\r\n    }\r\n\r\n    function mint(\r\n        address[] memory _address,\r\n        uint[] memory token,\r\n        string[] memory message,\r\n        bytes[] memory signature\r\n    ) public {\r\n        for (uint256 i = 0; i < _address.length; i++) {\r\n            // 서명 검증 식을 여기에 작성할것.\r\n            signTransaction(_address[i], message[i], signature[i]);\r\n            soonToken.mint(_address[i], token[i]);\r\n            emit evnet01(_address[i], message[i]);\r\n        }\r\n    }\r\n\r\n    function signTransaction(\r\n        address user,\r\n        string memory _msg,\r\n        bytes memory signature\r\n    ) public {\r\n        bytes32 ethSign = getEthSignMsgHash(_msg);\r\n        // 컨트랙트 구조분해 할당\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSign(signature);\r\n        // 서명의 r, .s, v 를 가지고 해시값을 검증하면 공개키가 복구된다.\r\n        // ecrecover 공개키 복원\r\n        emit event02(r, s, v);\r\n        emit event03(ecrecover(ethSign, v, r, s));\r\n        emit event03(user);\r\n        require(user == ecrecover(ethSign, v, r, s));\r\n    }\r\n\r\n    function getEthSignMsgHash(\r\n        string memory _msg\r\n    ) internal pure returns (bytes32) {\r\n        // 검증을 하기 위해서는 메시지의 길이를 알아야 검증을 할수 있다.\r\n        uint msgLength = bytes(_msg).length;\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n\",\r\n                    Strings.toString(msgLength),\r\n                    _msg\r\n                )\r\n            );\r\n    }\r\n\r\n    function splitSign(\r\n        bytes memory sign\r\n    ) public pure returns (bytes32 r, bytes32 s, uint8 v) {\r\n        // 정상적인 서명인지.\r\n        require(sign.length == 65);\r\n\r\n        // 수학적인 내용을 컨트랙트에 담을때는 assembly\r\n        assembly {\r\n            // sign 변수의 첫 바이트에서 32 바이트 할당\r\n            r := mload(add(sign, 32))\r\n            // sign 변수의 33번부터 32 바이트 할당\r\n            s := mload(add(sign, 64))\r\n            // 0 번에 65번째 내용까지 할당\r\n            v := byte(0, mload(add(sign, 96)))\r\n        }\r\n\r\n        // EIP-155 재생 공격 방지로 추가\r\n        if (v < 27) {\r\n            v += 27;\r\n        }\r\n\r\n        require(v == 27 || v == 28);\r\n    }\r\n\r\n    event evnet01(address from, string _msg);\r\n    event event02(bytes32 r, bytes32 s, uint8 v);\r\n    event event03(address account);\r\n}\r\n"
			},
			"src/contracts/SoonToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract SoonToken is ERC20 {\r\n    constructor() ERC20(\"SoonToken\", \"STK\") {}\r\n\r\n    function mint(address to, uint256 amount) public {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/contracts/SoonToken.sol",
								"src/contracts/metaTransacion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/contracts/SoonToken.sol",
								"src/contracts/metaTransacion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/contracts/SoonToken.sol",
								"src/contracts/metaTransacion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/SoonToken.sol": {
				"SoonToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contracts/SoonToken.sol\":120:293  contract SoonToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/contracts/SoonToken.sol\":155:197  constructor() ERC20(\"SoonToken\", \"STK\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x536f6f6e546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x53544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/contracts/SoonToken.sol\":120:293  contract SoonToken is ERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"src/contracts/SoonToken.sol\":120:293  contract SoonToken is ERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/contracts/SoonToken.sol\":120:293  contract SoonToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/contracts/SoonToken.sol\":205:290  function mint(address to, uint256 amount) public {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/contracts/SoonToken.sol\":205:290  function mint(address to, uint256 amount) public {... */\n    tag_39:\n        /* \"src/contracts/SoonToken.sol\":265:282  _mint(to, amount) */\n      tag_78\n        /* \"src/contracts/SoonToken.sol\":271:273  to */\n      dup3\n        /* \"src/contracts/SoonToken.sol\":275:281  amount */\n      dup3\n        /* \"src/contracts/SoonToken.sol\":265:270  _mint */\n      tag_79\n        /* \"src/contracts/SoonToken.sol\":265:282  _mint(to, amount) */\n      jump\t// in\n    tag_78:\n        /* \"src/contracts/SoonToken.sol\":205:290  function mint(address to, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_59\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_59\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_125)\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_129)\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_131:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_132:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_133:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_158:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_158)\n    tag_160:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_134:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_135:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_163\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_131\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":818:889   */\n      tag_164\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_132\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_165\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_133\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":988:1017   */\n      tag_166\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_134\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_17:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_168\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_135\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_137:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_139:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_140:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_174\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_139\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_141:\n        /* \"#utility.yul\":1983:2007   */\n      tag_176\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_140\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_177:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_142:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_179\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_141\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_143:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_144:\n        /* \"#utility.yul\":2339:2363   */\n      tag_182\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_143\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_183:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_145:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_185\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_144\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_20:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_188\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2632:2751   */\n    tag_187:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_189\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_190\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_146:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_147:\n        /* \"#utility.yul\":3196:3217   */\n      tag_193\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_146\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_23:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_195\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_147\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_148:\n        /* \"#utility.yul\":3533:3557   */\n      tag_197\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_143\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_27:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_199\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_148\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_30:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_202\n      tag_137\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3908:4027   */\n    tag_201:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_203\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_142\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_204\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_142\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_205\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_145\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_149:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_150:\n        /* \"#utility.yul\":4598:4620   */\n      tag_208\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_149\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_36:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_210\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_150\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_42:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_213\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4929:5048   */\n    tag_212:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_214\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_142\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_54:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_217\n      tag_137\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5281:5400   */\n    tag_216:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_218\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_142\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_219\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_142\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_151:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_59:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_222:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_224\n      tag_151\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6084:6168   */\n    tag_223:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6298   */\n    tag_152:\n        /* \"#utility.yul\":6267:6291   */\n      tag_226\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6267:6291   */\n      tag_140\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6255:6292   */\n      mstore\n        /* \"#utility.yul\":6180:6298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6746   */\n    tag_100:\n        /* \"#utility.yul\":6453:6457   */\n      0x00\n        /* \"#utility.yul\":6491:6493   */\n      0x60\n        /* \"#utility.yul\":6480:6489   */\n      dup3\n        /* \"#utility.yul\":6476:6494   */\n      add\n        /* \"#utility.yul\":6468:6494   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6575   */\n      tag_228\n        /* \"#utility.yul\":6572:6573   */\n      0x00\n        /* \"#utility.yul\":6561:6570   */\n      dup4\n        /* \"#utility.yul\":6557:6574   */\n      add\n        /* \"#utility.yul\":6548:6554   */\n      dup7\n        /* \"#utility.yul\":6504:6575   */\n      tag_152\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6585:6657   */\n      tag_229\n        /* \"#utility.yul\":6653:6655   */\n      0x20\n        /* \"#utility.yul\":6642:6651   */\n      dup4\n        /* \"#utility.yul\":6638:6656   */\n      add\n        /* \"#utility.yul\":6629:6635   */\n      dup6\n        /* \"#utility.yul\":6585:6657   */\n      tag_148\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6667:6739   */\n      tag_230\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6738   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6667:6739   */\n      tag_148\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6304:6746   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6974   */\n    tag_105:\n        /* \"#utility.yul\":6845:6849   */\n      0x00\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup3\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6860:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6967   */\n      tag_232\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6953:6962   */\n      dup4\n        /* \"#utility.yul\":6949:6966   */\n      add\n        /* \"#utility.yul\":6940:6946   */\n      dup5\n        /* \"#utility.yul\":6896:6967   */\n      tag_152\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6752:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_153:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_124:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_235\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_143\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_236\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_143\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_238\n      tag_153\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7314:7350   */\n    tag_237:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a918c90f2e47db24a9217089b607006387af05140085e1670eb8fd4c9abb53364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2212": {
									"entryPoint": null,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:10",
										"nodeType": "YulBlock",
										"src": "0:5231:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600981526020017f536f6f6e546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53544b000000000000000000000000000000000000000000000000000000000081525081600390816200008e91906200030d565b508060049081620000a091906200030d565b505050620003f1565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012557607f821691505b6020821081036200013b576200013a620000e0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200019f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000162565b620001ab868362000162565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001f5620001ef620001e984620001c3565b620001cc565b620001c3565b9050919050565b5f819050919050565b6200021083620001d5565b620002286200021f82620001fc565b8484546200016e565b825550505050565b5f90565b6200023e62000230565b6200024b81848462000205565b505050565b5b818110156200027257620002665f8262000234565b60018101905062000251565b5050565b601f821115620002c1576200028b8162000141565b620002968462000153565b81016020851015620002a6578190505b620002be620002b58562000153565b83018262000250565b50505b505050565b5f82821c905092915050565b5f620002e35f1984600802620002c6565b1980831691505092915050565b5f620002fd8383620002d2565b9150826002028217905092915050565b6200031882620000a9565b67ffffffffffffffff811115620003345762000333620000b3565b5b6200034082546200010d565b6200034d82828562000276565b5f60209050601f83116001811462000383575f84156200036e578287015190505b6200037a8582620002f0565b865550620003e9565b601f198416620003938662000141565b5f5b82811015620003bc5784890151825560018201915060208501945060208101905062000395565b86831015620003dc5784890151620003d8601f891682620002d2565b8355505b6001600288020188555050505b505050505050565b610eaf80620003ff5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806340c10f191161006457806340c10f191461015a57806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b28565b60405180910390f35b6100d860048036038101906100d39190610bd9565b6102b4565b6040516100e59190610c31565b60405180910390f35b6100f66102d6565b6040516101039190610c59565b60405180910390f35b61012660048036038101906101219190610c72565b6102df565b6040516101339190610c31565b60405180910390f35b61014461030d565b6040516101519190610cdd565b60405180910390f35b610174600480360381019061016f9190610bd9565b610315565b005b610190600480360381019061018b9190610cf6565b610323565b60405161019d9190610c59565b60405180910390f35b6101ae610368565b6040516101bb9190610b28565b60405180910390f35b6101de60048036038101906101d99190610bd9565b6103f8565b6040516101eb9190610c31565b60405180910390f35b61020e60048036038101906102099190610d21565b61041a565b60405161021b9190610c59565b60405180910390f35b60606003805461023390610d8c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d8c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049c565b90506102cb8185856104a3565b600191505092915050565b5f600254905090565b5f806102e961049c565b90506102f68582856104b5565b610301858585610547565b60019150509392505050565b5f6012905090565b61031f8282610637565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461037790610d8c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610d8c565b80156103ee5780601f106103c5576101008083540402835291602001916103ee565b820191905f5260205f20905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b5f8061040261049c565b905061040f818585610547565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104b083838360016106b6565b505050565b5f6104c0848461041a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105415781811015610532578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052993929190610dcb565b60405180910390fd5b61054084848484035f6106b6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ae9190610e00565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610627575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061e9190610e00565b60405180910390fd5b610632838383610885565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069e9190610e00565b60405180910390fd5b6106b25f8383610885565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610726575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071d9190610e00565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610796575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078d9190610e00565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108769190610c59565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d5578060025f8282546108c99190610e46565b925050819055506109a3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095593929190610dcb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ea578060025f8282540392505081905550610a34565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a919190610c59565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ad5578082015181840152602081019050610aba565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610afa82610a9e565b610b048185610aa8565b9350610b14818560208601610ab8565b610b1d81610ae0565b840191505092915050565b5f6020820190508181035f830152610b408184610af0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7582610b4c565b9050919050565b610b8581610b6b565b8114610b8f575f80fd5b50565b5f81359050610ba081610b7c565b92915050565b5f819050919050565b610bb881610ba6565b8114610bc2575f80fd5b50565b5f81359050610bd381610baf565b92915050565b5f8060408385031215610bef57610bee610b48565b5b5f610bfc85828601610b92565b9250506020610c0d85828601610bc5565b9150509250929050565b5f8115159050919050565b610c2b81610c17565b82525050565b5f602082019050610c445f830184610c22565b92915050565b610c5381610ba6565b82525050565b5f602082019050610c6c5f830184610c4a565b92915050565b5f805f60608486031215610c8957610c88610b48565b5b5f610c9686828701610b92565b9350506020610ca786828701610b92565b9250506040610cb886828701610bc5565b9150509250925092565b5f60ff82169050919050565b610cd781610cc2565b82525050565b5f602082019050610cf05f830184610cce565b92915050565b5f60208284031215610d0b57610d0a610b48565b5b5f610d1884828501610b92565b91505092915050565b5f8060408385031215610d3757610d36610b48565b5b5f610d4485828601610b92565b9250506020610d5585828601610b92565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610da357607f821691505b602082108103610db657610db5610d5f565b5b50919050565b610dc581610b6b565b82525050565b5f606082019050610dde5f830186610dbc565b610deb6020830185610c4a565b610df86040830184610c4a565b949350505050565b5f602082019050610e135f830184610dbc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e5082610ba6565b9150610e5b83610ba6565b9250828201905080821115610e7357610e72610e19565b5b9291505056fea26469706673582212205a918c90f2e47db24a9217089b607006387af05140085e1670eb8fd4c9abb53364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536F6F6E546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x30D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x30D JUMP JUMPDEST POP POP POP PUSH3 0x3F1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x13B JUMPI PUSH3 0x13A PUSH3 0xE0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x19F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x162 JUMP JUMPDEST PUSH3 0x1AB DUP7 DUP4 PUSH3 0x162 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1F5 PUSH3 0x1EF PUSH3 0x1E9 DUP5 PUSH3 0x1C3 JUMP JUMPDEST PUSH3 0x1CC JUMP JUMPDEST PUSH3 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x210 DUP4 PUSH3 0x1D5 JUMP JUMPDEST PUSH3 0x228 PUSH3 0x21F DUP3 PUSH3 0x1FC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x16E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x23E PUSH3 0x230 JUMP JUMPDEST PUSH3 0x24B DUP2 DUP5 DUP5 PUSH3 0x205 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x272 JUMPI PUSH3 0x266 PUSH0 DUP3 PUSH3 0x234 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x251 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C1 JUMPI PUSH3 0x28B DUP2 PUSH3 0x141 JUMP JUMPDEST PUSH3 0x296 DUP5 PUSH3 0x153 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2A6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2BE PUSH3 0x2B5 DUP6 PUSH3 0x153 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x250 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2C6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2FD DUP4 DUP4 PUSH3 0x2D2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x318 DUP3 PUSH3 0xA9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x334 JUMPI PUSH3 0x333 PUSH3 0xB3 JUMP JUMPDEST JUMPDEST PUSH3 0x340 DUP3 SLOAD PUSH3 0x10D JUMP JUMPDEST PUSH3 0x34D DUP3 DUP3 DUP6 PUSH3 0x276 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x383 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x36E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x37A DUP6 DUP3 PUSH3 0x2F0 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3E9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x393 DUP7 PUSH3 0x141 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3BC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x395 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3DC JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3D8 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2D2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEAF DUP1 PUSH3 0x3FF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x31F DUP3 DUP3 PUSH2 0x637 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A3 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x402 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C0 DUP5 DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x541 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x532 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x540 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x627 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x885 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B2 PUSH0 DUP4 DUP4 PUSH2 0x885 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x726 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAFA DUP3 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB04 DUP2 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP4 POP PUSH2 0xB14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xAE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB40 DUP2 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFC DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0D DUP6 DUP3 DUP7 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH0 DUP4 ADD DUP5 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6C PUSH0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC96 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD18 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD44 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB6 JUMPI PUSH2 0xDB5 PUSH2 0xD5F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC5 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDDE PUSH0 DUP4 ADD DUP7 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xDEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xDF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH0 DUP4 ADD DUP5 PUSH2 0xDBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE50 DUP3 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0xE19 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SWAP2 DUP13 SWAP1 CALLCODE 0xE4 PUSH30 0xB24A9217089B607006387AF05140085E1670EB8FD4C9ABB53364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "120:173:8:-:0;;;155:42;;;;;;;;;;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;120:173:8;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;120:173:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1187,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1718,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 1591,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1180,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1205,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1351,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2181,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1050,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 692,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 803,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 781,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_2225": {
									"entryPoint": 789,
									"id": 2225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 548,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 872,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 726,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 735,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1016,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:10",
										"nodeType": "YulBlock",
										"src": "0:7360:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:184:10",
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nativeSrc": "359:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:10",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:10",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:10",
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nativeSrc": "449:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nativeSrc": "468:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nativeSrc": "462:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nativeSrc": "442:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nativeSrc": "442:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nativeSrc": "386:13:10",
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nativeSrc": "378:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:10",
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nativeSrc": "402:15:10",
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:10",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nativeSrc": "407:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:10",
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nativeSrc": "507:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:10",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nativeSrc": "500:27:10",
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nativeSrc": "500:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nativeSrc": "587:54:10",
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nativeSrc": "597:38:10",
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:10",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nativeSrc": "611:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:10",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nativeSrc": "607:28:10",
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:10",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:10",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nativeSrc": "739:285:10",
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nativeSrc": "749:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nativeSrc": "763:39:10",
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:10",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:10",
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nativeSrc": "818:71:10",
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:10",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nativeSrc": "933:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nativeSrc": "898:65:10",
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nativeSrc": "898:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nativeSrc": "972:46:10",
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nativeSrc": "988:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nativeSrc": "979:39:10",
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:10",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:10",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:10",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nativeSrc": "1148:195:10",
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nativeSrc": "1158:26:10",
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nativeSrc": "1166:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nativeSrc": "1201:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nativeSrc": "1220:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nativeSrc": "1194:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nativeSrc": "1194:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nativeSrc": "1250:86:10",
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nativeSrc": "1258:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:10",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:10",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:10",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nativeSrc": "1389:35:10",
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nativeSrc": "1399:19:10",
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nativeSrc": "1409:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:10",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nativeSrc": "1519:28:10",
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nativeSrc": "1529:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nativeSrc": "1529:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nativeSrc": "1642:28:10",
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nativeSrc": "1652:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nativeSrc": "1652:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nativeSrc": "1721:81:10",
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nativeSrc": "1731:65:10",
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nativeSrc": "1742:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:10",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:10",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nativeSrc": "1853:51:10",
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nativeSrc": "1863:35:10",
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nativeSrc": "1874:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:10",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:10",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nativeSrc": "1953:79:10",
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:10",
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nativeSrc": "2012:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nativeSrc": "2012:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nativeSrc": "1983:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nativeSrc": "1973:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nativeSrc": "1966:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nativeSrc": "1963:63:10",
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:10",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nativeSrc": "2090:87:10",
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nativeSrc": "2100:29:10",
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nativeSrc": "2109:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nativeSrc": "2138:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nativeSrc": "2138:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:10",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:10",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:10",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nativeSrc": "2228:32:10",
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nativeSrc": "2238:16:10",
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:10",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:10",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nativeSrc": "2309:79:10",
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:10",
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nativeSrc": "2368:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nativeSrc": "2368:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nativeSrc": "2339:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nativeSrc": "2329:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nativeSrc": "2322:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nativeSrc": "2319:63:10",
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:10",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nativeSrc": "2446:87:10",
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nativeSrc": "2456:29:10",
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nativeSrc": "2465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nativeSrc": "2494:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nativeSrc": "2494:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:10",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:10",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:10",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nativeSrc": "2622:391:10",
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:10",
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nativeSrc": "2670:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nativeSrc": "2670:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nativeSrc": "2639:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nativeSrc": "2635:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nativeSrc": "2632:119:10",
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nativeSrc": "2761:117:10",
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nativeSrc": "2776:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nativeSrc": "2815:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:10",
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nativeSrc": "2903:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nativeSrc": "2964:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nativeSrc": "2943:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:10",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:10",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:10",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:10",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nativeSrc": "3061:48:10",
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nativeSrc": "3071:32:10",
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nativeSrc": "3089:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nativeSrc": "3082:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:10",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:10",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nativeSrc": "3174:50:10",
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nativeSrc": "3196:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nativeSrc": "3184:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nativeSrc": "3184:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:10",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:10",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nativeSrc": "3322:118:10",
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nativeSrc": "3332:26:10",
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nativeSrc": "3340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nativeSrc": "3415:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nativeSrc": "3368:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nativeSrc": "3368:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:10",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:10",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:10",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nativeSrc": "3511:53:10",
													"nodeType": "YulBlock",
													"src": "3511:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:10"
																		},
																		"nativeSrc": "3533:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:10"
																},
																"nativeSrc": "3521:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:10"
															},
															"nativeSrc": "3521:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:10",
														"nodeType": "YulTypedName",
														"src": "3499:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:10",
														"nodeType": "YulTypedName",
														"src": "3506:3:10",
														"type": ""
													}
												],
												"src": "3446:118:10"
											},
											{
												"body": {
													"nativeSrc": "3668:124:10",
													"nodeType": "YulBlock",
													"src": "3668:124:10",
													"statements": [
														{
															"nativeSrc": "3678:26:10",
															"nodeType": "YulAssignment",
															"src": "3678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:10"
																},
																"nativeSrc": "3686:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nativeSrc": "3767:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:10"
																},
																"nativeSrc": "3714:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:10"
															},
															"nativeSrc": "3714:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:10",
														"nodeType": "YulTypedName",
														"src": "3640:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:10",
														"nodeType": "YulTypedName",
														"src": "3652:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:10",
														"nodeType": "YulTypedName",
														"src": "3663:4:10",
														"type": ""
													}
												],
												"src": "3570:222:10"
											},
											{
												"body": {
													"nativeSrc": "3898:519:10",
													"nodeType": "YulBlock",
													"src": "3898:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:10",
																"nodeType": "YulBlock",
																"src": "3944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:10"
																			},
																			"nativeSrc": "3946:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:10"
																		},
																		"nativeSrc": "3946:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:10"
																		},
																		"nativeSrc": "3915:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:10"
																},
																"nativeSrc": "3911:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:10"
															},
															"nativeSrc": "3908:119:10",
															"nodeType": "YulIf",
															"src": "3908:119:10"
														},
														{
															"nativeSrc": "4037:117:10",
															"nodeType": "YulBlock",
															"src": "4037:117:10",
															"statements": [
																{
																	"nativeSrc": "4052:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:10"
																				},
																				"nativeSrc": "4112:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:10"
																		},
																		"nativeSrc": "4091:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:10",
															"nodeType": "YulBlock",
															"src": "4164:118:10",
															"statements": [
																{
																	"nativeSrc": "4179:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:10"
																				},
																				"nativeSrc": "4240:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:10"
																		},
																		"nativeSrc": "4219:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:10",
															"nodeType": "YulBlock",
															"src": "4292:118:10",
															"statements": [
																{
																	"nativeSrc": "4307:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:10"
																				},
																				"nativeSrc": "4368:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:10"
																		},
																		"nativeSrc": "4347:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:10",
														"nodeType": "YulTypedName",
														"src": "3852:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:10",
														"nodeType": "YulTypedName",
														"src": "3863:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:10",
														"nodeType": "YulTypedName",
														"src": "3875:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:10",
														"nodeType": "YulTypedName",
														"src": "3883:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:10",
														"nodeType": "YulTypedName",
														"src": "3891:6:10",
														"type": ""
													}
												],
												"src": "3798:619:10"
											},
											{
												"body": {
													"nativeSrc": "4466:43:10",
													"nodeType": "YulBlock",
													"src": "4466:43:10",
													"statements": [
														{
															"nativeSrc": "4476:27:10",
															"nodeType": "YulAssignment",
															"src": "4476:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nativeSrc": "4487:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:10",
														"nodeType": "YulTypedName",
														"src": "4448:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:10",
														"nodeType": "YulTypedName",
														"src": "4458:7:10",
														"type": ""
													}
												],
												"src": "4423:86:10"
											},
											{
												"body": {
													"nativeSrc": "4576:51:10",
													"nodeType": "YulBlock",
													"src": "4576:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:10"
																		},
																		"nativeSrc": "4598:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:10"
																},
																"nativeSrc": "4586:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:10"
															},
															"nativeSrc": "4586:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:10",
														"nodeType": "YulTypedName",
														"src": "4564:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:10",
														"nodeType": "YulTypedName",
														"src": "4571:3:10",
														"type": ""
													}
												],
												"src": "4515:112:10"
											},
											{
												"body": {
													"nativeSrc": "4727:120:10",
													"nodeType": "YulBlock",
													"src": "4727:120:10",
													"statements": [
														{
															"nativeSrc": "4737:26:10",
															"nodeType": "YulAssignment",
															"src": "4737:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:10"
																},
																"nativeSrc": "4745:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:10"
																		},
																		"nativeSrc": "4822:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:10"
																},
																"nativeSrc": "4773:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:10"
															},
															"nativeSrc": "4773:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:10",
														"nodeType": "YulTypedName",
														"src": "4699:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:10",
														"nodeType": "YulTypedName",
														"src": "4711:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:10",
														"nodeType": "YulTypedName",
														"src": "4722:4:10",
														"type": ""
													}
												],
												"src": "4633:214:10"
											},
											{
												"body": {
													"nativeSrc": "4919:263:10",
													"nodeType": "YulBlock",
													"src": "4919:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:10",
																"nodeType": "YulBlock",
																"src": "4965:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:10"
																			},
																			"nativeSrc": "4967:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:10"
																		},
																		"nativeSrc": "4967:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nativeSrc": "4936:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:10"
																},
																"nativeSrc": "4932:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:10"
															},
															"nativeSrc": "4929:119:10",
															"nodeType": "YulIf",
															"src": "4929:119:10"
														},
														{
															"nativeSrc": "5058:117:10",
															"nodeType": "YulBlock",
															"src": "5058:117:10",
															"statements": [
																{
																	"nativeSrc": "5073:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:10"
																				},
																				"nativeSrc": "5133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:10"
																		},
																		"nativeSrc": "5112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:10",
														"nodeType": "YulTypedName",
														"src": "4889:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:10",
														"nodeType": "YulTypedName",
														"src": "4900:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:10",
														"nodeType": "YulTypedName",
														"src": "4912:6:10",
														"type": ""
													}
												],
												"src": "4853:329:10"
											},
											{
												"body": {
													"nativeSrc": "5271:391:10",
													"nodeType": "YulBlock",
													"src": "5271:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5317:83:10",
																"nodeType": "YulBlock",
																"src": "5317:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5319:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:10"
																			},
																			"nativeSrc": "5319:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:10"
																		},
																		"nativeSrc": "5319:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5292:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:10"
																		},
																		"nativeSrc": "5288:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:10"
																},
																"nativeSrc": "5284:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5284:32:10"
															},
															"nativeSrc": "5281:119:10",
															"nodeType": "YulIf",
															"src": "5281:119:10"
														},
														{
															"nativeSrc": "5410:117:10",
															"nodeType": "YulBlock",
															"src": "5410:117:10",
															"statements": [
																{
																	"nativeSrc": "5425:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5439:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5429:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5454:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5454:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5489:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5500:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5485:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:10"
																				},
																				"nativeSrc": "5485:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5509:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5464:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:10"
																		},
																		"nativeSrc": "5464:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5454:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5537:118:10",
															"nodeType": "YulBlock",
															"src": "5537:118:10",
															"statements": [
																{
																	"nativeSrc": "5552:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5556:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5582:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5582:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5617:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5628:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5613:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:10"
																				},
																				"nativeSrc": "5613:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5637:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5592:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:10"
																		},
																		"nativeSrc": "5592:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5582:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5188:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5233:9:10",
														"nodeType": "YulTypedName",
														"src": "5233:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5244:7:10",
														"nodeType": "YulTypedName",
														"src": "5244:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5256:6:10",
														"nodeType": "YulTypedName",
														"src": "5256:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5264:6:10",
														"nodeType": "YulTypedName",
														"src": "5264:6:10",
														"type": ""
													}
												],
												"src": "5188:474:10"
											},
											{
												"body": {
													"nativeSrc": "5696:152:10",
													"nodeType": "YulBlock",
													"src": "5696:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5716:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5706:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:10"
																},
																"nativeSrc": "5706:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5706:88:10"
															},
															"nativeSrc": "5706:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5810:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5803:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:10"
																},
																"nativeSrc": "5803:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5803:15:10"
															},
															"nativeSrc": "5803:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5834:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5837:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:10"
																},
																"nativeSrc": "5827:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5827:15:10"
															},
															"nativeSrc": "5827:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5668:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:10"
											},
											{
												"body": {
													"nativeSrc": "5905:269:10",
													"nodeType": "YulBlock",
													"src": "5905:269:10",
													"statements": [
														{
															"nativeSrc": "5915:22:10",
															"nodeType": "YulAssignment",
															"src": "5915:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5929:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5935:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5925:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:10"
																},
																"nativeSrc": "5925:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:10"
																}
															]
														},
														{
															"nativeSrc": "5946:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5976:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5982:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:10"
																},
																"nativeSrc": "5972:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5972:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5950:18:10",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6023:51:10",
																"nodeType": "YulBlock",
																"src": "6023:51:10",
																"statements": [
																	{
																		"nativeSrc": "6037:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6037:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6051:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6059:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6047:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:10"
																			},
																			"nativeSrc": "6047:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6037:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6003:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:10"
																},
																"nativeSrc": "5996:26:10",
																"nodeType": "YulFunctionCall",
																"src": "5996:26:10"
															},
															"nativeSrc": "5993:81:10",
															"nodeType": "YulIf",
															"src": "5993:81:10"
														},
														{
															"body": {
																"nativeSrc": "6126:42:10",
																"nodeType": "YulBlock",
																"src": "6126:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6140:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:10"
																			},
																			"nativeSrc": "6140:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:10"
																		},
																		"nativeSrc": "6140:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6090:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6113:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6121:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6110:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:10"
																		},
																		"nativeSrc": "6110:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6087:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:10"
																},
																"nativeSrc": "6087:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6087:38:10"
															},
															"nativeSrc": "6084:84:10",
															"nodeType": "YulIf",
															"src": "6084:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5854:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5889:4:10",
														"nodeType": "YulTypedName",
														"src": "5889:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5898:6:10",
														"nodeType": "YulTypedName",
														"src": "5898:6:10",
														"type": ""
													}
												],
												"src": "5854:320:10"
											},
											{
												"body": {
													"nativeSrc": "6245:53:10",
													"nodeType": "YulBlock",
													"src": "6245:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6262:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6285:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6285:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6267:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6267:17:10"
																		},
																		"nativeSrc": "6267:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6267:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6255:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:10"
																},
																"nativeSrc": "6255:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6255:37:10"
															},
															"nativeSrc": "6255:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6255:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6180:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6233:5:10",
														"nodeType": "YulTypedName",
														"src": "6233:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6240:3:10",
														"nodeType": "YulTypedName",
														"src": "6240:3:10",
														"type": ""
													}
												],
												"src": "6180:118:10"
											},
											{
												"body": {
													"nativeSrc": "6458:288:10",
													"nodeType": "YulBlock",
													"src": "6458:288:10",
													"statements": [
														{
															"nativeSrc": "6468:26:10",
															"nodeType": "YulAssignment",
															"src": "6468:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6480:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6480:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6491:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6491:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:10"
																},
																"nativeSrc": "6476:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6476:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6468:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6548:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6561:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6572:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6572:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:10"
																		},
																		"nativeSrc": "6557:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6504:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6504:43:10"
																},
																"nativeSrc": "6504:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6504:71:10"
															},
															"nativeSrc": "6504:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6504:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6653:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6638:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:10"
																		},
																		"nativeSrc": "6638:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6585:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6585:43:10"
																},
																"nativeSrc": "6585:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6585:72:10"
															},
															"nativeSrc": "6585:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6585:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6711:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6724:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6735:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6720:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:10"
																		},
																		"nativeSrc": "6720:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6667:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6667:43:10"
																},
																"nativeSrc": "6667:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6667:72:10"
															},
															"nativeSrc": "6667:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6667:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6304:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6414:9:10",
														"nodeType": "YulTypedName",
														"src": "6414:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6426:6:10",
														"nodeType": "YulTypedName",
														"src": "6426:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6434:6:10",
														"nodeType": "YulTypedName",
														"src": "6434:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6442:6:10",
														"nodeType": "YulTypedName",
														"src": "6442:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6453:4:10",
														"nodeType": "YulTypedName",
														"src": "6453:4:10",
														"type": ""
													}
												],
												"src": "6304:442:10"
											},
											{
												"body": {
													"nativeSrc": "6850:124:10",
													"nodeType": "YulBlock",
													"src": "6850:124:10",
													"statements": [
														{
															"nativeSrc": "6860:26:10",
															"nodeType": "YulAssignment",
															"src": "6860:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6872:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6883:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6883:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:10"
																},
																"nativeSrc": "6868:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6868:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6860:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6860:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6953:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6964:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6964:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6949:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:10"
																		},
																		"nativeSrc": "6949:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6896:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6896:43:10"
																},
																"nativeSrc": "6896:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6896:71:10"
															},
															"nativeSrc": "6896:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6896:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6752:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6822:9:10",
														"nodeType": "YulTypedName",
														"src": "6822:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6834:6:10",
														"nodeType": "YulTypedName",
														"src": "6834:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6845:4:10",
														"nodeType": "YulTypedName",
														"src": "6845:4:10",
														"type": ""
													}
												],
												"src": "6752:222:10"
											},
											{
												"body": {
													"nativeSrc": "7008:152:10",
													"nodeType": "YulBlock",
													"src": "7008:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:10"
																},
																"nativeSrc": "7018:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:10"
															},
															"nativeSrc": "7018:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:10"
																},
																"nativeSrc": "7115:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:10"
															},
															"nativeSrc": "7115:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:10"
																},
																"nativeSrc": "7139:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:10"
															},
															"nativeSrc": "7139:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:10"
											},
											{
												"body": {
													"nativeSrc": "7210:147:10",
													"nodeType": "YulBlock",
													"src": "7210:147:10",
													"statements": [
														{
															"nativeSrc": "7220:25:10",
															"nodeType": "YulAssignment",
															"src": "7220:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:10"
																},
																"nativeSrc": "7225:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:10"
																}
															]
														},
														{
															"nativeSrc": "7254:25:10",
															"nodeType": "YulAssignment",
															"src": "7254:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:10"
																},
																"nativeSrc": "7259:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:10"
																}
															]
														},
														{
															"nativeSrc": "7288:16:10",
															"nodeType": "YulAssignment",
															"src": "7288:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:10"
																},
																"nativeSrc": "7295:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:10",
																"nodeType": "YulBlock",
																"src": "7328:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:10"
																			},
																			"nativeSrc": "7330:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:10"
																		},
																		"nativeSrc": "7330:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:10"
																},
																"nativeSrc": "7317:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:10"
															},
															"nativeSrc": "7314:36:10",
															"nodeType": "YulIf",
															"src": "7314:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:10",
														"nodeType": "YulTypedName",
														"src": "7197:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:10",
														"nodeType": "YulTypedName",
														"src": "7200:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:10",
														"nodeType": "YulTypedName",
														"src": "7206:3:10",
														"type": ""
													}
												],
												"src": "7166:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c806340c10f191161006457806340c10f191461015a57806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b28565b60405180910390f35b6100d860048036038101906100d39190610bd9565b6102b4565b6040516100e59190610c31565b60405180910390f35b6100f66102d6565b6040516101039190610c59565b60405180910390f35b61012660048036038101906101219190610c72565b6102df565b6040516101339190610c31565b60405180910390f35b61014461030d565b6040516101519190610cdd565b60405180910390f35b610174600480360381019061016f9190610bd9565b610315565b005b610190600480360381019061018b9190610cf6565b610323565b60405161019d9190610c59565b60405180910390f35b6101ae610368565b6040516101bb9190610b28565b60405180910390f35b6101de60048036038101906101d99190610bd9565b6103f8565b6040516101eb9190610c31565b60405180910390f35b61020e60048036038101906102099190610d21565b61041a565b60405161021b9190610c59565b60405180910390f35b60606003805461023390610d8c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d8c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049c565b90506102cb8185856104a3565b600191505092915050565b5f600254905090565b5f806102e961049c565b90506102f68582856104b5565b610301858585610547565b60019150509392505050565b5f6012905090565b61031f8282610637565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461037790610d8c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610d8c565b80156103ee5780601f106103c5576101008083540402835291602001916103ee565b820191905f5260205f20905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b5f8061040261049c565b905061040f818585610547565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104b083838360016106b6565b505050565b5f6104c0848461041a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105415781811015610532578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052993929190610dcb565b60405180910390fd5b61054084848484035f6106b6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ae9190610e00565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610627575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061e9190610e00565b60405180910390fd5b610632838383610885565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069e9190610e00565b60405180910390fd5b6106b25f8383610885565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610726575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071d9190610e00565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610796575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078d9190610e00565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108769190610c59565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d5578060025f8282546108c99190610e46565b925050819055506109a3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095593929190610dcb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ea578060025f8282540392505081905550610a34565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a919190610c59565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ad5578082015181840152602081019050610aba565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610afa82610a9e565b610b048185610aa8565b9350610b14818560208601610ab8565b610b1d81610ae0565b840191505092915050565b5f6020820190508181035f830152610b408184610af0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7582610b4c565b9050919050565b610b8581610b6b565b8114610b8f575f80fd5b50565b5f81359050610ba081610b7c565b92915050565b5f819050919050565b610bb881610ba6565b8114610bc2575f80fd5b50565b5f81359050610bd381610baf565b92915050565b5f8060408385031215610bef57610bee610b48565b5b5f610bfc85828601610b92565b9250506020610c0d85828601610bc5565b9150509250929050565b5f8115159050919050565b610c2b81610c17565b82525050565b5f602082019050610c445f830184610c22565b92915050565b610c5381610ba6565b82525050565b5f602082019050610c6c5f830184610c4a565b92915050565b5f805f60608486031215610c8957610c88610b48565b5b5f610c9686828701610b92565b9350506020610ca786828701610b92565b9250506040610cb886828701610bc5565b9150509250925092565b5f60ff82169050919050565b610cd781610cc2565b82525050565b5f602082019050610cf05f830184610cce565b92915050565b5f60208284031215610d0b57610d0a610b48565b5b5f610d1884828501610b92565b91505092915050565b5f8060408385031215610d3757610d36610b48565b5b5f610d4485828601610b92565b9250506020610d5585828601610b92565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610da357607f821691505b602082108103610db657610db5610d5f565b5b50919050565b610dc581610b6b565b82525050565b5f606082019050610dde5f830186610dbc565b610deb6020830185610c4a565b610df86040830184610c4a565b949350505050565b5f602082019050610e135f830184610dbc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e5082610ba6565b9150610e5b83610ba6565b9250828201905080821115610e7357610e72610e19565b5b9291505056fea26469706673582212205a918c90f2e47db24a9217089b607006387af05140085e1670eb8fd4c9abb53364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x31F DUP3 DUP3 PUSH2 0x637 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A3 SWAP1 PUSH2 0xD8C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x402 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP PUSH2 0x40F DUP2 DUP6 DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C0 DUP5 DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x541 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x532 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x540 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x627 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x885 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B2 PUSH0 DUP4 DUP4 PUSH2 0x885 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x726 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAFA DUP3 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xB04 DUP2 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP4 POP PUSH2 0xB14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xAE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB40 DUP2 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFC DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0D DUP6 DUP3 DUP7 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH0 DUP4 ADD DUP5 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6C PUSH0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC96 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD18 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xB48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD44 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB6 JUMPI PUSH2 0xDB5 PUSH2 0xD5F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC5 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDDE PUSH0 DUP4 ADD DUP7 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xDEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xDF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH0 DUP4 ADD DUP5 PUSH2 0xDBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE50 DUP3 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0xE19 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SWAP2 DUP13 SWAP1 CALLCODE 0xE4 PUSH30 0xB24A9217089B607006387AF05140085E1670EB8FD4C9ABB53364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "120:173:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;205:85:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;205:85:8:-;265:17;271:2;275:6;265:5;:17::i;:::-;205:85;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "751800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 197,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 155,
									"end": 197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "536F6F6E546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "53544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 120,
									"end": 293,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 120,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 293,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a918c90f2e47db24a9217089b607006387af05140085e1670eb8fd4c9abb53364736f6c63430008180033",
									".code": [
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 120,
											"end": 293,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 205,
											"end": 290,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 290,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 265,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 271,
											"end": 273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 265,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 265,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 265,
											"end": 282,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 265,
											"end": 282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6267,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6504,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6585,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6667,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6896,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/contracts/SoonToken.sol",
								"src/contracts/metaTransacion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/SoonToken.sol\":\"SoonToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/contracts/SoonToken.sol\":{\"keccak256\":\"0x0ce5d1fdee9cf884bad206c38024177e91a10a42bf1b21b5ca877b009c404e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304624e6eadbcc3c3c4625e5a7cc4813c1581afb145fd6083d9be7f0e67262b9\",\"dweb:/ipfs/QmZyb3d7BdtHVN8HCGpYDd9eAet4z6Db99HDDiErvfg3pu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "src/contracts/SoonToken.sol:SoonToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "src/contracts/SoonToken.sol:SoonToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "src/contracts/SoonToken.sol:SoonToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "src/contracts/SoonToken.sol:SoonToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "src/contracts/SoonToken.sol:SoonToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/metaTransacion.sol": {
				"MetaTransaction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_CA",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"name": "event02",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "event03",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "evnet01",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_address",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "token",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "message",
									"type": "string[]"
								},
								{
									"internalType": "bytes[]",
									"name": "signature",
									"type": "bytes[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "signTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sign",
									"type": "bytes"
								}
							],
							"name": "splitSign",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contracts/metaTransacion.sol\":143:2766  contract MetaTransaction {... */\n  mstore(0x40, 0x80)\n    /* \"src/contracts/metaTransacion.sol\":203:273  constructor(address _CA) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/contracts/metaTransacion.sol\":261:264  _CA */\n  dup1\n    /* \"src/contracts/metaTransacion.sol\":239:248  soonToken */\n  0x00\n  dup1\n    /* \"src/contracts/metaTransacion.sol\":239:265  soonToken = SoonToken(_CA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/contracts/metaTransacion.sol\":203:273  constructor(address _CA) {... */\n  pop\n    /* \"src/contracts/metaTransacion.sol\":143:2766  contract MetaTransaction {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/contracts/metaTransacion.sol\":143:2766  contract MetaTransaction {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/contracts/metaTransacion.sol\":143:2766  contract MetaTransaction {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2ff4bb4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x883a6c75\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x95e0e0c9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/contracts/metaTransacion.sol\":1867:2626  function splitSign(... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/contracts/metaTransacion.sol\":281:754  function mint(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"src/contracts/metaTransacion.sol\":762:1361  function signTransaction(... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"src/contracts/metaTransacion.sol\":1867:2626  function splitSign(... */\n    tag_9:\n        /* \"src/contracts/metaTransacion.sol\":1942:1951  bytes32 r */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":1953:1962  bytes32 s */\n      dup1\n        /* \"src/contracts/metaTransacion.sol\":1964:1971  uint8 v */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":2046:2048  65 */\n      0x41\n        /* \"src/contracts/metaTransacion.sol\":2031:2035  sign */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":2031:2042  sign.length */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":2031:2048  sign.length == 65 */\n      eq\n        /* \"src/contracts/metaTransacion.sol\":2023:2049  require(sign.length == 65) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"src/contracts/metaTransacion.sol\":2251:2253  32 */\n      0x20\n        /* \"src/contracts/metaTransacion.sol\":2245:2249  sign */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":2241:2254  add(sign, 32) */\n      add\n        /* \"src/contracts/metaTransacion.sol\":2235:2255  mload(add(sign, 32)) */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":2230:2255  r := mload(add(sign, 32)) */\n      swap3\n      pop\n        /* \"src/contracts/metaTransacion.sol\":2353:2355  64 */\n      0x40\n        /* \"src/contracts/metaTransacion.sol\":2347:2351  sign */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":2343:2356  add(sign, 64) */\n      add\n        /* \"src/contracts/metaTransacion.sol\":2337:2357  mload(add(sign, 64)) */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":2332:2357  s := mload(add(sign, 64)) */\n      swap2\n      pop\n        /* \"src/contracts/metaTransacion.sol\":2454:2456  96 */\n      0x60\n        /* \"src/contracts/metaTransacion.sol\":2448:2452  sign */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":2444:2457  add(sign, 96) */\n      add\n        /* \"src/contracts/metaTransacion.sol\":2438:2458  mload(add(sign, 96)) */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":2435:2436  0 */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":2430:2459  byte(0, mload(add(sign, 96))) */\n      byte\n        /* \"src/contracts/metaTransacion.sol\":2425:2459  v := byte(0, mload(add(sign, 96))) */\n      swap1\n      pop\n        /* \"src/contracts/metaTransacion.sol\":2541:2543  27 */\n      0x1b\n        /* \"src/contracts/metaTransacion.sol\":2537:2538  v */\n      dup2\n        /* \"src/contracts/metaTransacion.sol\":2537:2543  v < 27 */\n      0xff\n      and\n      lt\n        /* \"src/contracts/metaTransacion.sol\":2533:2579  if (v < 27) {... */\n      iszero\n      tag_22\n      jumpi\n        /* \"src/contracts/metaTransacion.sol\":2565:2567  27 */\n      0x1b\n        /* \"src/contracts/metaTransacion.sol\":2560:2567  v += 27 */\n      dup2\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap1\n      pop\n        /* \"src/contracts/metaTransacion.sol\":2533:2579  if (v < 27) {... */\n    tag_22:\n        /* \"src/contracts/metaTransacion.sol\":2604:2606  27 */\n      0x1b\n        /* \"src/contracts/metaTransacion.sol\":2599:2600  v */\n      dup2\n        /* \"src/contracts/metaTransacion.sol\":2599:2606  v == 27 */\n      0xff\n      and\n      eq\n        /* \"src/contracts/metaTransacion.sol\":2599:2617  v == 27 || v == 28 */\n      dup1\n      tag_25\n      jumpi\n      pop\n        /* \"src/contracts/metaTransacion.sol\":2615:2617  28 */\n      0x1c\n        /* \"src/contracts/metaTransacion.sol\":2610:2611  v */\n      dup2\n        /* \"src/contracts/metaTransacion.sol\":2610:2617  v == 28 */\n      0xff\n      and\n      eq\n        /* \"src/contracts/metaTransacion.sol\":2599:2617  v == 27 || v == 28 */\n    tag_25:\n        /* \"src/contracts/metaTransacion.sol\":2591:2618  require(v == 27 || v == 28) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"src/contracts/metaTransacion.sol\":1867:2626  function splitSign(... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"src/contracts/metaTransacion.sol\":281:754  function mint(... */\n    tag_15:\n        /* \"src/contracts/metaTransacion.sol\":460:469  uint256 i */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":455:747  for (uint256 i = 0; i < _address.length; i++) {... */\n    tag_28:\n        /* \"src/contracts/metaTransacion.sol\":479:487  _address */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":479:494  _address.length */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":475:476  i */\n      dup2\n        /* \"src/contracts/metaTransacion.sol\":475:494  i < _address.length */\n      lt\n        /* \"src/contracts/metaTransacion.sol\":455:747  for (uint256 i = 0; i < _address.length; i++) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"src/contracts/metaTransacion.sol\":577:631  signTransaction(_address[i], message[i], signature[i]) */\n      tag_31\n        /* \"src/contracts/metaTransacion.sol\":593:601  _address */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":602:603  i */\n      dup3\n        /* \"src/contracts/metaTransacion.sol\":593:604  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":606:613  message */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":614:615  i */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":606:616  message[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      tag_36\n      tag_34\n      jump\t// in\n    tag_36:\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":618:627  signature */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":628:629  i */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":618:630  signature[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      tag_38\n      tag_34\n      jump\t// in\n    tag_38:\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":577:592  signTransaction */\n      tag_19\n        /* \"src/contracts/metaTransacion.sol\":577:631  signTransaction(_address[i], message[i], signature[i]) */\n      jump\t// in\n    tag_31:\n        /* \"src/contracts/metaTransacion.sol\":646:655  soonToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/contracts/metaTransacion.sol\":646:660  soonToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/contracts/metaTransacion.sol\":661:669  _address */\n      dup7\n        /* \"src/contracts/metaTransacion.sol\":670:671  i */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":661:672  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_34\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":674:679  token */\n      dup7\n        /* \"src/contracts/metaTransacion.sol\":680:681  i */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":674:682  token[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_41\n      jumpi\n      tag_42\n      tag_34\n      jump\t// in\n    tag_42:\n    tag_41:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":646:683  soonToken.mint(_address[i], token[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contracts/metaTransacion.sol\":703:735  evnet01(_address[i], message[i]) */\n      0x710c6bec3cf443b5afbda9ff86716f3a0d00db3ddaee6cc493c93be240533e12\n        /* \"src/contracts/metaTransacion.sol\":711:719  _address */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":720:721  i */\n      dup3\n        /* \"src/contracts/metaTransacion.sol\":711:722  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_34\n      jump\t// in\n    tag_49:\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":724:731  message */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":732:733  i */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":724:734  message[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_34\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contracts/metaTransacion.sol\":703:735  evnet01(_address[i], message[i]) */\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contracts/metaTransacion.sol\":496:499  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/contracts/metaTransacion.sol\":455:747  for (uint256 i = 0; i < _address.length; i++) {... */\n      jump(tag_28)\n    tag_29:\n      pop\n        /* \"src/contracts/metaTransacion.sol\":281:754  function mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contracts/metaTransacion.sol\":762:1361  function signTransaction(... */\n    tag_19:\n        /* \"src/contracts/metaTransacion.sol\":897:912  bytes32 ethSign */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":915:938  getEthSignMsgHash(_msg) */\n      tag_55\n        /* \"src/contracts/metaTransacion.sol\":933:937  _msg */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":915:932  getEthSignMsgHash */\n      tag_56\n        /* \"src/contracts/metaTransacion.sol\":915:938  getEthSignMsgHash(_msg) */\n      jump\t// in\n    tag_55:\n        /* \"src/contracts/metaTransacion.sol\":897:938  bytes32 ethSign = getEthSignMsgHash(_msg) */\n      swap1\n      pop\n        /* \"src/contracts/metaTransacion.sol\":995:1004  bytes32 r */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":1006:1015  bytes32 s */\n      dup1\n        /* \"src/contracts/metaTransacion.sol\":1017:1024  uint8 v */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":1028:1048  splitSign(signature) */\n      tag_57\n        /* \"src/contracts/metaTransacion.sol\":1038:1047  signature */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":1028:1037  splitSign */\n      tag_9\n        /* \"src/contracts/metaTransacion.sol\":1028:1048  splitSign(signature) */\n      jump\t// in\n    tag_57:\n        /* \"src/contracts/metaTransacion.sol\":994:1048  (bytes32 r, bytes32 s, uint8 v) = splitSign(signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"src/contracts/metaTransacion.sol\":1201:1217  event02(r, s, v) */\n      0x29bd5e82392230298810019d37e60fc402505adb5afa0f05072474634fcca380\n        /* \"src/contracts/metaTransacion.sol\":1209:1210  r */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":1212:1213  s */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":1215:1216  v */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":1201:1217  event02(r, s, v) */\n      mload(0x40)\n      tag_58\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contracts/metaTransacion.sol\":1233:1269  event03(ecrecover(ethSign, v, r, s)) */\n      0x690c22a325937e3625a470a9f14c15683846660270fb112ea5c93a7ea9de7466\n        /* \"src/contracts/metaTransacion.sol\":1241:1268  ecrecover(ethSign, v, r, s) */\n      0x01\n        /* \"src/contracts/metaTransacion.sol\":1251:1258  ethSign */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":1260:1261  v */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":1263:1264  r */\n      dup7\n        /* \"src/contracts/metaTransacion.sol\":1266:1267  s */\n      dup7\n        /* \"src/contracts/metaTransacion.sol\":1241:1268  ecrecover(ethSign, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_59\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"src/contracts/metaTransacion.sol\":1233:1269  event03(ecrecover(ethSign, v, r, s)) */\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contracts/metaTransacion.sol\":1285:1298  event03(user) */\n      0x690c22a325937e3625a470a9f14c15683846660270fb112ea5c93a7ea9de7466\n        /* \"src/contracts/metaTransacion.sol\":1293:1297  user */\n      dup8\n        /* \"src/contracts/metaTransacion.sol\":1285:1298  event03(user) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contracts/metaTransacion.sol\":1325:1352  ecrecover(ethSign, v, r, s) */\n      0x01\n        /* \"src/contracts/metaTransacion.sol\":1335:1342  ethSign */\n      dup5\n        /* \"src/contracts/metaTransacion.sol\":1344:1345  v */\n      dup3\n        /* \"src/contracts/metaTransacion.sol\":1347:1348  r */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":1350:1351  s */\n      dup6\n        /* \"src/contracts/metaTransacion.sol\":1325:1352  ecrecover(ethSign, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_66\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"src/contracts/metaTransacion.sol\":1317:1352  user == ecrecover(ethSign, v, r, s) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/contracts/metaTransacion.sol\":1317:1321  user */\n      dup8\n        /* \"src/contracts/metaTransacion.sol\":1317:1352  user == ecrecover(ethSign, v, r, s) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/contracts/metaTransacion.sol\":1309:1353  require(user == ecrecover(ethSign, v, r, s)) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"src/contracts/metaTransacion.sol\":886:1361  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contracts/metaTransacion.sol\":762:1361  function signTransaction(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contracts/metaTransacion.sol\":1369:1859  function getEthSignMsgHash(... */\n    tag_56:\n        /* \"src/contracts/metaTransacion.sol\":1455:1462  bytes32 */\n      0x00\n        /* \"src/contracts/metaTransacion.sol\":1575:1589  uint msgLength */\n      dup1\n        /* \"src/contracts/metaTransacion.sol\":1598:1602  _msg */\n      dup3\n        /* \"src/contracts/metaTransacion.sol\":1592:1610  bytes(_msg).length */\n      mload\n        /* \"src/contracts/metaTransacion.sol\":1575:1610  uint msgLength = bytes(_msg).length */\n      swap1\n      pop\n        /* \"src/contracts/metaTransacion.sol\":1763:1790  Strings.toString(msgLength) */\n      tag_71\n        /* \"src/contracts/metaTransacion.sol\":1780:1789  msgLength */\n      dup2\n        /* \"src/contracts/metaTransacion.sol\":1763:1779  Strings.toString */\n      tag_72\n        /* \"src/contracts/metaTransacion.sol\":1763:1790  Strings.toString(msgLength) */\n      jump\t// in\n    tag_71:\n        /* \"src/contracts/metaTransacion.sol\":1813:1817  _msg */\n      dup4\n        /* \"src/contracts/metaTransacion.sol\":1669:1836  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/contracts/metaTransacion.sol\":1641:1851  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/contracts/metaTransacion.sol\":1621:1851  return... */\n      swap2\n      pop\n      pop\n        /* \"src/contracts/metaTransacion.sol\":1369:1859  function getEthSignMsgHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_76\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_77\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n    tag_78:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_81:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_82\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_90\n      jumpi\n      tag_91\n      tag_86\n      jump\t// in\n    tag_91:\n    tag_90:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_93\n      jumpi\n      tag_94\n      tag_86\n      jump\t// in\n    tag_94:\n    tag_93:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_96\n      jumpi\n      tag_97\n      tag_86\n      jump\t// in\n    tag_97:\n    tag_96:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_99\n      jumpi\n      tag_100\n      tag_86\n      jump\t// in\n    tag_100:\n    tag_99:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_102\n      jumpi\n      tag_103\n      tag_86\n      jump\t// in\n    tag_103:\n    tag_102:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_105\n      jumpi\n      tag_106\n      tag_86\n      jump\t// in\n    tag_106:\n    tag_105:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_108:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_109:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_110:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_111:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_112:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_113:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_80:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_114:\n        /* \"#utility.yul\":957:984   */\n      tag_167\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_113\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_169\n      tag_80\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1030:1118   */\n    tag_168:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_115:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_171\n      tag_108\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_172\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1603   */\n    tag_116:\n        /* \"#utility.yul\":1357:1361   */\n      0x00\n        /* \"#utility.yul\":1447:1465   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1439:1445   */\n      dup3\n        /* \"#utility.yul\":1436:1466   */\n      gt\n        /* \"#utility.yul\":1433:1489   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1469:1487   */\n      tag_175\n      tag_80\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1433:1489   */\n    tag_174:\n        /* \"#utility.yul\":1507:1536   */\n      tag_176\n        /* \"#utility.yul\":1529:1535   */\n      dup3\n        /* \"#utility.yul\":1507:1536   */\n      tag_113\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1499:1536   */\n      swap1\n      pop\n        /* \"#utility.yul\":1591:1595   */\n      0x20\n        /* \"#utility.yul\":1585:1589   */\n      dup2\n        /* \"#utility.yul\":1581:1596   */\n      add\n        /* \"#utility.yul\":1573:1596   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1609:1755   */\n    tag_117:\n        /* \"#utility.yul\":1706:1712   */\n      dup3\n        /* \"#utility.yul\":1701:1704   */\n      dup2\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1683:1713   */\n      calldatacopy\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1738:1744   */\n      dup4\n        /* \"#utility.yul\":1733:1736   */\n      dup4\n        /* \"#utility.yul\":1729:1745   */\n      add\n        /* \"#utility.yul\":1722:1749   */\n      mstore\n        /* \"#utility.yul\":1609:1755   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:2184   */\n    tag_118:\n        /* \"#utility.yul\":1838:1843   */\n      0x00\n        /* \"#utility.yul\":1863:1928   */\n      tag_179\n        /* \"#utility.yul\":1879:1927   */\n      tag_180\n        /* \"#utility.yul\":1920:1926   */\n      dup5\n        /* \"#utility.yul\":1879:1927   */\n      tag_116\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1863:1928   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1854:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1951:1957   */\n      dup3\n        /* \"#utility.yul\":1944:1949   */\n      dup2\n        /* \"#utility.yul\":1937:1958   */\n      mstore\n        /* \"#utility.yul\":1989:1993   */\n      0x20\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1978:1994   */\n      add\n        /* \"#utility.yul\":2027:2030   */\n      dup5\n        /* \"#utility.yul\":2018:2024   */\n      dup5\n        /* \"#utility.yul\":2013:2016   */\n      dup5\n        /* \"#utility.yul\":2009:2025   */\n      add\n        /* \"#utility.yul\":2006:2031   */\n      gt\n        /* \"#utility.yul\":2003:2115   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2034:2113   */\n      tag_182\n      tag_112\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2003:2115   */\n    tag_181:\n        /* \"#utility.yul\":2124:2178   */\n      tag_183\n        /* \"#utility.yul\":2171:2177   */\n      dup5\n        /* \"#utility.yul\":2166:2169   */\n      dup3\n        /* \"#utility.yul\":2161:2164   */\n      dup6\n        /* \"#utility.yul\":2124:2178   */\n      tag_117\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1844:2184   */\n      pop\n        /* \"#utility.yul\":1761:2184   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2203:2541   */\n    tag_119:\n        /* \"#utility.yul\":2258:2263   */\n      0x00\n        /* \"#utility.yul\":2307:2310   */\n      dup3\n        /* \"#utility.yul\":2300:2304   */\n      0x1f\n        /* \"#utility.yul\":2292:2298   */\n      dup4\n        /* \"#utility.yul\":2288:2305   */\n      add\n        /* \"#utility.yul\":2284:2311   */\n      slt\n        /* \"#utility.yul\":2274:2396   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2315:2394   */\n      tag_186\n      tag_111\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2274:2396   */\n    tag_185:\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2419:2439   */\n      calldataload\n        /* \"#utility.yul\":2457:2535   */\n      tag_187\n        /* \"#utility.yul\":2531:2534   */\n      dup5\n        /* \"#utility.yul\":2523:2529   */\n      dup3\n        /* \"#utility.yul\":2516:2520   */\n      0x20\n        /* \"#utility.yul\":2508:2514   */\n      dup7\n        /* \"#utility.yul\":2504:2521   */\n      add\n        /* \"#utility.yul\":2457:2535   */\n      tag_118\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2448:2535   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2541   */\n      pop\n        /* \"#utility.yul\":2203:2541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2547:3054   */\n    tag_8:\n        /* \"#utility.yul\":2615:2621   */\n      0x00\n        /* \"#utility.yul\":2664:2666   */\n      0x20\n        /* \"#utility.yul\":2652:2661   */\n      dup3\n        /* \"#utility.yul\":2643:2650   */\n      dup5\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_190\n      tag_109\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2632:2751   */\n    tag_189:\n        /* \"#utility.yul\":2818:2819   */\n      0x00\n        /* \"#utility.yul\":2807:2816   */\n      dup3\n        /* \"#utility.yul\":2803:2820   */\n      add\n        /* \"#utility.yul\":2790:2821   */\n      calldataload\n        /* \"#utility.yul\":2848:2866   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2840:2846   */\n      dup2\n        /* \"#utility.yul\":2837:2867   */\n      gt\n        /* \"#utility.yul\":2834:2951   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2870:2949   */\n      tag_192\n      tag_110\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2834:2951   */\n    tag_191:\n        /* \"#utility.yul\":2975:3037   */\n      tag_193\n        /* \"#utility.yul\":3029:3036   */\n      dup5\n        /* \"#utility.yul\":3020:3026   */\n      dup3\n        /* \"#utility.yul\":3009:3018   */\n      dup6\n        /* \"#utility.yul\":3005:3027   */\n      add\n        /* \"#utility.yul\":2975:3037   */\n      tag_119\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2965:3037   */\n      swap2\n      pop\n        /* \"#utility.yul\":2761:3047   */\n      pop\n        /* \"#utility.yul\":2547:3054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3137   */\n    tag_120:\n        /* \"#utility.yul\":3097:3104   */\n      0x00\n        /* \"#utility.yul\":3126:3131   */\n      dup2\n        /* \"#utility.yul\":3115:3131   */\n      swap1\n      pop\n        /* \"#utility.yul\":3060:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3261   */\n    tag_121:\n        /* \"#utility.yul\":3230:3254   */\n      tag_196\n        /* \"#utility.yul\":3248:3253   */\n      dup2\n        /* \"#utility.yul\":3230:3254   */\n      tag_120\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3225:3228   */\n      dup3\n        /* \"#utility.yul\":3218:3255   */\n      mstore\n        /* \"#utility.yul\":3143:3261   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3267:3353   */\n    tag_122:\n        /* \"#utility.yul\":3302:3309   */\n      0x00\n        /* \"#utility.yul\":3342:3346   */\n      0xff\n        /* \"#utility.yul\":3335:3340   */\n      dup3\n        /* \"#utility.yul\":3331:3347   */\n      and\n        /* \"#utility.yul\":3320:3347   */\n      swap1\n      pop\n        /* \"#utility.yul\":3267:3353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3359:3471   */\n    tag_123:\n        /* \"#utility.yul\":3442:3464   */\n      tag_199\n        /* \"#utility.yul\":3458:3463   */\n      dup2\n        /* \"#utility.yul\":3442:3464   */\n      tag_122\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3437:3440   */\n      dup3\n        /* \"#utility.yul\":3430:3465   */\n      mstore\n        /* \"#utility.yul\":3359:3471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3911   */\n    tag_11:\n        /* \"#utility.yul\":3622:3626   */\n      0x00\n        /* \"#utility.yul\":3660:3662   */\n      0x60\n        /* \"#utility.yul\":3649:3658   */\n      dup3\n        /* \"#utility.yul\":3645:3663   */\n      add\n        /* \"#utility.yul\":3637:3663   */\n      swap1\n      pop\n        /* \"#utility.yul\":3673:3744   */\n      tag_201\n        /* \"#utility.yul\":3741:3742   */\n      0x00\n        /* \"#utility.yul\":3730:3739   */\n      dup4\n        /* \"#utility.yul\":3726:3743   */\n      add\n        /* \"#utility.yul\":3717:3723   */\n      dup7\n        /* \"#utility.yul\":3673:3744   */\n      tag_121\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3754:3826   */\n      tag_202\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"#utility.yul\":3811:3820   */\n      dup4\n        /* \"#utility.yul\":3807:3825   */\n      add\n        /* \"#utility.yul\":3798:3804   */\n      dup6\n        /* \"#utility.yul\":3754:3826   */\n      tag_121\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3836:3904   */\n      tag_203\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3889:3898   */\n      dup4\n        /* \"#utility.yul\":3885:3903   */\n      add\n        /* \"#utility.yul\":3876:3882   */\n      dup5\n        /* \"#utility.yul\":3836:3904   */\n      tag_123\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3477:3911   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3917:4228   */\n    tag_124:\n        /* \"#utility.yul\":3994:3998   */\n      0x00\n        /* \"#utility.yul\":4084:4102   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4076:4082   */\n      dup3\n        /* \"#utility.yul\":4073:4103   */\n      gt\n        /* \"#utility.yul\":4070:4126   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":4106:4124   */\n      tag_206\n      tag_80\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4070:4126   */\n    tag_205:\n        /* \"#utility.yul\":4156:4160   */\n      0x20\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4144:4161   */\n      mul\n        /* \"#utility.yul\":4136:4161   */\n      swap1\n      pop\n        /* \"#utility.yul\":4216:4220   */\n      0x20\n        /* \"#utility.yul\":4210:4214   */\n      dup2\n        /* \"#utility.yul\":4206:4221   */\n      add\n        /* \"#utility.yul\":4198:4221   */\n      swap1\n      pop\n        /* \"#utility.yul\":3917:4228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4234:4351   */\n    tag_125:\n        /* \"#utility.yul\":4343:4344   */\n      0x00\n        /* \"#utility.yul\":4340:4341   */\n      dup1\n        /* \"#utility.yul\":4333:4345   */\n      revert\n        /* \"#utility.yul\":4357:4483   */\n    tag_126:\n        /* \"#utility.yul\":4394:4401   */\n      0x00\n        /* \"#utility.yul\":4434:4476   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4427:4432   */\n      dup3\n        /* \"#utility.yul\":4423:4477   */\n      and\n        /* \"#utility.yul\":4412:4477   */\n      swap1\n      pop\n        /* \"#utility.yul\":4357:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4585   */\n    tag_127:\n        /* \"#utility.yul\":4526:4533   */\n      0x00\n        /* \"#utility.yul\":4555:4579   */\n      tag_210\n        /* \"#utility.yul\":4573:4578   */\n      dup3\n        /* \"#utility.yul\":4555:4579   */\n      tag_126\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4544:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4489:4585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4713   */\n    tag_128:\n        /* \"#utility.yul\":4664:4688   */\n      tag_212\n        /* \"#utility.yul\":4682:4687   */\n      dup2\n        /* \"#utility.yul\":4664:4688   */\n      tag_127\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4657:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4689   */\n      eq\n        /* \"#utility.yul\":4644:4707   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4703:4704   */\n      0x00\n        /* \"#utility.yul\":4700:4701   */\n      dup1\n        /* \"#utility.yul\":4693:4705   */\n      revert\n        /* \"#utility.yul\":4644:4707   */\n    tag_213:\n        /* \"#utility.yul\":4591:4713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4719:4858   */\n    tag_129:\n        /* \"#utility.yul\":4765:4770   */\n      0x00\n        /* \"#utility.yul\":4803:4809   */\n      dup2\n        /* \"#utility.yul\":4790:4810   */\n      calldataload\n        /* \"#utility.yul\":4781:4810   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4852   */\n      tag_215\n        /* \"#utility.yul\":4846:4851   */\n      dup2\n        /* \"#utility.yul\":4819:4852   */\n      tag_128\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4719:4858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4881:5591   */\n    tag_130:\n        /* \"#utility.yul\":4977:4982   */\n      0x00\n        /* \"#utility.yul\":5002:5083   */\n      tag_217\n        /* \"#utility.yul\":5018:5082   */\n      tag_218\n        /* \"#utility.yul\":5075:5081   */\n      dup5\n        /* \"#utility.yul\":5018:5082   */\n      tag_124\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5002:5083   */\n      tag_115\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4993:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5103:5108   */\n      dup1\n        /* \"#utility.yul\":5132:5138   */\n      dup4\n        /* \"#utility.yul\":5125:5130   */\n      dup3\n        /* \"#utility.yul\":5118:5139   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x20\n        /* \"#utility.yul\":5159:5164   */\n      dup3\n        /* \"#utility.yul\":5155:5171   */\n      add\n        /* \"#utility.yul\":5148:5171   */\n      swap1\n      pop\n        /* \"#utility.yul\":5219:5223   */\n      0x20\n        /* \"#utility.yul\":5211:5217   */\n      dup5\n        /* \"#utility.yul\":5207:5224   */\n      mul\n        /* \"#utility.yul\":5199:5205   */\n      dup4\n        /* \"#utility.yul\":5195:5225   */\n      add\n        /* \"#utility.yul\":5248:5251   */\n      dup6\n        /* \"#utility.yul\":5240:5246   */\n      dup2\n        /* \"#utility.yul\":5237:5252   */\n      gt\n        /* \"#utility.yul\":5234:5356   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5267:5346   */\n      tag_220\n      tag_125\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5234:5356   */\n    tag_219:\n        /* \"#utility.yul\":5382:5388   */\n      dup4\n        /* \"#utility.yul\":5365:5585   */\n    tag_221:\n        /* \"#utility.yul\":5399:5405   */\n      dup2\n        /* \"#utility.yul\":5394:5397   */\n      dup2\n        /* \"#utility.yul\":5391:5406   */\n      lt\n        /* \"#utility.yul\":5365:5585   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5474:5477   */\n      dup1\n        /* \"#utility.yul\":5503:5540   */\n      tag_224\n        /* \"#utility.yul\":5536:5539   */\n      dup9\n        /* \"#utility.yul\":5524:5534   */\n      dup3\n        /* \"#utility.yul\":5503:5540   */\n      tag_129\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5498:5501   */\n      dup5\n        /* \"#utility.yul\":5491:5541   */\n      mstore\n        /* \"#utility.yul\":5570:5574   */\n      0x20\n        /* \"#utility.yul\":5565:5568   */\n      dup5\n        /* \"#utility.yul\":5561:5575   */\n      add\n        /* \"#utility.yul\":5554:5575   */\n      swap4\n      pop\n        /* \"#utility.yul\":5441:5585   */\n      pop\n        /* \"#utility.yul\":5425:5429   */\n      0x20\n        /* \"#utility.yul\":5420:5423   */\n      dup2\n        /* \"#utility.yul\":5416:5430   */\n      add\n        /* \"#utility.yul\":5409:5430   */\n      swap1\n      pop\n        /* \"#utility.yul\":5365:5585   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":5369:5390   */\n      pop\n        /* \"#utility.yul\":4983:5591   */\n      pop\n      pop\n        /* \"#utility.yul\":4881:5591   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5984   */\n    tag_131:\n        /* \"#utility.yul\":5685:5690   */\n      0x00\n        /* \"#utility.yul\":5734:5737   */\n      dup3\n        /* \"#utility.yul\":5727:5731   */\n      0x1f\n        /* \"#utility.yul\":5719:5725   */\n      dup4\n        /* \"#utility.yul\":5715:5732   */\n      add\n        /* \"#utility.yul\":5711:5738   */\n      slt\n        /* \"#utility.yul\":5701:5823   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5742:5821   */\n      tag_227\n      tag_111\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5701:5823   */\n    tag_226:\n        /* \"#utility.yul\":5859:5865   */\n      dup2\n        /* \"#utility.yul\":5846:5866   */\n      calldataload\n        /* \"#utility.yul\":5884:5978   */\n      tag_228\n        /* \"#utility.yul\":5974:5977   */\n      dup5\n        /* \"#utility.yul\":5966:5972   */\n      dup3\n        /* \"#utility.yul\":5959:5963   */\n      0x20\n        /* \"#utility.yul\":5951:5957   */\n      dup7\n        /* \"#utility.yul\":5947:5964   */\n      add\n        /* \"#utility.yul\":5884:5978   */\n      tag_130\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5875:5978   */\n      swap2\n      pop\n        /* \"#utility.yul\":5691:5984   */\n      pop\n        /* \"#utility.yul\":5614:5984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6301   */\n    tag_132:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6157:6175   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6149:6155   */\n      dup3\n        /* \"#utility.yul\":6146:6176   */\n      gt\n        /* \"#utility.yul\":6143:6199   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6179:6197   */\n      tag_231\n      tag_80\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6143:6199   */\n    tag_230:\n        /* \"#utility.yul\":6229:6233   */\n      0x20\n        /* \"#utility.yul\":6221:6227   */\n      dup3\n        /* \"#utility.yul\":6217:6234   */\n      mul\n        /* \"#utility.yul\":6209:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":6289:6293   */\n      0x20\n        /* \"#utility.yul\":6283:6287   */\n      dup2\n        /* \"#utility.yul\":6279:6294   */\n      add\n        /* \"#utility.yul\":6271:6294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5990:6301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6307:6384   */\n    tag_133:\n        /* \"#utility.yul\":6344:6351   */\n      0x00\n        /* \"#utility.yul\":6373:6378   */\n      dup2\n        /* \"#utility.yul\":6362:6378   */\n      swap1\n      pop\n        /* \"#utility.yul\":6307:6384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6390:6512   */\n    tag_134:\n        /* \"#utility.yul\":6463:6487   */\n      tag_234\n        /* \"#utility.yul\":6481:6486   */\n      dup2\n        /* \"#utility.yul\":6463:6487   */\n      tag_133\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6456:6461   */\n      dup2\n        /* \"#utility.yul\":6453:6488   */\n      eq\n        /* \"#utility.yul\":6443:6506   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":6502:6503   */\n      0x00\n        /* \"#utility.yul\":6499:6500   */\n      dup1\n        /* \"#utility.yul\":6492:6504   */\n      revert\n        /* \"#utility.yul\":6443:6506   */\n    tag_235:\n        /* \"#utility.yul\":6390:6512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6518:6657   */\n    tag_135:\n        /* \"#utility.yul\":6564:6569   */\n      0x00\n        /* \"#utility.yul\":6602:6608   */\n      dup2\n        /* \"#utility.yul\":6589:6609   */\n      calldataload\n        /* \"#utility.yul\":6580:6609   */\n      swap1\n      pop\n        /* \"#utility.yul\":6618:6651   */\n      tag_237\n        /* \"#utility.yul\":6645:6650   */\n      dup2\n        /* \"#utility.yul\":6618:6651   */\n      tag_134\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6518:6657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:7390   */\n    tag_136:\n        /* \"#utility.yul\":6776:6781   */\n      0x00\n        /* \"#utility.yul\":6801:6882   */\n      tag_239\n        /* \"#utility.yul\":6817:6881   */\n      tag_240\n        /* \"#utility.yul\":6874:6880   */\n      dup5\n        /* \"#utility.yul\":6817:6881   */\n      tag_132\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6801:6882   */\n      tag_115\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6792:6882   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:6907   */\n      dup1\n        /* \"#utility.yul\":6931:6937   */\n      dup4\n        /* \"#utility.yul\":6924:6929   */\n      dup3\n        /* \"#utility.yul\":6917:6938   */\n      mstore\n        /* \"#utility.yul\":6965:6969   */\n      0x20\n        /* \"#utility.yul\":6958:6963   */\n      dup3\n        /* \"#utility.yul\":6954:6970   */\n      add\n        /* \"#utility.yul\":6947:6970   */\n      swap1\n      pop\n        /* \"#utility.yul\":7018:7022   */\n      0x20\n        /* \"#utility.yul\":7010:7016   */\n      dup5\n        /* \"#utility.yul\":7006:7023   */\n      mul\n        /* \"#utility.yul\":6998:7004   */\n      dup4\n        /* \"#utility.yul\":6994:7024   */\n      add\n        /* \"#utility.yul\":7047:7050   */\n      dup6\n        /* \"#utility.yul\":7039:7045   */\n      dup2\n        /* \"#utility.yul\":7036:7051   */\n      gt\n        /* \"#utility.yul\":7033:7155   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":7066:7145   */\n      tag_242\n      tag_125\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7033:7155   */\n    tag_241:\n        /* \"#utility.yul\":7181:7187   */\n      dup4\n        /* \"#utility.yul\":7164:7384   */\n    tag_243:\n        /* \"#utility.yul\":7198:7204   */\n      dup2\n        /* \"#utility.yul\":7193:7196   */\n      dup2\n        /* \"#utility.yul\":7190:7205   */\n      lt\n        /* \"#utility.yul\":7164:7384   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7273:7276   */\n      dup1\n        /* \"#utility.yul\":7302:7339   */\n      tag_246\n        /* \"#utility.yul\":7335:7338   */\n      dup9\n        /* \"#utility.yul\":7323:7333   */\n      dup3\n        /* \"#utility.yul\":7302:7339   */\n      tag_135\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7297:7300   */\n      dup5\n        /* \"#utility.yul\":7290:7340   */\n      mstore\n        /* \"#utility.yul\":7369:7373   */\n      0x20\n        /* \"#utility.yul\":7364:7367   */\n      dup5\n        /* \"#utility.yul\":7360:7374   */\n      add\n        /* \"#utility.yul\":7353:7374   */\n      swap4\n      pop\n        /* \"#utility.yul\":7240:7384   */\n      pop\n        /* \"#utility.yul\":7224:7228   */\n      0x20\n        /* \"#utility.yul\":7219:7222   */\n      dup2\n        /* \"#utility.yul\":7215:7229   */\n      add\n        /* \"#utility.yul\":7208:7229   */\n      swap1\n      pop\n        /* \"#utility.yul\":7164:7384   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":7168:7189   */\n      pop\n        /* \"#utility.yul\":6782:7390   */\n      pop\n      pop\n        /* \"#utility.yul\":6680:7390   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7413:7783   */\n    tag_137:\n        /* \"#utility.yul\":7484:7489   */\n      0x00\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7526:7530   */\n      0x1f\n        /* \"#utility.yul\":7518:7524   */\n      dup4\n        /* \"#utility.yul\":7514:7531   */\n      add\n        /* \"#utility.yul\":7510:7537   */\n      slt\n        /* \"#utility.yul\":7500:7622   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":7541:7620   */\n      tag_249\n      tag_111\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7500:7622   */\n    tag_248:\n        /* \"#utility.yul\":7658:7664   */\n      dup2\n        /* \"#utility.yul\":7645:7665   */\n      calldataload\n        /* \"#utility.yul\":7683:7777   */\n      tag_250\n        /* \"#utility.yul\":7773:7776   */\n      dup5\n        /* \"#utility.yul\":7765:7771   */\n      dup3\n        /* \"#utility.yul\":7758:7762   */\n      0x20\n        /* \"#utility.yul\":7750:7756   */\n      dup7\n        /* \"#utility.yul\":7746:7763   */\n      add\n        /* \"#utility.yul\":7683:7777   */\n      tag_136\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7674:7777   */\n      swap2\n      pop\n        /* \"#utility.yul\":7490:7783   */\n      pop\n        /* \"#utility.yul\":7413:7783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7789:8110   */\n    tag_138:\n        /* \"#utility.yul\":7876:7880   */\n      0x00\n        /* \"#utility.yul\":7966:7984   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7958:7964   */\n      dup3\n        /* \"#utility.yul\":7955:7985   */\n      gt\n        /* \"#utility.yul\":7952:8008   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":7988:8006   */\n      tag_253\n      tag_80\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7952:8008   */\n    tag_252:\n        /* \"#utility.yul\":8038:8042   */\n      0x20\n        /* \"#utility.yul\":8030:8036   */\n      dup3\n        /* \"#utility.yul\":8026:8043   */\n      mul\n        /* \"#utility.yul\":8018:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":8098:8102   */\n      0x20\n        /* \"#utility.yul\":8092:8096   */\n      dup2\n        /* \"#utility.yul\":8088:8103   */\n      add\n        /* \"#utility.yul\":8080:8103   */\n      swap1\n      pop\n        /* \"#utility.yul\":7789:8110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8116:8424   */\n    tag_139:\n        /* \"#utility.yul\":8178:8182   */\n      0x00\n        /* \"#utility.yul\":8268:8286   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8260:8266   */\n      dup3\n        /* \"#utility.yul\":8257:8287   */\n      gt\n        /* \"#utility.yul\":8254:8310   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8290:8308   */\n      tag_256\n      tag_80\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8254:8310   */\n    tag_255:\n        /* \"#utility.yul\":8328:8357   */\n      tag_257\n        /* \"#utility.yul\":8350:8356   */\n      dup3\n        /* \"#utility.yul\":8328:8357   */\n      tag_113\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8320:8357   */\n      swap1\n      pop\n        /* \"#utility.yul\":8412:8416   */\n      0x20\n        /* \"#utility.yul\":8406:8410   */\n      dup2\n        /* \"#utility.yul\":8402:8417   */\n      add\n        /* \"#utility.yul\":8394:8417   */\n      swap1\n      pop\n        /* \"#utility.yul\":8116:8424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8855   */\n    tag_140:\n        /* \"#utility.yul\":8508:8513   */\n      0x00\n        /* \"#utility.yul\":8533:8599   */\n      tag_259\n        /* \"#utility.yul\":8549:8598   */\n      tag_260\n        /* \"#utility.yul\":8591:8597   */\n      dup5\n        /* \"#utility.yul\":8549:8598   */\n      tag_139\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8533:8599   */\n      tag_115\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8524:8599   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:8628   */\n      dup3\n        /* \"#utility.yul\":8615:8620   */\n      dup2\n        /* \"#utility.yul\":8608:8629   */\n      mstore\n        /* \"#utility.yul\":8660:8664   */\n      0x20\n        /* \"#utility.yul\":8653:8658   */\n      dup2\n        /* \"#utility.yul\":8649:8665   */\n      add\n        /* \"#utility.yul\":8698:8701   */\n      dup5\n        /* \"#utility.yul\":8689:8695   */\n      dup5\n        /* \"#utility.yul\":8684:8687   */\n      dup5\n        /* \"#utility.yul\":8680:8696   */\n      add\n        /* \"#utility.yul\":8677:8702   */\n      gt\n        /* \"#utility.yul\":8674:8786   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_262\n      tag_112\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8674:8786   */\n    tag_261:\n        /* \"#utility.yul\":8795:8849   */\n      tag_263\n        /* \"#utility.yul\":8842:8848   */\n      dup5\n        /* \"#utility.yul\":8837:8840   */\n      dup3\n        /* \"#utility.yul\":8832:8835   */\n      dup6\n        /* \"#utility.yul\":8795:8849   */\n      tag_117\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8514:8855   */\n      pop\n        /* \"#utility.yul\":8430:8855   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8875:9215   */\n    tag_141:\n        /* \"#utility.yul\":8931:8936   */\n      0x00\n        /* \"#utility.yul\":8980:8983   */\n      dup3\n        /* \"#utility.yul\":8973:8977   */\n      0x1f\n        /* \"#utility.yul\":8965:8971   */\n      dup4\n        /* \"#utility.yul\":8961:8978   */\n      add\n        /* \"#utility.yul\":8957:8984   */\n      slt\n        /* \"#utility.yul\":8947:9069   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":8988:9067   */\n      tag_266\n      tag_111\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8947:9069   */\n    tag_265:\n        /* \"#utility.yul\":9105:9111   */\n      dup2\n        /* \"#utility.yul\":9092:9112   */\n      calldataload\n        /* \"#utility.yul\":9130:9209   */\n      tag_267\n        /* \"#utility.yul\":9205:9208   */\n      dup5\n        /* \"#utility.yul\":9197:9203   */\n      dup3\n        /* \"#utility.yul\":9190:9194   */\n      0x20\n        /* \"#utility.yul\":9182:9188   */\n      dup7\n        /* \"#utility.yul\":9178:9195   */\n      add\n        /* \"#utility.yul\":9130:9209   */\n      tag_140\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9121:9209   */\n      swap2\n      pop\n        /* \"#utility.yul\":8937:9215   */\n      pop\n        /* \"#utility.yul\":8875:9215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9237:10182   */\n    tag_142:\n        /* \"#utility.yul\":9343:9348   */\n      0x00\n        /* \"#utility.yul\":9368:9459   */\n      tag_269\n        /* \"#utility.yul\":9384:9458   */\n      tag_270\n        /* \"#utility.yul\":9451:9457   */\n      dup5\n        /* \"#utility.yul\":9384:9458   */\n      tag_138\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9368:9459   */\n      tag_115\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9359:9459   */\n      swap1\n      pop\n        /* \"#utility.yul\":9479:9484   */\n      dup1\n        /* \"#utility.yul\":9508:9514   */\n      dup4\n        /* \"#utility.yul\":9501:9506   */\n      dup3\n        /* \"#utility.yul\":9494:9515   */\n      mstore\n        /* \"#utility.yul\":9542:9546   */\n      0x20\n        /* \"#utility.yul\":9535:9540   */\n      dup3\n        /* \"#utility.yul\":9531:9547   */\n      add\n        /* \"#utility.yul\":9524:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9595:9599   */\n      0x20\n        /* \"#utility.yul\":9587:9593   */\n      dup5\n        /* \"#utility.yul\":9583:9600   */\n      mul\n        /* \"#utility.yul\":9575:9581   */\n      dup4\n        /* \"#utility.yul\":9571:9601   */\n      add\n        /* \"#utility.yul\":9624:9627   */\n      dup6\n        /* \"#utility.yul\":9616:9622   */\n      dup2\n        /* \"#utility.yul\":9613:9628   */\n      gt\n        /* \"#utility.yul\":9610:9732   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":9643:9722   */\n      tag_272\n      tag_125\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9610:9732   */\n    tag_271:\n        /* \"#utility.yul\":9758:9764   */\n      dup4\n        /* \"#utility.yul\":9741:10176   */\n    tag_273:\n        /* \"#utility.yul\":9775:9781   */\n      dup2\n        /* \"#utility.yul\":9770:9773   */\n      dup2\n        /* \"#utility.yul\":9767:9782   */\n      lt\n        /* \"#utility.yul\":9741:10176   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":9864:9867   */\n      dup1\n        /* \"#utility.yul\":9851:9868   */\n      calldataload\n        /* \"#utility.yul\":9900:9918   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9887:9898   */\n      dup2\n        /* \"#utility.yul\":9884:9919   */\n      gt\n        /* \"#utility.yul\":9881:10003   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":9922:10001   */\n      tag_277\n      tag_111\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9881:10003   */\n    tag_276:\n        /* \"#utility.yul\":10046:10057   */\n      dup1\n        /* \"#utility.yul\":10038:10044   */\n      dup7\n        /* \"#utility.yul\":10034:10058   */\n      add\n        /* \"#utility.yul\":10084:10131   */\n      tag_278\n        /* \"#utility.yul\":10127:10130   */\n      dup10\n        /* \"#utility.yul\":10115:10125   */\n      dup3\n        /* \"#utility.yul\":10084:10131   */\n      tag_141\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10079:10082   */\n      dup6\n        /* \"#utility.yul\":10072:10132   */\n      mstore\n        /* \"#utility.yul\":10161:10165   */\n      0x20\n        /* \"#utility.yul\":10156:10159   */\n      dup6\n        /* \"#utility.yul\":10152:10166   */\n      add\n        /* \"#utility.yul\":10145:10166   */\n      swap5\n      pop\n        /* \"#utility.yul\":9817:10176   */\n      pop\n      pop\n        /* \"#utility.yul\":9801:9805   */\n      0x20\n        /* \"#utility.yul\":9796:9799   */\n      dup2\n        /* \"#utility.yul\":9792:9806   */\n      add\n        /* \"#utility.yul\":9785:9806   */\n      swap1\n      pop\n        /* \"#utility.yul\":9741:10176   */\n      jump(tag_273)\n    tag_275:\n        /* \"#utility.yul\":9745:9766   */\n      pop\n        /* \"#utility.yul\":9349:10182   */\n      pop\n      pop\n        /* \"#utility.yul\":9237:10182   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10204:10594   */\n    tag_143:\n        /* \"#utility.yul\":10285:10290   */\n      0x00\n        /* \"#utility.yul\":10334:10337   */\n      dup3\n        /* \"#utility.yul\":10327:10331   */\n      0x1f\n        /* \"#utility.yul\":10319:10325   */\n      dup4\n        /* \"#utility.yul\":10315:10332   */\n      add\n        /* \"#utility.yul\":10311:10338   */\n      slt\n        /* \"#utility.yul\":10301:10423   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10342:10421   */\n      tag_281\n      tag_111\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10301:10423   */\n    tag_280:\n        /* \"#utility.yul\":10459:10465   */\n      dup2\n        /* \"#utility.yul\":10446:10466   */\n      calldataload\n        /* \"#utility.yul\":10484:10588   */\n      tag_282\n        /* \"#utility.yul\":10584:10587   */\n      dup5\n        /* \"#utility.yul\":10576:10582   */\n      dup3\n        /* \"#utility.yul\":10569:10573   */\n      0x20\n        /* \"#utility.yul\":10561:10567   */\n      dup7\n        /* \"#utility.yul\":10557:10574   */\n      add\n        /* \"#utility.yul\":10484:10588   */\n      tag_142\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10475:10588   */\n      swap2\n      pop\n        /* \"#utility.yul\":10291:10594   */\n      pop\n        /* \"#utility.yul\":10204:10594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10600:10920   */\n    tag_144:\n        /* \"#utility.yul\":10686:10690   */\n      0x00\n        /* \"#utility.yul\":10776:10794   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10768:10774   */\n      dup3\n        /* \"#utility.yul\":10765:10795   */\n      gt\n        /* \"#utility.yul\":10762:10818   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":10798:10816   */\n      tag_285\n      tag_80\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10762:10818   */\n    tag_284:\n        /* \"#utility.yul\":10848:10852   */\n      0x20\n        /* \"#utility.yul\":10840:10846   */\n      dup3\n        /* \"#utility.yul\":10836:10853   */\n      mul\n        /* \"#utility.yul\":10828:10853   */\n      swap1\n      pop\n        /* \"#utility.yul\":10908:10912   */\n      0x20\n        /* \"#utility.yul\":10902:10906   */\n      dup2\n        /* \"#utility.yul\":10898:10913   */\n      add\n        /* \"#utility.yul\":10890:10913   */\n      swap1\n      pop\n        /* \"#utility.yul\":10600:10920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10941:11883   */\n    tag_145:\n        /* \"#utility.yul\":11046:11051   */\n      0x00\n        /* \"#utility.yul\":11071:11161   */\n      tag_287\n        /* \"#utility.yul\":11087:11160   */\n      tag_288\n        /* \"#utility.yul\":11153:11159   */\n      dup5\n        /* \"#utility.yul\":11087:11160   */\n      tag_144\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11071:11161   */\n      tag_115\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11062:11161   */\n      swap1\n      pop\n        /* \"#utility.yul\":11181:11186   */\n      dup1\n        /* \"#utility.yul\":11210:11216   */\n      dup4\n        /* \"#utility.yul\":11203:11208   */\n      dup3\n        /* \"#utility.yul\":11196:11217   */\n      mstore\n        /* \"#utility.yul\":11244:11248   */\n      0x20\n        /* \"#utility.yul\":11237:11242   */\n      dup3\n        /* \"#utility.yul\":11233:11249   */\n      add\n        /* \"#utility.yul\":11226:11249   */\n      swap1\n      pop\n        /* \"#utility.yul\":11297:11301   */\n      0x20\n        /* \"#utility.yul\":11289:11295   */\n      dup5\n        /* \"#utility.yul\":11285:11302   */\n      mul\n        /* \"#utility.yul\":11277:11283   */\n      dup4\n        /* \"#utility.yul\":11273:11303   */\n      add\n        /* \"#utility.yul\":11326:11329   */\n      dup6\n        /* \"#utility.yul\":11318:11324   */\n      dup2\n        /* \"#utility.yul\":11315:11330   */\n      gt\n        /* \"#utility.yul\":11312:11434   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":11345:11424   */\n      tag_290\n      tag_125\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11312:11434   */\n    tag_289:\n        /* \"#utility.yul\":11460:11466   */\n      dup4\n        /* \"#utility.yul\":11443:11877   */\n    tag_291:\n        /* \"#utility.yul\":11477:11483   */\n      dup2\n        /* \"#utility.yul\":11472:11475   */\n      dup2\n        /* \"#utility.yul\":11469:11484   */\n      lt\n        /* \"#utility.yul\":11443:11877   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":11566:11569   */\n      dup1\n        /* \"#utility.yul\":11553:11570   */\n      calldataload\n        /* \"#utility.yul\":11602:11620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11589:11600   */\n      dup2\n        /* \"#utility.yul\":11586:11621   */\n      gt\n        /* \"#utility.yul\":11583:11705   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":11624:11703   */\n      tag_295\n      tag_111\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11583:11705   */\n    tag_294:\n        /* \"#utility.yul\":11748:11759   */\n      dup1\n        /* \"#utility.yul\":11740:11746   */\n      dup7\n        /* \"#utility.yul\":11736:11760   */\n      add\n        /* \"#utility.yul\":11786:11832   */\n      tag_296\n        /* \"#utility.yul\":11828:11831   */\n      dup10\n        /* \"#utility.yul\":11816:11826   */\n      dup3\n        /* \"#utility.yul\":11786:11832   */\n      tag_119\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11781:11784   */\n      dup6\n        /* \"#utility.yul\":11774:11833   */\n      mstore\n        /* \"#utility.yul\":11862:11866   */\n      0x20\n        /* \"#utility.yul\":11857:11860   */\n      dup6\n        /* \"#utility.yul\":11853:11867   */\n      add\n        /* \"#utility.yul\":11846:11867   */\n      swap5\n      pop\n        /* \"#utility.yul\":11519:11877   */\n      pop\n      pop\n        /* \"#utility.yul\":11503:11507   */\n      0x20\n        /* \"#utility.yul\":11498:11501   */\n      dup2\n        /* \"#utility.yul\":11494:11508   */\n      add\n        /* \"#utility.yul\":11487:11508   */\n      swap1\n      pop\n        /* \"#utility.yul\":11443:11877   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":11447:11468   */\n      pop\n        /* \"#utility.yul\":11052:11883   */\n      pop\n      pop\n        /* \"#utility.yul\":10941:11883   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11904:12292   */\n    tag_146:\n        /* \"#utility.yul\":11984:11989   */\n      0x00\n        /* \"#utility.yul\":12033:12036   */\n      dup3\n        /* \"#utility.yul\":12026:12030   */\n      0x1f\n        /* \"#utility.yul\":12018:12024   */\n      dup4\n        /* \"#utility.yul\":12014:12031   */\n      add\n        /* \"#utility.yul\":12010:12037   */\n      slt\n        /* \"#utility.yul\":12000:12122   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":12041:12120   */\n      tag_299\n      tag_111\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12000:12122   */\n    tag_298:\n        /* \"#utility.yul\":12158:12164   */\n      dup2\n        /* \"#utility.yul\":12145:12165   */\n      calldataload\n        /* \"#utility.yul\":12183:12286   */\n      tag_300\n        /* \"#utility.yul\":12282:12285   */\n      dup5\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12267:12271   */\n      0x20\n        /* \"#utility.yul\":12259:12265   */\n      dup7\n        /* \"#utility.yul\":12255:12272   */\n      add\n        /* \"#utility.yul\":12183:12286   */\n      tag_145\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12174:12286   */\n      swap2\n      pop\n        /* \"#utility.yul\":11990:12292   */\n      pop\n        /* \"#utility.yul\":11904:12292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12298:13941   */\n    tag_14:\n        /* \"#utility.yul\":12503:12509   */\n      0x00\n        /* \"#utility.yul\":12511:12517   */\n      dup1\n        /* \"#utility.yul\":12519:12525   */\n      0x00\n        /* \"#utility.yul\":12527:12533   */\n      dup1\n        /* \"#utility.yul\":12576:12579   */\n      0x80\n        /* \"#utility.yul\":12564:12573   */\n      dup6\n        /* \"#utility.yul\":12555:12562   */\n      dup8\n        /* \"#utility.yul\":12551:12574   */\n      sub\n        /* \"#utility.yul\":12547:12580   */\n      slt\n        /* \"#utility.yul\":12544:12664   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":12583:12662   */\n      tag_303\n      tag_109\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":12544:12664   */\n    tag_302:\n        /* \"#utility.yul\":12731:12732   */\n      0x00\n        /* \"#utility.yul\":12720:12729   */\n      dup6\n        /* \"#utility.yul\":12716:12733   */\n      add\n        /* \"#utility.yul\":12703:12734   */\n      calldataload\n        /* \"#utility.yul\":12761:12779   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12753:12759   */\n      dup2\n        /* \"#utility.yul\":12750:12780   */\n      gt\n        /* \"#utility.yul\":12747:12864   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":12783:12862   */\n      tag_305\n      tag_110\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":12747:12864   */\n    tag_304:\n        /* \"#utility.yul\":12888:12966   */\n      tag_306\n        /* \"#utility.yul\":12958:12965   */\n      dup8\n        /* \"#utility.yul\":12949:12955   */\n      dup3\n        /* \"#utility.yul\":12938:12947   */\n      dup9\n        /* \"#utility.yul\":12934:12956   */\n      add\n        /* \"#utility.yul\":12888:12966   */\n      tag_131\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":12878:12966   */\n      swap5\n      pop\n        /* \"#utility.yul\":12674:12976   */\n      pop\n        /* \"#utility.yul\":13043:13045   */\n      0x20\n        /* \"#utility.yul\":13032:13041   */\n      dup6\n        /* \"#utility.yul\":13028:13046   */\n      add\n        /* \"#utility.yul\":13015:13047   */\n      calldataload\n        /* \"#utility.yul\":13074:13092   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13066:13072   */\n      dup2\n        /* \"#utility.yul\":13063:13093   */\n      gt\n        /* \"#utility.yul\":13060:13177   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":13096:13175   */\n      tag_308\n      tag_110\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":13060:13177   */\n    tag_307:\n        /* \"#utility.yul\":13201:13279   */\n      tag_309\n        /* \"#utility.yul\":13271:13278   */\n      dup8\n        /* \"#utility.yul\":13262:13268   */\n      dup3\n        /* \"#utility.yul\":13251:13260   */\n      dup9\n        /* \"#utility.yul\":13247:13269   */\n      add\n        /* \"#utility.yul\":13201:13279   */\n      tag_137\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13191:13279   */\n      swap4\n      pop\n        /* \"#utility.yul\":12986:13289   */\n      pop\n        /* \"#utility.yul\":13356:13358   */\n      0x40\n        /* \"#utility.yul\":13345:13354   */\n      dup6\n        /* \"#utility.yul\":13341:13359   */\n      add\n        /* \"#utility.yul\":13328:13360   */\n      calldataload\n        /* \"#utility.yul\":13387:13405   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13379:13385   */\n      dup2\n        /* \"#utility.yul\":13376:13406   */\n      gt\n        /* \"#utility.yul\":13373:13490   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":13409:13488   */\n      tag_311\n      tag_110\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":13373:13490   */\n    tag_310:\n        /* \"#utility.yul\":13514:13602   */\n      tag_312\n        /* \"#utility.yul\":13594:13601   */\n      dup8\n        /* \"#utility.yul\":13585:13591   */\n      dup3\n        /* \"#utility.yul\":13574:13583   */\n      dup9\n        /* \"#utility.yul\":13570:13592   */\n      add\n        /* \"#utility.yul\":13514:13602   */\n      tag_143\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":13504:13602   */\n      swap3\n      pop\n        /* \"#utility.yul\":13299:13612   */\n      pop\n        /* \"#utility.yul\":13679:13681   */\n      0x60\n        /* \"#utility.yul\":13668:13677   */\n      dup6\n        /* \"#utility.yul\":13664:13682   */\n      add\n        /* \"#utility.yul\":13651:13683   */\n      calldataload\n        /* \"#utility.yul\":13710:13728   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13702:13708   */\n      dup2\n        /* \"#utility.yul\":13699:13729   */\n      gt\n        /* \"#utility.yul\":13696:13813   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":13732:13811   */\n      tag_314\n      tag_110\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13696:13813   */\n    tag_313:\n        /* \"#utility.yul\":13837:13924   */\n      tag_315\n        /* \"#utility.yul\":13916:13923   */\n      dup8\n        /* \"#utility.yul\":13907:13913   */\n      dup3\n        /* \"#utility.yul\":13896:13905   */\n      dup9\n        /* \"#utility.yul\":13892:13914   */\n      add\n        /* \"#utility.yul\":13837:13924   */\n      tag_146\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":13827:13924   */\n      swap2\n      pop\n        /* \"#utility.yul\":13622:13934   */\n      pop\n        /* \"#utility.yul\":12298:13941   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13947:14924   */\n    tag_18:\n        /* \"#utility.yul\":14043:14049   */\n      0x00\n        /* \"#utility.yul\":14051:14057   */\n      dup1\n        /* \"#utility.yul\":14059:14065   */\n      0x00\n        /* \"#utility.yul\":14108:14110   */\n      0x60\n        /* \"#utility.yul\":14096:14105   */\n      dup5\n        /* \"#utility.yul\":14087:14094   */\n      dup7\n        /* \"#utility.yul\":14083:14106   */\n      sub\n        /* \"#utility.yul\":14079:14111   */\n      slt\n        /* \"#utility.yul\":14076:14195   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":14114:14193   */\n      tag_318\n      tag_109\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14076:14195   */\n    tag_317:\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14259:14312   */\n      tag_319\n        /* \"#utility.yul\":14304:14311   */\n      dup7\n        /* \"#utility.yul\":14295:14301   */\n      dup3\n        /* \"#utility.yul\":14284:14293   */\n      dup8\n        /* \"#utility.yul\":14280:14302   */\n      add\n        /* \"#utility.yul\":14259:14312   */\n      tag_129\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14249:14312   */\n      swap4\n      pop\n        /* \"#utility.yul\":14205:14322   */\n      pop\n        /* \"#utility.yul\":14389:14391   */\n      0x20\n        /* \"#utility.yul\":14378:14387   */\n      dup5\n        /* \"#utility.yul\":14374:14392   */\n      add\n        /* \"#utility.yul\":14361:14393   */\n      calldataload\n        /* \"#utility.yul\":14420:14438   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14412:14418   */\n      dup2\n        /* \"#utility.yul\":14409:14439   */\n      gt\n        /* \"#utility.yul\":14406:14523   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":14442:14521   */\n      tag_321\n      tag_110\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":14406:14523   */\n    tag_320:\n        /* \"#utility.yul\":14547:14610   */\n      tag_322\n        /* \"#utility.yul\":14602:14609   */\n      dup7\n        /* \"#utility.yul\":14593:14599   */\n      dup3\n        /* \"#utility.yul\":14582:14591   */\n      dup8\n        /* \"#utility.yul\":14578:14600   */\n      add\n        /* \"#utility.yul\":14547:14610   */\n      tag_141\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14537:14610   */\n      swap3\n      pop\n        /* \"#utility.yul\":14332:14620   */\n      pop\n        /* \"#utility.yul\":14687:14689   */\n      0x40\n        /* \"#utility.yul\":14676:14685   */\n      dup5\n        /* \"#utility.yul\":14672:14690   */\n      add\n        /* \"#utility.yul\":14659:14691   */\n      calldataload\n        /* \"#utility.yul\":14718:14736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14710:14716   */\n      dup2\n        /* \"#utility.yul\":14707:14737   */\n      gt\n        /* \"#utility.yul\":14704:14821   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":14740:14819   */\n      tag_324\n      tag_110\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":14704:14821   */\n    tag_323:\n        /* \"#utility.yul\":14845:14907   */\n      tag_325\n        /* \"#utility.yul\":14899:14906   */\n      dup7\n        /* \"#utility.yul\":14890:14896   */\n      dup3\n        /* \"#utility.yul\":14879:14888   */\n      dup8\n        /* \"#utility.yul\":14875:14897   */\n      add\n        /* \"#utility.yul\":14845:14907   */\n      tag_119\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14835:14907   */\n      swap2\n      pop\n        /* \"#utility.yul\":14630:14917   */\n      pop\n        /* \"#utility.yul\":13947:14924   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":14930:15110   */\n    tag_147:\n        /* \"#utility.yul\":14978:15055   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14975:14976   */\n      0x00\n        /* \"#utility.yul\":14968:15056   */\n      mstore\n        /* \"#utility.yul\":15075:15079   */\n      0x11\n        /* \"#utility.yul\":15072:15073   */\n      0x04\n        /* \"#utility.yul\":15065:15080   */\n      mstore\n        /* \"#utility.yul\":15099:15103   */\n      0x24\n        /* \"#utility.yul\":15096:15097   */\n      0x00\n        /* \"#utility.yul\":15089:15104   */\n      revert\n        /* \"#utility.yul\":15116:15304   */\n    tag_24:\n        /* \"#utility.yul\":15154:15157   */\n      0x00\n        /* \"#utility.yul\":15173:15191   */\n      tag_328\n        /* \"#utility.yul\":15189:15190   */\n      dup3\n        /* \"#utility.yul\":15173:15191   */\n      tag_122\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":15168:15191   */\n      swap2\n      pop\n        /* \"#utility.yul\":15205:15223   */\n      tag_329\n        /* \"#utility.yul\":15221:15222   */\n      dup4\n        /* \"#utility.yul\":15205:15223   */\n      tag_122\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":15200:15223   */\n      swap3\n      pop\n        /* \"#utility.yul\":15246:15247   */\n      dup3\n        /* \"#utility.yul\":15243:15244   */\n      dup3\n        /* \"#utility.yul\":15239:15248   */\n      add\n        /* \"#utility.yul\":15232:15248   */\n      swap1\n      pop\n        /* \"#utility.yul\":15269:15273   */\n      0xff\n        /* \"#utility.yul\":15264:15267   */\n      dup2\n        /* \"#utility.yul\":15261:15274   */\n      gt\n        /* \"#utility.yul\":15258:15297   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":15277:15295   */\n      tag_331\n      tag_147\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":15258:15297   */\n    tag_330:\n        /* \"#utility.yul\":15116:15304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15310:15490   */\n    tag_34:\n        /* \"#utility.yul\":15358:15435   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15355:15356   */\n      0x00\n        /* \"#utility.yul\":15348:15436   */\n      mstore\n        /* \"#utility.yul\":15455:15459   */\n      0x32\n        /* \"#utility.yul\":15452:15453   */\n      0x04\n        /* \"#utility.yul\":15445:15460   */\n      mstore\n        /* \"#utility.yul\":15479:15483   */\n      0x24\n        /* \"#utility.yul\":15476:15477   */\n      0x00\n        /* \"#utility.yul\":15469:15484   */\n      revert\n        /* \"#utility.yul\":15496:15614   */\n    tag_148:\n        /* \"#utility.yul\":15583:15607   */\n      tag_334\n        /* \"#utility.yul\":15601:15606   */\n      dup2\n        /* \"#utility.yul\":15583:15607   */\n      tag_127\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":15578:15581   */\n      dup3\n        /* \"#utility.yul\":15571:15608   */\n      mstore\n        /* \"#utility.yul\":15496:15614   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15620:15738   */\n    tag_149:\n        /* \"#utility.yul\":15707:15731   */\n      tag_336\n        /* \"#utility.yul\":15725:15730   */\n      dup2\n        /* \"#utility.yul\":15707:15731   */\n      tag_133\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15702:15705   */\n      dup3\n        /* \"#utility.yul\":15695:15732   */\n      mstore\n        /* \"#utility.yul\":15620:15738   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15744:16076   */\n    tag_44:\n        /* \"#utility.yul\":15865:15869   */\n      0x00\n        /* \"#utility.yul\":15903:15905   */\n      0x40\n        /* \"#utility.yul\":15892:15901   */\n      dup3\n        /* \"#utility.yul\":15888:15906   */\n      add\n        /* \"#utility.yul\":15880:15906   */\n      swap1\n      pop\n        /* \"#utility.yul\":15916:15987   */\n      tag_338\n        /* \"#utility.yul\":15984:15985   */\n      0x00\n        /* \"#utility.yul\":15973:15982   */\n      dup4\n        /* \"#utility.yul\":15969:15986   */\n      add\n        /* \"#utility.yul\":15960:15966   */\n      dup6\n        /* \"#utility.yul\":15916:15987   */\n      tag_148\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":15997:16069   */\n      tag_339\n        /* \"#utility.yul\":16065:16067   */\n      0x20\n        /* \"#utility.yul\":16054:16063   */\n      dup4\n        /* \"#utility.yul\":16050:16068   */\n      add\n        /* \"#utility.yul\":16041:16047   */\n      dup5\n        /* \"#utility.yul\":15997:16069   */\n      tag_149\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":15744:16076   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16181   */\n    tag_150:\n        /* \"#utility.yul\":16134:16140   */\n      0x00\n        /* \"#utility.yul\":16168:16173   */\n      dup2\n        /* \"#utility.yul\":16162:16174   */\n      mload\n        /* \"#utility.yul\":16152:16174   */\n      swap1\n      pop\n        /* \"#utility.yul\":16082:16181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16187:16356   */\n    tag_151:\n        /* \"#utility.yul\":16271:16282   */\n      0x00\n        /* \"#utility.yul\":16305:16311   */\n      dup3\n        /* \"#utility.yul\":16300:16303   */\n      dup3\n        /* \"#utility.yul\":16293:16312   */\n      mstore\n        /* \"#utility.yul\":16345:16349   */\n      0x20\n        /* \"#utility.yul\":16340:16343   */\n      dup3\n        /* \"#utility.yul\":16336:16350   */\n      add\n        /* \"#utility.yul\":16321:16350   */\n      swap1\n      pop\n        /* \"#utility.yul\":16187:16356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16362:16608   */\n    tag_152:\n        /* \"#utility.yul\":16443:16444   */\n      0x00\n        /* \"#utility.yul\":16453:16566   */\n    tag_343:\n        /* \"#utility.yul\":16467:16473   */\n      dup4\n        /* \"#utility.yul\":16464:16465   */\n      dup2\n        /* \"#utility.yul\":16461:16474   */\n      lt\n        /* \"#utility.yul\":16453:16566   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":16552:16553   */\n      dup1\n        /* \"#utility.yul\":16547:16550   */\n      dup3\n        /* \"#utility.yul\":16543:16554   */\n      add\n        /* \"#utility.yul\":16537:16555   */\n      mload\n        /* \"#utility.yul\":16533:16534   */\n      dup2\n        /* \"#utility.yul\":16528:16531   */\n      dup5\n        /* \"#utility.yul\":16524:16535   */\n      add\n        /* \"#utility.yul\":16517:16556   */\n      mstore\n        /* \"#utility.yul\":16489:16491   */\n      0x20\n        /* \"#utility.yul\":16486:16487   */\n      dup2\n        /* \"#utility.yul\":16482:16492   */\n      add\n        /* \"#utility.yul\":16477:16492   */\n      swap1\n      pop\n        /* \"#utility.yul\":16453:16566   */\n      jump(tag_343)\n    tag_345:\n        /* \"#utility.yul\":16600:16601   */\n      0x00\n        /* \"#utility.yul\":16591:16597   */\n      dup5\n        /* \"#utility.yul\":16586:16589   */\n      dup5\n        /* \"#utility.yul\":16582:16598   */\n      add\n        /* \"#utility.yul\":16575:16602   */\n      mstore\n        /* \"#utility.yul\":16424:16608   */\n      pop\n        /* \"#utility.yul\":16362:16608   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16614:16991   */\n    tag_153:\n        /* \"#utility.yul\":16702:16705   */\n      0x00\n        /* \"#utility.yul\":16730:16769   */\n      tag_347\n        /* \"#utility.yul\":16763:16768   */\n      dup3\n        /* \"#utility.yul\":16730:16769   */\n      tag_150\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":16785:16856   */\n      tag_348\n        /* \"#utility.yul\":16849:16855   */\n      dup2\n        /* \"#utility.yul\":16844:16847   */\n      dup6\n        /* \"#utility.yul\":16785:16856   */\n      tag_151\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":16778:16856   */\n      swap4\n      pop\n        /* \"#utility.yul\":16865:16930   */\n      tag_349\n        /* \"#utility.yul\":16923:16929   */\n      dup2\n        /* \"#utility.yul\":16918:16921   */\n      dup6\n        /* \"#utility.yul\":16911:16915   */\n      0x20\n        /* \"#utility.yul\":16904:16909   */\n      dup7\n        /* \"#utility.yul\":16900:16916   */\n      add\n        /* \"#utility.yul\":16865:16930   */\n      tag_152\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":16955:16984   */\n      tag_350\n        /* \"#utility.yul\":16977:16983   */\n      dup2\n        /* \"#utility.yul\":16955:16984   */\n      tag_113\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":16950:16953   */\n      dup5\n        /* \"#utility.yul\":16946:16985   */\n      add\n        /* \"#utility.yul\":16939:16985   */\n      swap2\n      pop\n        /* \"#utility.yul\":16706:16991   */\n      pop\n        /* \"#utility.yul\":16614:16991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16997:17420   */\n    tag_53:\n        /* \"#utility.yul\":17138:17142   */\n      0x00\n        /* \"#utility.yul\":17176:17178   */\n      0x40\n        /* \"#utility.yul\":17165:17174   */\n      dup3\n        /* \"#utility.yul\":17161:17179   */\n      add\n        /* \"#utility.yul\":17153:17179   */\n      swap1\n      pop\n        /* \"#utility.yul\":17189:17260   */\n      tag_352\n        /* \"#utility.yul\":17257:17258   */\n      0x00\n        /* \"#utility.yul\":17246:17255   */\n      dup4\n        /* \"#utility.yul\":17242:17259   */\n      add\n        /* \"#utility.yul\":17233:17239   */\n      dup6\n        /* \"#utility.yul\":17189:17260   */\n      tag_148\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":17307:17316   */\n      dup2\n        /* \"#utility.yul\":17301:17305   */\n      dup2\n        /* \"#utility.yul\":17297:17317   */\n      sub\n        /* \"#utility.yul\":17292:17294   */\n      0x20\n        /* \"#utility.yul\":17281:17290   */\n      dup4\n        /* \"#utility.yul\":17277:17295   */\n      add\n        /* \"#utility.yul\":17270:17318   */\n      mstore\n        /* \"#utility.yul\":17335:17413   */\n      tag_353\n        /* \"#utility.yul\":17408:17412   */\n      dup2\n        /* \"#utility.yul\":17399:17405   */\n      dup5\n        /* \"#utility.yul\":17335:17413   */\n      tag_153\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":17327:17413   */\n      swap1\n      pop\n        /* \"#utility.yul\":16997:17420   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17426:17971   */\n    tag_60:\n        /* \"#utility.yul\":17599:17603   */\n      0x00\n        /* \"#utility.yul\":17637:17640   */\n      0x80\n        /* \"#utility.yul\":17626:17635   */\n      dup3\n        /* \"#utility.yul\":17622:17641   */\n      add\n        /* \"#utility.yul\":17614:17641   */\n      swap1\n      pop\n        /* \"#utility.yul\":17651:17722   */\n      tag_355\n        /* \"#utility.yul\":17719:17720   */\n      0x00\n        /* \"#utility.yul\":17708:17717   */\n      dup4\n        /* \"#utility.yul\":17704:17721   */\n      add\n        /* \"#utility.yul\":17695:17701   */\n      dup8\n        /* \"#utility.yul\":17651:17722   */\n      tag_121\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":17732:17800   */\n      tag_356\n        /* \"#utility.yul\":17796:17798   */\n      0x20\n        /* \"#utility.yul\":17785:17794   */\n      dup4\n        /* \"#utility.yul\":17781:17799   */\n      add\n        /* \"#utility.yul\":17772:17778   */\n      dup7\n        /* \"#utility.yul\":17732:17800   */\n      tag_123\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":17810:17882   */\n      tag_357\n        /* \"#utility.yul\":17878:17880   */\n      0x40\n        /* \"#utility.yul\":17867:17876   */\n      dup4\n        /* \"#utility.yul\":17863:17881   */\n      add\n        /* \"#utility.yul\":17854:17860   */\n      dup6\n        /* \"#utility.yul\":17810:17882   */\n      tag_121\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":17892:17964   */\n      tag_358\n        /* \"#utility.yul\":17960:17962   */\n      0x60\n        /* \"#utility.yul\":17949:17958   */\n      dup4\n        /* \"#utility.yul\":17945:17963   */\n      add\n        /* \"#utility.yul\":17936:17942   */\n      dup5\n        /* \"#utility.yul\":17892:17964   */\n      tag_121\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":17426:17971   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17977:18199   */\n    tag_64:\n        /* \"#utility.yul\":18070:18074   */\n      0x00\n        /* \"#utility.yul\":18108:18110   */\n      0x20\n        /* \"#utility.yul\":18097:18106   */\n      dup3\n        /* \"#utility.yul\":18093:18111   */\n      add\n        /* \"#utility.yul\":18085:18111   */\n      swap1\n      pop\n        /* \"#utility.yul\":18121:18192   */\n      tag_360\n        /* \"#utility.yul\":18189:18190   */\n      0x00\n        /* \"#utility.yul\":18178:18187   */\n      dup4\n        /* \"#utility.yul\":18174:18191   */\n      add\n        /* \"#utility.yul\":18165:18171   */\n      dup5\n        /* \"#utility.yul\":18121:18192   */\n      tag_148\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":17977:18199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18205:18353   */\n    tag_154:\n        /* \"#utility.yul\":18307:18318   */\n      0x00\n        /* \"#utility.yul\":18344:18347   */\n      dup2\n        /* \"#utility.yul\":18329:18347   */\n      swap1\n      pop\n        /* \"#utility.yul\":18205:18353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18359:18573   */\n    tag_155:\n        /* \"#utility.yul\":18499:18565   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a000000000000\n        /* \"#utility.yul\":18495:18496   */\n      0x00\n        /* \"#utility.yul\":18487:18493   */\n      dup3\n        /* \"#utility.yul\":18483:18497   */\n      add\n        /* \"#utility.yul\":18476:18566   */\n      mstore\n        /* \"#utility.yul\":18359:18573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18579:18981   */\n    tag_156:\n        /* \"#utility.yul\":18739:18742   */\n      0x00\n        /* \"#utility.yul\":18760:18845   */\n      tag_364\n        /* \"#utility.yul\":18842:18844   */\n      0x1a\n        /* \"#utility.yul\":18837:18840   */\n      dup4\n        /* \"#utility.yul\":18760:18845   */\n      tag_154\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":18753:18845   */\n      swap2\n      pop\n        /* \"#utility.yul\":18854:18947   */\n      tag_365\n        /* \"#utility.yul\":18943:18946   */\n      dup3\n        /* \"#utility.yul\":18854:18947   */\n      tag_155\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":18972:18974   */\n      0x1a\n        /* \"#utility.yul\":18967:18970   */\n      dup3\n        /* \"#utility.yul\":18963:18975   */\n      add\n        /* \"#utility.yul\":18956:18975   */\n      swap1\n      pop\n        /* \"#utility.yul\":18579:18981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18987:19377   */\n    tag_157:\n        /* \"#utility.yul\":19093:19096   */\n      0x00\n        /* \"#utility.yul\":19121:19160   */\n      tag_367\n        /* \"#utility.yul\":19154:19159   */\n      dup3\n        /* \"#utility.yul\":19121:19160   */\n      tag_150\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":19176:19265   */\n      tag_368\n        /* \"#utility.yul\":19258:19264   */\n      dup2\n        /* \"#utility.yul\":19253:19256   */\n      dup6\n        /* \"#utility.yul\":19176:19265   */\n      tag_154\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":19169:19265   */\n      swap4\n      pop\n        /* \"#utility.yul\":19274:19339   */\n      tag_369\n        /* \"#utility.yul\":19332:19338   */\n      dup2\n        /* \"#utility.yul\":19327:19330   */\n      dup6\n        /* \"#utility.yul\":19320:19324   */\n      0x20\n        /* \"#utility.yul\":19313:19318   */\n      dup7\n        /* \"#utility.yul\":19309:19325   */\n      add\n        /* \"#utility.yul\":19274:19339   */\n      tag_152\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":19364:19370   */\n      dup1\n        /* \"#utility.yul\":19359:19362   */\n      dup5\n        /* \"#utility.yul\":19355:19371   */\n      add\n        /* \"#utility.yul\":19348:19371   */\n      swap2\n      pop\n        /* \"#utility.yul\":19097:19377   */\n      pop\n        /* \"#utility.yul\":18987:19377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19383:20084   */\n    tag_74:\n        /* \"#utility.yul\":19664:19667   */\n      0x00\n        /* \"#utility.yul\":19686:19834   */\n      tag_371\n        /* \"#utility.yul\":19830:19833   */\n      dup3\n        /* \"#utility.yul\":19686:19834   */\n      tag_156\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":19679:19834   */\n      swap2\n      pop\n        /* \"#utility.yul\":19851:19946   */\n      tag_372\n        /* \"#utility.yul\":19942:19945   */\n      dup3\n        /* \"#utility.yul\":19933:19939   */\n      dup6\n        /* \"#utility.yul\":19851:19946   */\n      tag_157\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":19844:19946   */\n      swap2\n      pop\n        /* \"#utility.yul\":19963:20058   */\n      tag_373\n        /* \"#utility.yul\":20054:20057   */\n      dup3\n        /* \"#utility.yul\":20045:20051   */\n      dup5\n        /* \"#utility.yul\":19963:20058   */\n      tag_157\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":19956:20058   */\n      swap2\n      pop\n        /* \"#utility.yul\":20075:20078   */\n      dup2\n        /* \"#utility.yul\":20068:20078   */\n      swap1\n      pop\n        /* \"#utility.yul\":19383:20084   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20090:20270   */\n    tag_86:\n        /* \"#utility.yul\":20138:20215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20135:20136   */\n      0x00\n        /* \"#utility.yul\":20128:20216   */\n      mstore\n        /* \"#utility.yul\":20235:20239   */\n      0x12\n        /* \"#utility.yul\":20232:20233   */\n      0x04\n        /* \"#utility.yul\":20225:20240   */\n      mstore\n        /* \"#utility.yul\":20259:20263   */\n      0x24\n        /* \"#utility.yul\":20256:20257   */\n      0x00\n        /* \"#utility.yul\":20249:20264   */\n      revert\n\n    auxdata: 0xa26469706673582212200dcf5c92c2a434028f9ac55812ed50d5fb9994e6b9de91fd40bd1f5377f7111664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2245": {
									"entryPoint": null,
									"id": 2245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:10",
										"nodeType": "YulBlock",
										"src": "0:1199:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001279380380620012798339818101604052810190620000369190620000e1565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000111565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000ab8262000080565b9050919050565b620000bd816200009f565b8114620000c8575f80fd5b50565b5f81519050620000db81620000b2565b92915050565b5f60208284031215620000f957620000f86200007c565b5b5f6200010884828501620000cb565b91505092915050565b61115a806200011f5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632ff4bb4b14610043578063883a6c751461007557806395e0e0c914610091575b5f80fd5b61005d600480360381019061005891906107f8565b6100ad565b60405161006c93929190610872565b60405180910390f35b61008f600480360381019061008a9190610d12565b610114565b005b6100ab60048036038101906100a69190610de6565b6102b4565b005b5f805f60418451146100bd575f80fd5b602084015192506040840151915060608401515f1a9050601b8160ff1610156100f057601b816100ed9190610e9b565b90505b601b8160ff1614806101055750601c8160ff16145b61010d575f80fd5b9193909250565b5f5b84518110156102ad5761017885828151811061013557610134610ecf565b5b60200260200101518483815181106101505761014f610ecf565b5b602002602001015184848151811061016b5761016a610ecf565b5b60200260200101516102b4565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198683815181106101c6576101c5610ecf565b5b60200260200101518684815181106101e1576101e0610ecf565b5b60200260200101516040518363ffffffff1660e01b8152600401610206929190610f1a565b5f604051808303815f87803b15801561021d575f80fd5b505af115801561022f573d5f803e3d5ffd5b505050507f710c6bec3cf443b5afbda9ff86716f3a0d00db3ddaee6cc493c93be240533e1285828151811061026757610266610ecf565b5b602002602001015184838151811061028257610281610ecf565b5b6020026020010151604051610298929190610fbb565b60405180910390a18080600101915050610116565b5050505050565b5f6102be83610451565b90505f805f6102cc856100ad565b9250925092507f29bd5e82392230298810019d37e60fc402505adb5afa0f05072474634fcca38083838360405161030593929190610872565b60405180910390a17f690c22a325937e3625a470a9f14c15683846660270fb112ea5c93a7ea9de74666001858386866040515f81526020016040526040516103509493929190610fe9565b6020604051602081039080840390855afa158015610370573d5f803e3d5ffd5b50505060206040510351604051610387919061102c565b60405180910390a17f690c22a325937e3625a470a9f14c15683846660270fb112ea5c93a7ea9de7466876040516103be919061102c565b60405180910390a16001848285856040515f81526020016040526040516103e89493929190610fe9565b6020604051602081039080840390855afa158015610408573d5f803e3d5ffd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610448575f80fd5b50505050505050565b5f808251905061046081610490565b836040516020016104729291906110c9565b60405160208183030381529060405280519060200120915050919050565b60605f600161049e8461055a565b0190505f8167ffffffffffffffff8111156104bc576104bb6106d4565b5b6040519080825280601f01601f1916602001820160405280156104ee5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561054f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610544576105436110f7565b5b0494505f85036104fb575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106105b6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816105ac576105ab6110f7565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106105f3576d04ee2d6d415b85acef810000000083816105e9576105e86110f7565b5b0492506020810190505b662386f26fc10000831061062257662386f26fc100008381610618576106176110f7565b5b0492506010810190505b6305f5e100831061064b576305f5e1008381610641576106406110f7565b5b0492506008810190505b6127108310610670576127108381610666576106656110f7565b5b0492506004810190505b606483106106935760648381610689576106886110f7565b5b0492506002810190505b600a83106106a2576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61070a826106c4565b810181811067ffffffffffffffff82111715610729576107286106d4565b5b80604052505050565b5f61073b6106ab565b90506107478282610701565b919050565b5f67ffffffffffffffff821115610766576107656106d4565b5b61076f826106c4565b9050602081019050919050565b828183375f83830152505050565b5f61079c6107978461074c565b610732565b9050828152602081018484840111156107b8576107b76106c0565b5b6107c384828561077c565b509392505050565b5f82601f8301126107df576107de6106bc565b5b81356107ef84826020860161078a565b91505092915050565b5f6020828403121561080d5761080c6106b4565b5b5f82013567ffffffffffffffff81111561082a576108296106b8565b5b610836848285016107cb565b91505092915050565b5f819050919050565b6108518161083f565b82525050565b5f60ff82169050919050565b61086c81610857565b82525050565b5f6060820190506108855f830186610848565b6108926020830185610848565b61089f6040830184610863565b949350505050565b5f67ffffffffffffffff8211156108c1576108c06106d4565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ff826108d6565b9050919050565b61090f816108f5565b8114610919575f80fd5b50565b5f8135905061092a81610906565b92915050565b5f61094261093d846108a7565b610732565b90508083825260208201905060208402830185811115610965576109646108d2565b5b835b8181101561098e578061097a888261091c565b845260208401935050602081019050610967565b5050509392505050565b5f82601f8301126109ac576109ab6106bc565b5b81356109bc848260208601610930565b91505092915050565b5f67ffffffffffffffff8211156109df576109de6106d4565b5b602082029050602081019050919050565b5f819050919050565b610a02816109f0565b8114610a0c575f80fd5b50565b5f81359050610a1d816109f9565b92915050565b5f610a35610a30846109c5565b610732565b90508083825260208201905060208402830185811115610a5857610a576108d2565b5b835b81811015610a815780610a6d8882610a0f565b845260208401935050602081019050610a5a565b5050509392505050565b5f82601f830112610a9f57610a9e6106bc565b5b8135610aaf848260208601610a23565b91505092915050565b5f67ffffffffffffffff821115610ad257610ad16106d4565b5b602082029050602081019050919050565b5f67ffffffffffffffff821115610afd57610afc6106d4565b5b610b06826106c4565b9050602081019050919050565b5f610b25610b2084610ae3565b610732565b905082815260208101848484011115610b4157610b406106c0565b5b610b4c84828561077c565b509392505050565b5f82601f830112610b6857610b676106bc565b5b8135610b78848260208601610b13565b91505092915050565b5f610b93610b8e84610ab8565b610732565b90508083825260208201905060208402830185811115610bb657610bb56108d2565b5b835b81811015610bfd57803567ffffffffffffffff811115610bdb57610bda6106bc565b5b808601610be88982610b54565b85526020850194505050602081019050610bb8565b5050509392505050565b5f82601f830112610c1b57610c1a6106bc565b5b8135610c2b848260208601610b81565b91505092915050565b5f67ffffffffffffffff821115610c4e57610c4d6106d4565b5b602082029050602081019050919050565b5f610c71610c6c84610c34565b610732565b90508083825260208201905060208402830185811115610c9457610c936108d2565b5b835b81811015610cdb57803567ffffffffffffffff811115610cb957610cb86106bc565b5b808601610cc689826107cb565b85526020850194505050602081019050610c96565b5050509392505050565b5f82601f830112610cf957610cf86106bc565b5b8135610d09848260208601610c5f565b91505092915050565b5f805f8060808587031215610d2a57610d296106b4565b5b5f85013567ffffffffffffffff811115610d4757610d466106b8565b5b610d5387828801610998565b945050602085013567ffffffffffffffff811115610d7457610d736106b8565b5b610d8087828801610a8b565b935050604085013567ffffffffffffffff811115610da157610da06106b8565b5b610dad87828801610c07565b925050606085013567ffffffffffffffff811115610dce57610dcd6106b8565b5b610dda87828801610ce5565b91505092959194509250565b5f805f60608486031215610dfd57610dfc6106b4565b5b5f610e0a8682870161091c565b935050602084013567ffffffffffffffff811115610e2b57610e2a6106b8565b5b610e3786828701610b54565b925050604084013567ffffffffffffffff811115610e5857610e576106b8565b5b610e64868287016107cb565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ea582610857565b9150610eb083610857565b9250828201905060ff811115610ec957610ec8610e6e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b610f05816108f5565b82525050565b610f14816109f0565b82525050565b5f604082019050610f2d5f830185610efc565b610f3a6020830184610f0b565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f78578082015181840152602081019050610f5d565b5f8484015250505050565b5f610f8d82610f41565b610f978185610f4b565b9350610fa7818560208601610f5b565b610fb0816106c4565b840191505092915050565b5f604082019050610fce5f830185610efc565b8181036020830152610fe08184610f83565b90509392505050565b5f608082019050610ffc5f830187610848565b6110096020830186610863565b6110166040830185610848565b6110236060830184610848565b95945050505050565b5f60208201905061103f5f830184610efc565b92915050565b5f81905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a0000000000005f82015250565b5f611083601a83611045565b915061108e8261104f565b601a82019050919050565b5f6110a382610f41565b6110ad8185611045565b93506110bd818560208601610f5b565b80840191505092915050565b5f6110d382611077565b91506110df8285611099565b91506110eb8284611099565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212200dcf5c92c2a434028f9ac55812ed50d5fb9994e6b9de91fd40bd1f5377f7111664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1279 CODESIZE SUB DUP1 PUSH3 0x1279 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xE1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x111 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xAB DUP3 PUSH3 0x80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBD DUP2 PUSH3 0x9F JUMP JUMPDEST DUP2 EQ PUSH3 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xDB DUP2 PUSH3 0xB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF9 JUMPI PUSH3 0xF8 PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x108 DUP5 DUP3 DUP6 ADD PUSH3 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115A DUP1 PUSH3 0x11F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FF4BB4B EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x883A6C75 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x95E0E0C9 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH1 0x1B DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x1B DUP2 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x105 JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH2 0x178 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x135 JUMPI PUSH2 0x134 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x150 JUMPI PUSH2 0x14F PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16B JUMPI PUSH2 0x16A PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B4 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C6 JUMPI PUSH2 0x1C5 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E1 JUMPI PUSH2 0x1E0 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP3 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x710C6BEC3CF443B5AFBDA9FF86716F3A0D00DB3DDAEE6CC493C93BE240533E12 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x116 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 PUSH2 0x2CC DUP6 PUSH2 0xAD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH32 0x29BD5E82392230298810019D37E60FC402505ADB5AFA0F05072474634FCCA380 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x305 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466 PUSH1 0x1 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x350 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x370 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x408 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 MLOAD SWAP1 POP PUSH2 0x460 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x472 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x49E DUP5 PUSH2 0x55A JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x54F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x4FB JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5B6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5F3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5E9 JUMPI PUSH2 0x5E8 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x622 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x64B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x641 JUMPI PUSH2 0x640 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x670 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x693 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6A2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x6C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73B PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH2 0x747 DUP3 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x765 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH2 0x76F DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79C PUSH2 0x797 DUP5 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH2 0x7C3 DUP5 DUP3 DUP6 PUSH2 0x77C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7DF JUMPI PUSH2 0x7DE PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x78A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH2 0x829 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0x836 DUP5 DUP3 DUP6 ADD PUSH2 0x7CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x83F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x885 PUSH0 DUP4 ADD DUP7 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x892 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x89F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8FF DUP3 PUSH2 0x8D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x942 PUSH2 0x93D DUP5 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI DUP1 PUSH2 0x97A DUP9 DUP3 PUSH2 0x91C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x967 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x930 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA02 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1D DUP2 PUSH2 0x9F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA35 PUSH2 0xA30 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA81 JUMPI DUP1 PUSH2 0xA6D DUP9 DUP3 PUSH2 0xA0F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA5A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAAF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH2 0xB06 DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB25 PUSH2 0xB20 DUP5 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB40 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH2 0xB4C DUP5 DUP3 DUP6 PUSH2 0x77C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB78 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB93 PUSH2 0xB8E DUP5 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFD JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDA PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xBE8 DUP10 DUP3 PUSH2 0xB54 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBB8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC4E JUMPI PUSH2 0xC4D PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC71 PUSH2 0xC6C DUP5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC94 JUMPI PUSH2 0xC93 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xCC6 DUP10 DUP3 PUSH2 0x7CB JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD09 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD29 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xD53 DUP8 DUP3 DUP9 ADD PUSH2 0x998 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xD80 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xDAD DUP8 DUP3 DUP9 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xDDA DUP8 DUP3 DUP9 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0A DUP7 DUP3 DUP8 ADD PUSH2 0x91C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xE37 DUP7 DUP3 DUP8 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xE64 DUP7 DUP3 DUP8 ADD PUSH2 0x7CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEA5 DUP3 PUSH2 0x857 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB0 DUP4 PUSH2 0x857 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0xEC9 JUMPI PUSH2 0xEC8 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF2D PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0xF3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF5D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF8D DUP3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF97 DUP2 DUP6 PUSH2 0xF4B JUMP JUMPDEST SWAP4 POP PUSH2 0xFA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFE0 DUP2 DUP5 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xFFC PUSH0 DUP4 ADD DUP8 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x1009 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1016 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103F PUSH0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1083 PUSH1 0x1A DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH2 0x108E DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 DUP3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x10AD DUP2 DUP6 PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH2 0x10BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10D3 DUP3 PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DF DUP3 DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EB DUP3 DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xCF TLOAD SWAP3 0xC2 LOG4 CALLVALUE MUL DUP16 SWAP11 0xC5 PC SLT 0xED POP 0xD5 0xFB SWAP10 SWAP5 0xE6 0xB9 0xDE SWAP2 REVERT BLOCKHASH 0xBD 0x1F MSTORE8 PUSH24 0xF7111664736F6C6343000818003300000000000000000000 ",
							"sourceMap": "143:2623:9:-:0;;;203:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;261:3;239:9;;:26;;;;;;;;;;;;;;;;;;203:70;143:2623;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;143:2623:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getEthSignMsgHash_2390": {
									"entryPoint": 1105,
									"id": 2390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1914": {
									"entryPoint": 1370,
									"id": 1914,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2306": {
									"entryPoint": 276,
									"id": 2306,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@signTransaction_2362": {
									"entryPoint": 692,
									"id": 2362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@splitSign_2429": {
									"entryPoint": 173,
									"id": 2429,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@toString_853": {
									"entryPoint": 1168,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 2040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4": {
									"entryPoint": 4175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20273:10",
										"nodeType": "YulBlock",
										"src": "0:20273:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1362:241:10",
													"nodeType": "YulBlock",
													"src": "1362:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1467:22:10",
																"nodeType": "YulBlock",
																"src": "1467:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1469:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1469:16:10"
																			},
																			"nativeSrc": "1469:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1469:18:10"
																		},
																		"nativeSrc": "1469:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1439:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1439:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1447:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1447:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:10"
																},
																"nativeSrc": "1436:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1436:30:10"
															},
															"nativeSrc": "1433:56:10",
															"nodeType": "YulIf",
															"src": "1433:56:10"
														},
														{
															"nativeSrc": "1499:37:10",
															"nodeType": "YulAssignment",
															"src": "1499:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1529:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1507:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1507:21:10"
																},
																"nativeSrc": "1507:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1507:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1499:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:4:10"
																}
															]
														},
														{
															"nativeSrc": "1573:23:10",
															"nodeType": "YulAssignment",
															"src": "1573:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1585:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1585:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1581:3:10"
																},
																"nativeSrc": "1581:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1581:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1573:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1573:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1296:307:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1346:6:10",
														"nodeType": "YulTypedName",
														"src": "1346:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1357:4:10",
														"nodeType": "YulTypedName",
														"src": "1357:4:10",
														"type": ""
													}
												],
												"src": "1296:307:10"
											},
											{
												"body": {
													"nativeSrc": "1673:82:10",
													"nodeType": "YulBlock",
													"src": "1673:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1696:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1696:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1701:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1701:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1706:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1683:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:12:10"
																},
																"nativeSrc": "1683:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:30:10"
															},
															"nativeSrc": "1683:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1683:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1733:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1733:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1738:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1729:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1729:3:10"
																		},
																		"nativeSrc": "1729:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1729:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1747:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1747:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1722:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:10"
																},
																"nativeSrc": "1722:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1722:27:10"
															},
															"nativeSrc": "1722:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1722:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1609:146:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1655:3:10",
														"nodeType": "YulTypedName",
														"src": "1655:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1660:3:10",
														"nodeType": "YulTypedName",
														"src": "1660:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1665:6:10",
														"nodeType": "YulTypedName",
														"src": "1665:6:10",
														"type": ""
													}
												],
												"src": "1609:146:10"
											},
											{
												"body": {
													"nativeSrc": "1844:340:10",
													"nodeType": "YulBlock",
													"src": "1844:340:10",
													"statements": [
														{
															"nativeSrc": "1854:74:10",
															"nodeType": "YulAssignment",
															"src": "1854:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1920:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "1879:40:10",
																			"nodeType": "YulIdentifier",
																			"src": "1879:40:10"
																		},
																		"nativeSrc": "1879:48:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1863:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:15:10"
																},
																"nativeSrc": "1863:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1863:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1854:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1854:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1944:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1944:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1937:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:10"
																},
																"nativeSrc": "1937:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1937:21:10"
															},
															"nativeSrc": "1937:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1937:21:10"
														},
														{
															"nativeSrc": "1967:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1967:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1982:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1982:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1989:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1989:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1978:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1978:3:10"
																},
																"nativeSrc": "1978:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1978:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1971:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1971:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2032:83:10",
																"nodeType": "YulBlock",
																"src": "2032:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2034:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2034:77:10"
																			},
																			"nativeSrc": "2034:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2034:79:10"
																		},
																		"nativeSrc": "2034:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2034:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2013:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2013:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:10"
																		},
																		"nativeSrc": "2009:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2027:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2027:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2006:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2006:2:10"
																},
																"nativeSrc": "2006:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2006:25:10"
															},
															"nativeSrc": "2003:112:10",
															"nodeType": "YulIf",
															"src": "2003:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2161:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2161:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2166:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2171:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2124:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "2124:36:10"
																},
																"nativeSrc": "2124:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2124:54:10"
															},
															"nativeSrc": "2124:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "2124:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "1761:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1817:3:10",
														"nodeType": "YulTypedName",
														"src": "1817:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1822:6:10",
														"nodeType": "YulTypedName",
														"src": "1822:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1830:3:10",
														"nodeType": "YulTypedName",
														"src": "1830:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1838:5:10",
														"nodeType": "YulTypedName",
														"src": "1838:5:10",
														"type": ""
													}
												],
												"src": "1761:423:10"
											},
											{
												"body": {
													"nativeSrc": "2264:277:10",
													"nodeType": "YulBlock",
													"src": "2264:277:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2313:83:10",
																"nodeType": "YulBlock",
																"src": "2313:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2315:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2315:77:10"
																			},
																			"nativeSrc": "2315:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2315:79:10"
																		},
																		"nativeSrc": "2315:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2315:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2292:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2292:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2300:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2300:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2288:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2288:3:10"
																				},
																				"nativeSrc": "2288:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2288:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2307:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2307:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2284:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2284:3:10"
																		},
																		"nativeSrc": "2284:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:10"
																},
																"nativeSrc": "2277:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2277:35:10"
															},
															"nativeSrc": "2274:122:10",
															"nodeType": "YulIf",
															"src": "2274:122:10"
														},
														{
															"nativeSrc": "2405:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2405:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2432:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2419:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2419:12:10"
																},
																"nativeSrc": "2419:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2419:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2409:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2409:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2448:87:10",
															"nodeType": "YulAssignment",
															"src": "2448:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2508:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2508:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2516:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2516:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:10"
																		},
																		"nativeSrc": "2504:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2504:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2523:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2531:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2531:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "2457:46:10",
																	"nodeType": "YulIdentifier",
																	"src": "2457:46:10"
																},
																"nativeSrc": "2457:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2457:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2448:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2448:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "2203:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2242:6:10",
														"nodeType": "YulTypedName",
														"src": "2242:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2250:3:10",
														"nodeType": "YulTypedName",
														"src": "2250:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2258:5:10",
														"nodeType": "YulTypedName",
														"src": "2258:5:10",
														"type": ""
													}
												],
												"src": "2203:338:10"
											},
											{
												"body": {
													"nativeSrc": "2622:432:10",
													"nodeType": "YulBlock",
													"src": "2622:432:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:10",
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nativeSrc": "2670:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nativeSrc": "2670:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nativeSrc": "2639:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nativeSrc": "2635:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nativeSrc": "2632:119:10",
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nativeSrc": "2761:286:10",
															"nodeType": "YulBlock",
															"src": "2761:286:10",
															"statements": [
																{
																	"nativeSrc": "2776:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2807:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2807:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2818:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2818:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2803:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2803:3:10"
																				},
																				"nativeSrc": "2803:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2803:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2790:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "2790:12:10"
																		},
																		"nativeSrc": "2790:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2868:83:10",
																		"nodeType": "YulBlock",
																		"src": "2868:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2870:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "2870:77:10"
																					},
																					"nativeSrc": "2870:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2870:79:10"
																				},
																				"nativeSrc": "2870:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2870:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2840:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2840:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2848:18:10",
																				"nodeType": "YulLiteral",
																				"src": "2848:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2837:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2837:2:10"
																		},
																		"nativeSrc": "2837:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2837:30:10"
																	},
																	"nativeSrc": "2834:117:10",
																	"nodeType": "YulIf",
																	"src": "2834:117:10"
																},
																{
																	"nativeSrc": "2965:72:10",
																	"nodeType": "YulAssignment",
																	"src": "2965:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3005:3:10"
																				},
																				"nativeSrc": "3005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "2975:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "2975:29:10"
																		},
																		"nativeSrc": "2975:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2965:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nativeSrc": "2547:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2592:9:10",
														"nodeType": "YulTypedName",
														"src": "2592:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2603:7:10",
														"nodeType": "YulTypedName",
														"src": "2603:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2615:6:10",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2547:507:10"
											},
											{
												"body": {
													"nativeSrc": "3105:32:10",
													"nodeType": "YulBlock",
													"src": "3105:32:10",
													"statements": [
														{
															"nativeSrc": "3115:16:10",
															"nodeType": "YulAssignment",
															"src": "3115:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3126:5:10",
																"nodeType": "YulIdentifier",
																"src": "3126:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3115:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3115:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3060:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3087:5:10",
														"nodeType": "YulTypedName",
														"src": "3087:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3097:7:10",
														"nodeType": "YulTypedName",
														"src": "3097:7:10",
														"type": ""
													}
												],
												"src": "3060:77:10"
											},
											{
												"body": {
													"nativeSrc": "3208:53:10",
													"nodeType": "YulBlock",
													"src": "3208:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3225:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3248:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3248:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3230:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3230:17:10"
																		},
																		"nativeSrc": "3230:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:10"
																},
																"nativeSrc": "3218:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3218:37:10"
															},
															"nativeSrc": "3218:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3218:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3143:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3196:5:10",
														"nodeType": "YulTypedName",
														"src": "3196:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3203:3:10",
														"nodeType": "YulTypedName",
														"src": "3203:3:10",
														"type": ""
													}
												],
												"src": "3143:118:10"
											},
											{
												"body": {
													"nativeSrc": "3310:43:10",
													"nodeType": "YulBlock",
													"src": "3310:43:10",
													"statements": [
														{
															"nativeSrc": "3320:27:10",
															"nodeType": "YulAssignment",
															"src": "3320:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3335:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3335:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3342:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3342:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:10"
																},
																"nativeSrc": "3331:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3331:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3320:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3320:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3267:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3292:5:10",
														"nodeType": "YulTypedName",
														"src": "3292:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3302:7:10",
														"nodeType": "YulTypedName",
														"src": "3302:7:10",
														"type": ""
													}
												],
												"src": "3267:86:10"
											},
											{
												"body": {
													"nativeSrc": "3420:51:10",
													"nodeType": "YulBlock",
													"src": "3420:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3437:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3437:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3458:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3458:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3442:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "3442:15:10"
																		},
																		"nativeSrc": "3442:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3430:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:6:10"
																},
																"nativeSrc": "3430:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:35:10"
															},
															"nativeSrc": "3430:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "3430:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3359:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3408:5:10",
														"nodeType": "YulTypedName",
														"src": "3408:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3415:3:10",
														"nodeType": "YulTypedName",
														"src": "3415:3:10",
														"type": ""
													}
												],
												"src": "3359:112:10"
											},
											{
												"body": {
													"nativeSrc": "3627:284:10",
													"nodeType": "YulBlock",
													"src": "3627:284:10",
													"statements": [
														{
															"nativeSrc": "3637:26:10",
															"nodeType": "YulAssignment",
															"src": "3637:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3649:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3649:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3660:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3660:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3645:3:10"
																},
																"nativeSrc": "3645:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3645:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3637:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3637:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3717:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3717:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3730:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3730:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3741:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3741:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3726:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:10"
																		},
																		"nativeSrc": "3726:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3726:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3673:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3673:43:10"
																},
																"nativeSrc": "3673:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3673:71:10"
															},
															"nativeSrc": "3673:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3673:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3798:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3811:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3811:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3822:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3822:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3807:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:10"
																		},
																		"nativeSrc": "3807:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3754:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3754:43:10"
																},
																"nativeSrc": "3754:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3754:72:10"
															},
															"nativeSrc": "3754:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3754:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3876:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3876:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3889:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3889:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3900:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3900:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3885:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3885:3:10"
																		},
																		"nativeSrc": "3885:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3885:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "3836:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "3836:39:10"
																},
																"nativeSrc": "3836:68:10",
																"nodeType": "YulFunctionCall",
																"src": "3836:68:10"
															},
															"nativeSrc": "3836:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "3836:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nativeSrc": "3477:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3583:9:10",
														"nodeType": "YulTypedName",
														"src": "3583:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3595:6:10",
														"nodeType": "YulTypedName",
														"src": "3595:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3603:6:10",
														"nodeType": "YulTypedName",
														"src": "3603:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3611:6:10",
														"nodeType": "YulTypedName",
														"src": "3611:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3622:4:10",
														"nodeType": "YulTypedName",
														"src": "3622:4:10",
														"type": ""
													}
												],
												"src": "3477:434:10"
											},
											{
												"body": {
													"nativeSrc": "3999:229:10",
													"nodeType": "YulBlock",
													"src": "3999:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4104:22:10",
																"nodeType": "YulBlock",
																"src": "4104:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4106:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4106:16:10"
																			},
																			"nativeSrc": "4106:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:18:10"
																		},
																		"nativeSrc": "4106:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4076:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4076:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4084:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4084:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4073:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4073:2:10"
																},
																"nativeSrc": "4073:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4073:30:10"
															},
															"nativeSrc": "4070:56:10",
															"nodeType": "YulIf",
															"src": "4070:56:10"
														},
														{
															"nativeSrc": "4136:25:10",
															"nodeType": "YulAssignment",
															"src": "4136:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4148:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4148:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4156:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4144:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:10"
																},
																"nativeSrc": "4144:17:10",
																"nodeType": "YulFunctionCall",
																"src": "4144:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4136:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:10"
																}
															]
														},
														{
															"nativeSrc": "4198:23:10",
															"nodeType": "YulAssignment",
															"src": "4198:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4210:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4210:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4216:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4216:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:10"
																},
																"nativeSrc": "4206:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4206:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4198:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4198:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "3917:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3983:6:10",
														"nodeType": "YulTypedName",
														"src": "3983:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3994:4:10",
														"nodeType": "YulTypedName",
														"src": "3994:4:10",
														"type": ""
													}
												],
												"src": "3917:311:10"
											},
											{
												"body": {
													"nativeSrc": "4323:28:10",
													"nodeType": "YulBlock",
													"src": "4323:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4340:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4340:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4333:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:10"
																},
																"nativeSrc": "4333:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:10"
															},
															"nativeSrc": "4333:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "4333:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4234:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4234:117:10"
											},
											{
												"body": {
													"nativeSrc": "4402:81:10",
													"nodeType": "YulBlock",
													"src": "4402:81:10",
													"statements": [
														{
															"nativeSrc": "4412:65:10",
															"nodeType": "YulAssignment",
															"src": "4412:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4427:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4427:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:42:10",
																		"nodeType": "YulLiteral",
																		"src": "4434:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4423:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:10"
																},
																"nativeSrc": "4423:54:10",
																"nodeType": "YulFunctionCall",
																"src": "4423:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4412:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4412:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "4357:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4384:5:10",
														"nodeType": "YulTypedName",
														"src": "4384:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4394:7:10",
														"nodeType": "YulTypedName",
														"src": "4394:7:10",
														"type": ""
													}
												],
												"src": "4357:126:10"
											},
											{
												"body": {
													"nativeSrc": "4534:51:10",
													"nodeType": "YulBlock",
													"src": "4534:51:10",
													"statements": [
														{
															"nativeSrc": "4544:35:10",
															"nodeType": "YulAssignment",
															"src": "4544:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4573:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4555:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4555:17:10"
																},
																"nativeSrc": "4555:24:10",
																"nodeType": "YulFunctionCall",
																"src": "4555:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4544:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4544:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4489:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4516:5:10",
														"nodeType": "YulTypedName",
														"src": "4516:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4526:7:10",
														"nodeType": "YulTypedName",
														"src": "4526:7:10",
														"type": ""
													}
												],
												"src": "4489:96:10"
											},
											{
												"body": {
													"nativeSrc": "4634:79:10",
													"nodeType": "YulBlock",
													"src": "4634:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4691:16:10",
																"nodeType": "YulBlock",
																"src": "4691:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4700:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4700:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4703:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4703:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4693:6:10"
																			},
																			"nativeSrc": "4693:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4693:12:10"
																		},
																		"nativeSrc": "4693:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4693:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4657:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4657:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4682:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4682:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4664:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4664:17:10"
																				},
																				"nativeSrc": "4664:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4664:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4654:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4654:2:10"
																		},
																		"nativeSrc": "4654:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4647:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:10"
																},
																"nativeSrc": "4647:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4647:43:10"
															},
															"nativeSrc": "4644:63:10",
															"nodeType": "YulIf",
															"src": "4644:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4591:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4627:5:10",
														"nodeType": "YulTypedName",
														"src": "4627:5:10",
														"type": ""
													}
												],
												"src": "4591:122:10"
											},
											{
												"body": {
													"nativeSrc": "4771:87:10",
													"nodeType": "YulBlock",
													"src": "4771:87:10",
													"statements": [
														{
															"nativeSrc": "4781:29:10",
															"nodeType": "YulAssignment",
															"src": "4781:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4803:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4803:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4790:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4790:12:10"
																},
																"nativeSrc": "4790:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4790:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4781:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4781:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4846:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4846:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4819:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4819:26:10"
																},
																"nativeSrc": "4819:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4819:33:10"
															},
															"nativeSrc": "4819:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4819:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4719:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4749:6:10",
														"nodeType": "YulTypedName",
														"src": "4749:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4757:3:10",
														"nodeType": "YulTypedName",
														"src": "4757:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4765:5:10",
														"nodeType": "YulTypedName",
														"src": "4765:5:10",
														"type": ""
													}
												],
												"src": "4719:139:10"
											},
											{
												"body": {
													"nativeSrc": "4983:608:10",
													"nodeType": "YulBlock",
													"src": "4983:608:10",
													"statements": [
														{
															"nativeSrc": "4993:90:10",
															"nodeType": "YulAssignment",
															"src": "4993:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5075:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5075:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "5018:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "5018:56:10"
																		},
																		"nativeSrc": "5018:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5002:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "5002:15:10"
																},
																"nativeSrc": "5002:81:10",
																"nodeType": "YulFunctionCall",
																"src": "5002:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4993:5:10"
																}
															]
														},
														{
															"nativeSrc": "5092:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5092:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "5103:5:10",
																"nodeType": "YulIdentifier",
																"src": "5103:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5096:3:10",
																	"nodeType": "YulTypedName",
																	"src": "5096:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5125:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5125:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5132:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5132:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:10"
																},
																"nativeSrc": "5118:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5118:21:10"
															},
															"nativeSrc": "5118:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5118:21:10"
														},
														{
															"nativeSrc": "5148:23:10",
															"nodeType": "YulAssignment",
															"src": "5148:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5159:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5159:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5166:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5166:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:10"
																},
																"nativeSrc": "5155:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5155:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5148:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5148:3:10"
																}
															]
														},
														{
															"nativeSrc": "5181:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5181:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5199:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5199:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5211:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5211:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5219:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5219:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:10"
																		},
																		"nativeSrc": "5207:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5195:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:10"
																},
																"nativeSrc": "5195:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5195:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5185:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5185:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5253:103:10",
																"nodeType": "YulBlock",
																"src": "5253:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5267:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5267:77:10"
																			},
																			"nativeSrc": "5267:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5267:79:10"
																		},
																		"nativeSrc": "5267:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5267:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5240:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5248:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5248:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5237:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5237:2:10"
																},
																"nativeSrc": "5237:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5237:15:10"
															},
															"nativeSrc": "5234:122:10",
															"nodeType": "YulIf",
															"src": "5234:122:10"
														},
														{
															"body": {
																"nativeSrc": "5441:144:10",
																"nodeType": "YulBlock",
																"src": "5441:144:10",
																"statements": [
																	{
																		"nativeSrc": "5456:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5456:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "5474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "5460:10:10",
																				"nodeType": "YulTypedName",
																				"src": "5460:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5498:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5498:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "5524:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5524:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "5536:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5536:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "5503:20:10",
																						"nodeType": "YulIdentifier",
																						"src": "5503:20:10"
																					},
																					"nativeSrc": "5503:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5503:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5491:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5491:6:10"
																			},
																			"nativeSrc": "5491:50:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5491:50:10"
																		},
																		"nativeSrc": "5491:50:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5491:50:10"
																	},
																	{
																		"nativeSrc": "5554:21:10",
																		"nodeType": "YulAssignment",
																		"src": "5554:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5565:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5565:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5570:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5570:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5561:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5561:3:10"
																			},
																			"nativeSrc": "5561:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5561:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5554:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5554:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5394:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5394:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5399:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5399:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5391:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5391:2:10"
																},
																"nativeSrc": "5391:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5391:15:10"
															},
															"nativeSrc": "5365:220:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5407:25:10",
																"nodeType": "YulBlock",
																"src": "5407:25:10",
																"statements": [
																	{
																		"nativeSrc": "5409:21:10",
																		"nodeType": "YulAssignment",
																		"src": "5409:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5420:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5420:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5425:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5425:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5416:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5416:3:10"
																			},
																			"nativeSrc": "5416:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5416:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5409:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5409:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5369:21:10",
																"nodeType": "YulBlock",
																"src": "5369:21:10",
																"statements": [
																	{
																		"nativeSrc": "5371:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5371:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "5382:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5382:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "5375:3:10",
																				"nodeType": "YulTypedName",
																				"src": "5375:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5365:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "4881:710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4953:6:10",
														"nodeType": "YulTypedName",
														"src": "4953:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4961:6:10",
														"nodeType": "YulTypedName",
														"src": "4961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4969:3:10",
														"nodeType": "YulTypedName",
														"src": "4969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4977:5:10",
														"nodeType": "YulTypedName",
														"src": "4977:5:10",
														"type": ""
													}
												],
												"src": "4881:710:10"
											},
											{
												"body": {
													"nativeSrc": "5691:293:10",
													"nodeType": "YulBlock",
													"src": "5691:293:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5740:83:10",
																"nodeType": "YulBlock",
																"src": "5740:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5742:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5742:77:10"
																			},
																			"nativeSrc": "5742:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5742:79:10"
																		},
																		"nativeSrc": "5742:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5742:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5719:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5719:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5727:4:10",
																						"nodeType": "YulLiteral",
																						"src": "5727:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5715:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:10"
																				},
																				"nativeSrc": "5715:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5715:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5734:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5734:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:10"
																		},
																		"nativeSrc": "5711:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5704:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:10"
																},
																"nativeSrc": "5704:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5704:35:10"
															},
															"nativeSrc": "5701:122:10",
															"nodeType": "YulIf",
															"src": "5701:122:10"
														},
														{
															"nativeSrc": "5832:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5832:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5859:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5846:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5846:12:10"
																},
																"nativeSrc": "5846:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5846:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5836:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5836:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5875:103:10",
															"nodeType": "YulAssignment",
															"src": "5875:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5959:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5959:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5947:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5947:3:10"
																		},
																		"nativeSrc": "5947:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5966:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5966:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5974:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5974:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "5884:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "5884:62:10"
																},
																"nativeSrc": "5884:94:10",
																"nodeType": "YulFunctionCall",
																"src": "5884:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5875:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5875:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5614:370:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5669:6:10",
														"nodeType": "YulTypedName",
														"src": "5669:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5677:3:10",
														"nodeType": "YulTypedName",
														"src": "5677:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5685:5:10",
														"nodeType": "YulTypedName",
														"src": "5685:5:10",
														"type": ""
													}
												],
												"src": "5614:370:10"
											},
											{
												"body": {
													"nativeSrc": "6072:229:10",
													"nodeType": "YulBlock",
													"src": "6072:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6177:22:10",
																"nodeType": "YulBlock",
																"src": "6177:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6179:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6179:16:10"
																			},
																			"nativeSrc": "6179:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6179:18:10"
																		},
																		"nativeSrc": "6179:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6179:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6149:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6149:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:18:10",
																		"nodeType": "YulLiteral",
																		"src": "6157:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6146:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6146:2:10"
																},
																"nativeSrc": "6146:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6146:30:10"
															},
															"nativeSrc": "6143:56:10",
															"nodeType": "YulIf",
															"src": "6143:56:10"
														},
														{
															"nativeSrc": "6209:25:10",
															"nodeType": "YulAssignment",
															"src": "6209:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6221:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6229:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6229:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6217:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:10"
																},
																"nativeSrc": "6217:17:10",
																"nodeType": "YulFunctionCall",
																"src": "6217:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6209:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6209:4:10"
																}
															]
														},
														{
															"nativeSrc": "6271:23:10",
															"nodeType": "YulAssignment",
															"src": "6271:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6283:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6283:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6289:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6289:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																},
																"nativeSrc": "6279:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6279:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6271:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6271:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5990:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6056:6:10",
														"nodeType": "YulTypedName",
														"src": "6056:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6067:4:10",
														"nodeType": "YulTypedName",
														"src": "6067:4:10",
														"type": ""
													}
												],
												"src": "5990:311:10"
											},
											{
												"body": {
													"nativeSrc": "6352:32:10",
													"nodeType": "YulBlock",
													"src": "6352:32:10",
													"statements": [
														{
															"nativeSrc": "6362:16:10",
															"nodeType": "YulAssignment",
															"src": "6362:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "6373:5:10",
																"nodeType": "YulIdentifier",
																"src": "6373:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6362:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6362:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6307:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6334:5:10",
														"nodeType": "YulTypedName",
														"src": "6334:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6344:7:10",
														"nodeType": "YulTypedName",
														"src": "6344:7:10",
														"type": ""
													}
												],
												"src": "6307:77:10"
											},
											{
												"body": {
													"nativeSrc": "6433:79:10",
													"nodeType": "YulBlock",
													"src": "6433:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6490:16:10",
																"nodeType": "YulBlock",
																"src": "6490:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6499:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6499:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6492:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6492:6:10"
																			},
																			"nativeSrc": "6492:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:12:10"
																		},
																		"nativeSrc": "6492:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6456:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6456:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6481:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6481:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6463:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "6463:17:10"
																				},
																				"nativeSrc": "6463:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6463:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6453:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6453:2:10"
																		},
																		"nativeSrc": "6453:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6446:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:10"
																},
																"nativeSrc": "6446:43:10",
																"nodeType": "YulFunctionCall",
																"src": "6446:43:10"
															},
															"nativeSrc": "6443:63:10",
															"nodeType": "YulIf",
															"src": "6443:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6390:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6426:5:10",
														"nodeType": "YulTypedName",
														"src": "6426:5:10",
														"type": ""
													}
												],
												"src": "6390:122:10"
											},
											{
												"body": {
													"nativeSrc": "6570:87:10",
													"nodeType": "YulBlock",
													"src": "6570:87:10",
													"statements": [
														{
															"nativeSrc": "6580:29:10",
															"nodeType": "YulAssignment",
															"src": "6580:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6602:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6589:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6589:12:10"
																},
																"nativeSrc": "6589:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6589:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6580:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6580:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6645:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6645:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6618:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "6618:26:10"
																},
																"nativeSrc": "6618:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6618:33:10"
															},
															"nativeSrc": "6618:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "6618:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "6518:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6548:6:10",
														"nodeType": "YulTypedName",
														"src": "6548:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6556:3:10",
														"nodeType": "YulTypedName",
														"src": "6556:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6564:5:10",
														"nodeType": "YulTypedName",
														"src": "6564:5:10",
														"type": ""
													}
												],
												"src": "6518:139:10"
											},
											{
												"body": {
													"nativeSrc": "6782:608:10",
													"nodeType": "YulBlock",
													"src": "6782:608:10",
													"statements": [
														{
															"nativeSrc": "6792:90:10",
															"nodeType": "YulAssignment",
															"src": "6792:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6874:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6874:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6817:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "6817:56:10"
																		},
																		"nativeSrc": "6817:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6817:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6801:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "6801:15:10"
																},
																"nativeSrc": "6801:81:10",
																"nodeType": "YulFunctionCall",
																"src": "6801:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6792:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6792:5:10"
																}
															]
														},
														{
															"nativeSrc": "6891:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6891:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "6902:5:10",
																"nodeType": "YulIdentifier",
																"src": "6902:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6895:3:10",
																	"nodeType": "YulTypedName",
																	"src": "6895:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6924:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6924:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6931:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6931:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6917:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6917:6:10"
																},
																"nativeSrc": "6917:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6917:21:10"
															},
															"nativeSrc": "6917:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6917:21:10"
														},
														{
															"nativeSrc": "6947:23:10",
															"nodeType": "YulAssignment",
															"src": "6947:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6958:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6958:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6965:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6965:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6954:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:10"
																},
																"nativeSrc": "6954:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6954:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6947:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6947:3:10"
																}
															]
														},
														{
															"nativeSrc": "6980:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6980:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6998:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6998:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7010:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7018:4:10",
																				"nodeType": "YulLiteral",
																				"src": "7018:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:10"
																		},
																		"nativeSrc": "7006:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7006:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6994:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6994:3:10"
																},
																"nativeSrc": "6994:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6994:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6984:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6984:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7052:103:10",
																"nodeType": "YulBlock",
																"src": "7052:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7066:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7066:77:10"
																			},
																			"nativeSrc": "7066:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7066:79:10"
																		},
																		"nativeSrc": "7066:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7066:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7039:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7039:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7047:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7047:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7036:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7036:2:10"
																},
																"nativeSrc": "7036:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7036:15:10"
															},
															"nativeSrc": "7033:122:10",
															"nodeType": "YulIf",
															"src": "7033:122:10"
														},
														{
															"body": {
																"nativeSrc": "7240:144:10",
																"nodeType": "YulBlock",
																"src": "7240:144:10",
																"statements": [
																	{
																		"nativeSrc": "7255:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7255:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7259:10:10",
																				"nodeType": "YulTypedName",
																				"src": "7259:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7297:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7297:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7323:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "7323:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7335:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7335:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7302:20:10",
																						"nodeType": "YulIdentifier",
																						"src": "7302:20:10"
																					},
																					"nativeSrc": "7302:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7302:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7290:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7290:6:10"
																			},
																			"nativeSrc": "7290:50:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7290:50:10"
																		},
																		"nativeSrc": "7290:50:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7290:50:10"
																	},
																	{
																		"nativeSrc": "7353:21:10",
																		"nodeType": "YulAssignment",
																		"src": "7353:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7364:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7364:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7369:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7369:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7360:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7360:3:10"
																			},
																			"nativeSrc": "7360:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7360:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7353:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7353:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7193:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7193:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7198:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7198:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7190:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7190:2:10"
																},
																"nativeSrc": "7190:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7190:15:10"
															},
															"nativeSrc": "7164:220:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7206:25:10",
																"nodeType": "YulBlock",
																"src": "7206:25:10",
																"statements": [
																	{
																		"nativeSrc": "7208:21:10",
																		"nodeType": "YulAssignment",
																		"src": "7208:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7219:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7219:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7224:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7224:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7215:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7215:3:10"
																			},
																			"nativeSrc": "7215:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7215:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7208:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7208:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7168:21:10",
																"nodeType": "YulBlock",
																"src": "7168:21:10",
																"statements": [
																	{
																		"nativeSrc": "7170:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7170:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7181:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7181:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7174:3:10",
																				"nodeType": "YulTypedName",
																				"src": "7174:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7164:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6680:710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6752:6:10",
														"nodeType": "YulTypedName",
														"src": "6752:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6760:6:10",
														"nodeType": "YulTypedName",
														"src": "6760:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6768:3:10",
														"nodeType": "YulTypedName",
														"src": "6768:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6776:5:10",
														"nodeType": "YulTypedName",
														"src": "6776:5:10",
														"type": ""
													}
												],
												"src": "6680:710:10"
											},
											{
												"body": {
													"nativeSrc": "7490:293:10",
													"nodeType": "YulBlock",
													"src": "7490:293:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7539:83:10",
																"nodeType": "YulBlock",
																"src": "7539:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7541:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7541:77:10"
																			},
																			"nativeSrc": "7541:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7541:79:10"
																		},
																		"nativeSrc": "7541:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7541:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7518:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7518:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7526:4:10",
																						"nodeType": "YulLiteral",
																						"src": "7526:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7514:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7514:3:10"
																				},
																				"nativeSrc": "7514:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7514:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7533:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7533:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7510:3:10"
																		},
																		"nativeSrc": "7510:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7510:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7503:6:10"
																},
																"nativeSrc": "7503:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7503:35:10"
															},
															"nativeSrc": "7500:122:10",
															"nodeType": "YulIf",
															"src": "7500:122:10"
														},
														{
															"nativeSrc": "7631:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7631:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7658:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7645:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7645:12:10"
																},
																"nativeSrc": "7645:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7645:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7635:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7635:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7674:103:10",
															"nodeType": "YulAssignment",
															"src": "7674:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7750:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7750:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7758:4:10",
																				"nodeType": "YulLiteral",
																				"src": "7758:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7746:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7746:3:10"
																		},
																		"nativeSrc": "7746:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7746:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7765:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7765:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7773:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7773:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7683:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "7683:62:10"
																},
																"nativeSrc": "7683:94:10",
																"nodeType": "YulFunctionCall",
																"src": "7683:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7674:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7674:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7413:370:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7468:6:10",
														"nodeType": "YulTypedName",
														"src": "7468:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7476:3:10",
														"nodeType": "YulTypedName",
														"src": "7476:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7484:5:10",
														"nodeType": "YulTypedName",
														"src": "7484:5:10",
														"type": ""
													}
												],
												"src": "7413:370:10"
											},
											{
												"body": {
													"nativeSrc": "7881:229:10",
													"nodeType": "YulBlock",
													"src": "7881:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7986:22:10",
																"nodeType": "YulBlock",
																"src": "7986:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7988:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7988:16:10"
																			},
																			"nativeSrc": "7988:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7988:18:10"
																		},
																		"nativeSrc": "7988:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7988:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7958:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7966:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7966:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7955:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7955:2:10"
																},
																"nativeSrc": "7955:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7955:30:10"
															},
															"nativeSrc": "7952:56:10",
															"nodeType": "YulIf",
															"src": "7952:56:10"
														},
														{
															"nativeSrc": "8018:25:10",
															"nodeType": "YulAssignment",
															"src": "8018:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8030:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8030:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8038:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8038:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8026:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8026:3:10"
																},
																"nativeSrc": "8026:17:10",
																"nodeType": "YulFunctionCall",
																"src": "8026:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8018:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8018:4:10"
																}
															]
														},
														{
															"nativeSrc": "8080:23:10",
															"nodeType": "YulAssignment",
															"src": "8080:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8092:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8092:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8098:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8098:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8088:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8088:3:10"
																},
																"nativeSrc": "8088:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8088:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8080:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8080:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7789:321:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7865:6:10",
														"nodeType": "YulTypedName",
														"src": "7865:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7876:4:10",
														"nodeType": "YulTypedName",
														"src": "7876:4:10",
														"type": ""
													}
												],
												"src": "7789:321:10"
											},
											{
												"body": {
													"nativeSrc": "8183:241:10",
													"nodeType": "YulBlock",
													"src": "8183:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8288:22:10",
																"nodeType": "YulBlock",
																"src": "8288:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8290:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8290:16:10"
																			},
																			"nativeSrc": "8290:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8290:18:10"
																		},
																		"nativeSrc": "8290:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8290:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8260:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8260:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8268:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8268:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8257:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8257:2:10"
																},
																"nativeSrc": "8257:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8257:30:10"
															},
															"nativeSrc": "8254:56:10",
															"nodeType": "YulIf",
															"src": "8254:56:10"
														},
														{
															"nativeSrc": "8320:37:10",
															"nodeType": "YulAssignment",
															"src": "8320:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8350:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8350:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8328:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "8328:21:10"
																},
																"nativeSrc": "8328:29:10",
																"nodeType": "YulFunctionCall",
																"src": "8328:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8320:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8320:4:10"
																}
															]
														},
														{
															"nativeSrc": "8394:23:10",
															"nodeType": "YulAssignment",
															"src": "8394:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8406:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8406:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8412:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8412:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:10"
																},
																"nativeSrc": "8402:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8402:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8394:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8394:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8116:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8167:6:10",
														"nodeType": "YulTypedName",
														"src": "8167:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8178:4:10",
														"nodeType": "YulTypedName",
														"src": "8178:4:10",
														"type": ""
													}
												],
												"src": "8116:308:10"
											},
											{
												"body": {
													"nativeSrc": "8514:341:10",
													"nodeType": "YulBlock",
													"src": "8514:341:10",
													"statements": [
														{
															"nativeSrc": "8524:75:10",
															"nodeType": "YulAssignment",
															"src": "8524:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8591:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8591:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8549:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "8549:41:10"
																		},
																		"nativeSrc": "8549:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8549:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8533:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "8533:15:10"
																},
																"nativeSrc": "8533:66:10",
																"nodeType": "YulFunctionCall",
																"src": "8533:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8524:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8524:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8615:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8615:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8622:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8622:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8608:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:10"
																},
																"nativeSrc": "8608:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8608:21:10"
															},
															"nativeSrc": "8608:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8608:21:10"
														},
														{
															"nativeSrc": "8638:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8638:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8653:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8653:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8660:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8660:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:10"
																},
																"nativeSrc": "8649:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8649:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8642:3:10",
																	"nodeType": "YulTypedName",
																	"src": "8642:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8703:83:10",
																"nodeType": "YulBlock",
																"src": "8703:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8705:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:10"
																			},
																			"nativeSrc": "8705:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:10"
																		},
																		"nativeSrc": "8705:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8684:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8684:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8689:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8689:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:10"
																		},
																		"nativeSrc": "8680:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8680:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8698:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8698:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8677:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8677:2:10"
																},
																"nativeSrc": "8677:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8677:25:10"
															},
															"nativeSrc": "8674:112:10",
															"nodeType": "YulIf",
															"src": "8674:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8832:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8832:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8837:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8837:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8842:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8842:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8795:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "8795:36:10"
																},
																"nativeSrc": "8795:54:10",
																"nodeType": "YulFunctionCall",
																"src": "8795:54:10"
															},
															"nativeSrc": "8795:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "8795:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8430:425:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8487:3:10",
														"nodeType": "YulTypedName",
														"src": "8487:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8492:6:10",
														"nodeType": "YulTypedName",
														"src": "8492:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8500:3:10",
														"nodeType": "YulTypedName",
														"src": "8500:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8508:5:10",
														"nodeType": "YulTypedName",
														"src": "8508:5:10",
														"type": ""
													}
												],
												"src": "8430:425:10"
											},
											{
												"body": {
													"nativeSrc": "8937:278:10",
													"nodeType": "YulBlock",
													"src": "8937:278:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8986:83:10",
																"nodeType": "YulBlock",
																"src": "8986:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8988:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8988:77:10"
																			},
																			"nativeSrc": "8988:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8988:79:10"
																		},
																		"nativeSrc": "8988:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8988:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8965:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8965:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8973:4:10",
																						"nodeType": "YulLiteral",
																						"src": "8973:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8961:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8961:3:10"
																				},
																				"nativeSrc": "8961:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8961:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8980:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8980:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8957:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8957:3:10"
																		},
																		"nativeSrc": "8957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8957:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8950:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:10"
																},
																"nativeSrc": "8950:35:10",
																"nodeType": "YulFunctionCall",
																"src": "8950:35:10"
															},
															"nativeSrc": "8947:122:10",
															"nodeType": "YulIf",
															"src": "8947:122:10"
														},
														{
															"nativeSrc": "9078:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9078:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9105:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9105:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9092:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "9092:12:10"
																},
																"nativeSrc": "9092:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9092:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9082:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9082:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9121:88:10",
															"nodeType": "YulAssignment",
															"src": "9121:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9182:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9190:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9190:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9178:3:10"
																		},
																		"nativeSrc": "9178:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9178:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9197:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9197:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9205:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9130:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "9130:47:10"
																},
																"nativeSrc": "9130:79:10",
																"nodeType": "YulFunctionCall",
																"src": "9130:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9121:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9121:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8875:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8915:6:10",
														"nodeType": "YulTypedName",
														"src": "8915:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8923:3:10",
														"nodeType": "YulTypedName",
														"src": "8923:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8931:5:10",
														"nodeType": "YulTypedName",
														"src": "8931:5:10",
														"type": ""
													}
												],
												"src": "8875:340:10"
											},
											{
												"body": {
													"nativeSrc": "9349:833:10",
													"nodeType": "YulBlock",
													"src": "9349:833:10",
													"statements": [
														{
															"nativeSrc": "9359:100:10",
															"nodeType": "YulAssignment",
															"src": "9359:100:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9451:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9451:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "9384:66:10",
																			"nodeType": "YulIdentifier",
																			"src": "9384:66:10"
																		},
																		"nativeSrc": "9384:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9384:74:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9368:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "9368:15:10"
																},
																"nativeSrc": "9368:91:10",
																"nodeType": "YulFunctionCall",
																"src": "9368:91:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9359:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9359:5:10"
																}
															]
														},
														{
															"nativeSrc": "9468:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9468:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "9479:5:10",
																"nodeType": "YulIdentifier",
																"src": "9479:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9472:3:10",
																	"nodeType": "YulTypedName",
																	"src": "9472:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9501:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9501:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9508:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9508:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9494:6:10"
																},
																"nativeSrc": "9494:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9494:21:10"
															},
															"nativeSrc": "9494:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9494:21:10"
														},
														{
															"nativeSrc": "9524:23:10",
															"nodeType": "YulAssignment",
															"src": "9524:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9535:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9535:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9542:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9531:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9531:3:10"
																},
																"nativeSrc": "9531:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9531:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9524:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9524:3:10"
																}
															]
														},
														{
															"nativeSrc": "9557:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9557:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9575:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9575:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9587:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9587:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9595:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9595:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9583:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:10"
																		},
																		"nativeSrc": "9583:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9583:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9571:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9571:3:10"
																},
																"nativeSrc": "9571:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9571:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9561:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9561:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9629:103:10",
																"nodeType": "YulBlock",
																"src": "9629:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9643:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9643:77:10"
																			},
																			"nativeSrc": "9643:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9643:79:10"
																		},
																		"nativeSrc": "9643:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9643:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9616:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9616:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9624:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9624:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9613:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9613:2:10"
																},
																"nativeSrc": "9613:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9613:15:10"
															},
															"nativeSrc": "9610:122:10",
															"nodeType": "YulIf",
															"src": "9610:122:10"
														},
														{
															"body": {
																"nativeSrc": "9817:359:10",
																"nodeType": "YulBlock",
																"src": "9817:359:10",
																"statements": [
																	{
																		"nativeSrc": "9832:36:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9832:36:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9864:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9864:3:10"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "9851:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "9851:12:10"
																			},
																			"nativeSrc": "9851:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9851:17:10"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "9836:11:10",
																				"nodeType": "YulTypedName",
																				"src": "9836:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9920:83:10",
																			"nodeType": "YulBlock",
																			"src": "9920:83:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "9922:77:10",
																							"nodeType": "YulIdentifier",
																							"src": "9922:77:10"
																						},
																						"nativeSrc": "9922:79:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9922:79:10"
																					},
																					"nativeSrc": "9922:79:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "9922:79:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "9887:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "9887:11:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9900:18:10",
																					"nodeType": "YulLiteral",
																					"src": "9900:18:10",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9884:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "9884:2:10"
																			},
																			"nativeSrc": "9884:35:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9884:35:10"
																		},
																		"nativeSrc": "9881:122:10",
																		"nodeType": "YulIf",
																		"src": "9881:122:10"
																	},
																	{
																		"nativeSrc": "10016:42:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10016:42:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "10038:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10038:6:10"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "10046:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "10046:11:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10034:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10034:3:10"
																			},
																			"nativeSrc": "10034:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10034:24:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10020:10:10",
																				"nodeType": "YulTypedName",
																				"src": "10020:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10079:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10079:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10115:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "10115:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10127:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10127:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_string_memory_ptr",
																						"nativeSrc": "10084:30:10",
																						"nodeType": "YulIdentifier",
																						"src": "10084:30:10"
																					},
																					"nativeSrc": "10084:47:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10084:47:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10072:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10072:6:10"
																			},
																			"nativeSrc": "10072:60:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10072:60:10"
																		},
																		"nativeSrc": "10072:60:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10072:60:10"
																	},
																	{
																		"nativeSrc": "10145:21:10",
																		"nodeType": "YulAssignment",
																		"src": "10145:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10156:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10156:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10161:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10161:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10152:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10152:3:10"
																			},
																			"nativeSrc": "10152:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10152:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10145:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10145:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9770:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9775:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9767:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9767:2:10"
																},
																"nativeSrc": "9767:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9767:15:10"
															},
															"nativeSrc": "9741:435:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9783:25:10",
																"nodeType": "YulBlock",
																"src": "9783:25:10",
																"statements": [
																	{
																		"nativeSrc": "9785:21:10",
																		"nodeType": "YulAssignment",
																		"src": "9785:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9796:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9796:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9801:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9801:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9792:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9792:3:10"
																			},
																			"nativeSrc": "9792:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9792:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9785:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9785:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9745:21:10",
																"nodeType": "YulBlock",
																"src": "9745:21:10",
																"statements": [
																	{
																		"nativeSrc": "9747:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9747:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9758:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9758:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9751:3:10",
																				"nodeType": "YulTypedName",
																				"src": "9751:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9741:435:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9237:945:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9319:6:10",
														"nodeType": "YulTypedName",
														"src": "9319:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9327:6:10",
														"nodeType": "YulTypedName",
														"src": "9327:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9335:3:10",
														"nodeType": "YulTypedName",
														"src": "9335:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9343:5:10",
														"nodeType": "YulTypedName",
														"src": "9343:5:10",
														"type": ""
													}
												],
												"src": "9237:945:10"
											},
											{
												"body": {
													"nativeSrc": "10291:303:10",
													"nodeType": "YulBlock",
													"src": "10291:303:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10340:83:10",
																"nodeType": "YulBlock",
																"src": "10340:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10342:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10342:77:10"
																			},
																			"nativeSrc": "10342:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10342:79:10"
																		},
																		"nativeSrc": "10342:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10342:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10319:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10319:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10327:4:10",
																						"nodeType": "YulLiteral",
																						"src": "10327:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10315:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10315:3:10"
																				},
																				"nativeSrc": "10315:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10315:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10334:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10334:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10311:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:10"
																		},
																		"nativeSrc": "10311:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10311:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10304:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10304:6:10"
																},
																"nativeSrc": "10304:35:10",
																"nodeType": "YulFunctionCall",
																"src": "10304:35:10"
															},
															"nativeSrc": "10301:122:10",
															"nodeType": "YulIf",
															"src": "10301:122:10"
														},
														{
															"nativeSrc": "10432:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10432:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10459:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10459:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10446:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "10446:12:10"
																},
																"nativeSrc": "10446:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10446:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10436:6:10",
																	"nodeType": "YulTypedName",
																	"src": "10436:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10475:113:10",
															"nodeType": "YulAssignment",
															"src": "10475:113:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10561:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10561:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10569:4:10",
																				"nodeType": "YulLiteral",
																				"src": "10569:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:10"
																		},
																		"nativeSrc": "10557:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10557:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10576:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10576:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10584:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10584:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "10484:72:10",
																	"nodeType": "YulIdentifier",
																	"src": "10484:72:10"
																},
																"nativeSrc": "10484:104:10",
																"nodeType": "YulFunctionCall",
																"src": "10484:104:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10475:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10475:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10204:390:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10269:6:10",
														"nodeType": "YulTypedName",
														"src": "10269:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10277:3:10",
														"nodeType": "YulTypedName",
														"src": "10277:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10285:5:10",
														"nodeType": "YulTypedName",
														"src": "10285:5:10",
														"type": ""
													}
												],
												"src": "10204:390:10"
											},
											{
												"body": {
													"nativeSrc": "10691:229:10",
													"nodeType": "YulBlock",
													"src": "10691:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10796:22:10",
																"nodeType": "YulBlock",
																"src": "10796:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10798:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10798:16:10"
																			},
																			"nativeSrc": "10798:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10798:18:10"
																		},
																		"nativeSrc": "10798:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10798:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10768:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10768:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10776:18:10",
																		"nodeType": "YulLiteral",
																		"src": "10776:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10765:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10765:2:10"
																},
																"nativeSrc": "10765:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10765:30:10"
															},
															"nativeSrc": "10762:56:10",
															"nodeType": "YulIf",
															"src": "10762:56:10"
														},
														{
															"nativeSrc": "10828:25:10",
															"nodeType": "YulAssignment",
															"src": "10828:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10840:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10848:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10848:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10836:3:10"
																},
																"nativeSrc": "10836:17:10",
																"nodeType": "YulFunctionCall",
																"src": "10836:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10828:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10828:4:10"
																}
															]
														},
														{
															"nativeSrc": "10890:23:10",
															"nodeType": "YulAssignment",
															"src": "10890:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10902:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10902:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10908:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10908:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10898:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10898:3:10"
																},
																"nativeSrc": "10898:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10898:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10890:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10890:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10600:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10675:6:10",
														"nodeType": "YulTypedName",
														"src": "10675:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10686:4:10",
														"nodeType": "YulTypedName",
														"src": "10686:4:10",
														"type": ""
													}
												],
												"src": "10600:320:10"
											},
											{
												"body": {
													"nativeSrc": "11052:831:10",
													"nodeType": "YulBlock",
													"src": "11052:831:10",
													"statements": [
														{
															"nativeSrc": "11062:99:10",
															"nodeType": "YulAssignment",
															"src": "11062:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11153:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11153:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "11087:65:10",
																			"nodeType": "YulIdentifier",
																			"src": "11087:65:10"
																		},
																		"nativeSrc": "11087:73:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11087:73:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11071:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "11071:15:10"
																},
																"nativeSrc": "11071:90:10",
																"nodeType": "YulFunctionCall",
																"src": "11071:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11062:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11062:5:10"
																}
															]
														},
														{
															"nativeSrc": "11170:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11170:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "11181:5:10",
																"nodeType": "YulIdentifier",
																"src": "11181:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11174:3:10",
																	"nodeType": "YulTypedName",
																	"src": "11174:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11203:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11203:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11210:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11196:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11196:6:10"
																},
																"nativeSrc": "11196:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11196:21:10"
															},
															"nativeSrc": "11196:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11196:21:10"
														},
														{
															"nativeSrc": "11226:23:10",
															"nodeType": "YulAssignment",
															"src": "11226:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11237:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11237:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11244:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11244:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11233:3:10"
																},
																"nativeSrc": "11233:16:10",
																"nodeType": "YulFunctionCall",
																"src": "11233:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "11226:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11226:3:10"
																}
															]
														},
														{
															"nativeSrc": "11259:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11259:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11277:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11277:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11289:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11289:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11297:4:10",
																				"nodeType": "YulLiteral",
																				"src": "11297:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11285:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11285:3:10"
																		},
																		"nativeSrc": "11285:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11285:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:10"
																},
																"nativeSrc": "11273:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11273:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "11263:6:10",
																	"nodeType": "YulTypedName",
																	"src": "11263:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11331:103:10",
																"nodeType": "YulBlock",
																"src": "11331:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11345:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11345:77:10"
																			},
																			"nativeSrc": "11345:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11345:79:10"
																		},
																		"nativeSrc": "11345:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11345:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11318:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11326:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11326:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11315:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11315:2:10"
																},
																"nativeSrc": "11315:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11315:15:10"
															},
															"nativeSrc": "11312:122:10",
															"nodeType": "YulIf",
															"src": "11312:122:10"
														},
														{
															"body": {
																"nativeSrc": "11519:358:10",
																"nodeType": "YulBlock",
																"src": "11519:358:10",
																"statements": [
																	{
																		"nativeSrc": "11534:36:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11534:36:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11566:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11566:3:10"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "11553:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "11553:12:10"
																			},
																			"nativeSrc": "11553:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11553:17:10"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "11538:11:10",
																				"nodeType": "YulTypedName",
																				"src": "11538:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11622:83:10",
																			"nodeType": "YulBlock",
																			"src": "11622:83:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "11624:77:10",
																							"nodeType": "YulIdentifier",
																							"src": "11624:77:10"
																						},
																						"nativeSrc": "11624:79:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11624:79:10"
																					},
																					"nativeSrc": "11624:79:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "11624:79:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "11589:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "11589:11:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11602:18:10",
																					"nodeType": "YulLiteral",
																					"src": "11602:18:10",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11586:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "11586:2:10"
																			},
																			"nativeSrc": "11586:35:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11586:35:10"
																		},
																		"nativeSrc": "11583:122:10",
																		"nodeType": "YulIf",
																		"src": "11583:122:10"
																	},
																	{
																		"nativeSrc": "11718:42:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11718:42:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "11740:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11740:6:10"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "11748:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "11748:11:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11736:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11736:3:10"
																			},
																			"nativeSrc": "11736:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11736:24:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "11722:10:10",
																				"nodeType": "YulTypedName",
																				"src": "11722:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11781:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11781:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11816:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "11816:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11828:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11828:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bytes_memory_ptr",
																						"nativeSrc": "11786:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "11786:29:10"
																					},
																					"nativeSrc": "11786:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11786:46:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11774:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:10"
																			},
																			"nativeSrc": "11774:59:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11774:59:10"
																		},
																		"nativeSrc": "11774:59:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11774:59:10"
																	},
																	{
																		"nativeSrc": "11846:21:10",
																		"nodeType": "YulAssignment",
																		"src": "11846:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11857:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11862:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11862:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11853:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11853:3:10"
																			},
																			"nativeSrc": "11853:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11853:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11846:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11846:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11472:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11472:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11477:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11477:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11469:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11469:2:10"
																},
																"nativeSrc": "11469:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11469:15:10"
															},
															"nativeSrc": "11443:434:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11485:25:10",
																"nodeType": "YulBlock",
																"src": "11485:25:10",
																"statements": [
																	{
																		"nativeSrc": "11487:21:10",
																		"nodeType": "YulAssignment",
																		"src": "11487:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11498:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11498:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11503:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11503:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11494:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11494:3:10"
																			},
																			"nativeSrc": "11494:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11494:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "11487:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11487:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11447:21:10",
																"nodeType": "YulBlock",
																"src": "11447:21:10",
																"statements": [
																	{
																		"nativeSrc": "11449:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11449:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "11460:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11460:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "11453:3:10",
																				"nodeType": "YulTypedName",
																				"src": "11453:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11443:434:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10941:942:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11022:6:10",
														"nodeType": "YulTypedName",
														"src": "11022:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11030:6:10",
														"nodeType": "YulTypedName",
														"src": "11030:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11038:3:10",
														"nodeType": "YulTypedName",
														"src": "11038:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11046:5:10",
														"nodeType": "YulTypedName",
														"src": "11046:5:10",
														"type": ""
													}
												],
												"src": "10941:942:10"
											},
											{
												"body": {
													"nativeSrc": "11990:302:10",
													"nodeType": "YulBlock",
													"src": "11990:302:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12039:83:10",
																"nodeType": "YulBlock",
																"src": "12039:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12041:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "12041:77:10"
																			},
																			"nativeSrc": "12041:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12041:79:10"
																		},
																		"nativeSrc": "12041:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12041:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12018:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12018:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12026:4:10",
																						"nodeType": "YulLiteral",
																						"src": "12026:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12014:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12014:3:10"
																				},
																				"nativeSrc": "12014:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12014:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12033:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12033:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12010:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12010:3:10"
																		},
																		"nativeSrc": "12010:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12010:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12003:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12003:6:10"
																},
																"nativeSrc": "12003:35:10",
																"nodeType": "YulFunctionCall",
																"src": "12003:35:10"
															},
															"nativeSrc": "12000:122:10",
															"nodeType": "YulIf",
															"src": "12000:122:10"
														},
														{
															"nativeSrc": "12131:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12131:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12158:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12158:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12145:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "12145:12:10"
																},
																"nativeSrc": "12145:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12145:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12135:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12174:112:10",
															"nodeType": "YulAssignment",
															"src": "12174:112:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12259:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12259:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12267:4:10",
																				"nodeType": "YulLiteral",
																				"src": "12267:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12255:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12255:3:10"
																		},
																		"nativeSrc": "12255:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12255:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12274:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12274:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12282:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12282:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "12183:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "12183:71:10"
																},
																"nativeSrc": "12183:103:10",
																"nodeType": "YulFunctionCall",
																"src": "12183:103:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12174:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12174:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11904:388:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11968:6:10",
														"nodeType": "YulTypedName",
														"src": "11968:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11976:3:10",
														"nodeType": "YulTypedName",
														"src": "11976:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11984:5:10",
														"nodeType": "YulTypedName",
														"src": "11984:5:10",
														"type": ""
													}
												],
												"src": "11904:388:10"
											},
											{
												"body": {
													"nativeSrc": "12534:1407:10",
													"nodeType": "YulBlock",
													"src": "12534:1407:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12581:83:10",
																"nodeType": "YulBlock",
																"src": "12581:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12583:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "12583:77:10"
																			},
																			"nativeSrc": "12583:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12583:79:10"
																		},
																		"nativeSrc": "12583:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12583:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12555:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12555:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12564:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12564:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12551:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:10"
																		},
																		"nativeSrc": "12551:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12551:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12576:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12576:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12547:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12547:3:10"
																},
																"nativeSrc": "12547:33:10",
																"nodeType": "YulFunctionCall",
																"src": "12547:33:10"
															},
															"nativeSrc": "12544:120:10",
															"nodeType": "YulIf",
															"src": "12544:120:10"
														},
														{
															"nativeSrc": "12674:302:10",
															"nodeType": "YulBlock",
															"src": "12674:302:10",
															"statements": [
																{
																	"nativeSrc": "12689:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12689:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12720:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12720:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12731:1:10",
																						"nodeType": "YulLiteral",
																						"src": "12731:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12716:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12716:3:10"
																				},
																				"nativeSrc": "12716:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12716:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12703:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "12703:12:10"
																		},
																		"nativeSrc": "12703:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12703:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12693:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12693:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12781:83:10",
																		"nodeType": "YulBlock",
																		"src": "12781:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12783:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "12783:77:10"
																					},
																					"nativeSrc": "12783:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12783:79:10"
																				},
																				"nativeSrc": "12783:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "12783:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12753:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12753:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12761:18:10",
																				"nodeType": "YulLiteral",
																				"src": "12761:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12750:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "12750:2:10"
																		},
																		"nativeSrc": "12750:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12750:30:10"
																	},
																	"nativeSrc": "12747:117:10",
																	"nodeType": "YulIf",
																	"src": "12747:117:10"
																},
																{
																	"nativeSrc": "12878:88:10",
																	"nodeType": "YulAssignment",
																	"src": "12878:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12938:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12938:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12949:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12949:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12934:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12934:3:10"
																				},
																				"nativeSrc": "12934:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12934:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12958:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12958:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12888:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "12888:45:10"
																		},
																		"nativeSrc": "12888:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12888:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12878:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12878:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12986:303:10",
															"nodeType": "YulBlock",
															"src": "12986:303:10",
															"statements": [
																{
																	"nativeSrc": "13001:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13001:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13032:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13032:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13043:2:10",
																						"nodeType": "YulLiteral",
																						"src": "13043:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13028:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13028:3:10"
																				},
																				"nativeSrc": "13028:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13028:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13015:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "13015:12:10"
																		},
																		"nativeSrc": "13015:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13015:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13005:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13005:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13094:83:10",
																		"nodeType": "YulBlock",
																		"src": "13094:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13096:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "13096:77:10"
																					},
																					"nativeSrc": "13096:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13096:79:10"
																				},
																				"nativeSrc": "13096:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13096:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13066:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13066:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13074:18:10",
																				"nodeType": "YulLiteral",
																				"src": "13074:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13063:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13063:2:10"
																		},
																		"nativeSrc": "13063:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13063:30:10"
																	},
																	"nativeSrc": "13060:117:10",
																	"nodeType": "YulIf",
																	"src": "13060:117:10"
																},
																{
																	"nativeSrc": "13191:88:10",
																	"nodeType": "YulAssignment",
																	"src": "13191:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13251:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13251:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13262:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13262:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13247:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13247:3:10"
																				},
																				"nativeSrc": "13247:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13247:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13271:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13271:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13201:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "13201:45:10"
																		},
																		"nativeSrc": "13201:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13201:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13191:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13191:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13299:313:10",
															"nodeType": "YulBlock",
															"src": "13299:313:10",
															"statements": [
																{
																	"nativeSrc": "13314:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13314:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13345:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13345:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13356:2:10",
																						"nodeType": "YulLiteral",
																						"src": "13356:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13341:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13341:3:10"
																				},
																				"nativeSrc": "13341:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13341:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13328:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "13328:12:10"
																		},
																		"nativeSrc": "13328:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13328:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13318:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13318:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13407:83:10",
																		"nodeType": "YulBlock",
																		"src": "13407:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13409:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "13409:77:10"
																					},
																					"nativeSrc": "13409:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13409:79:10"
																				},
																				"nativeSrc": "13409:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13409:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13379:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13379:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13387:18:10",
																				"nodeType": "YulLiteral",
																				"src": "13387:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13376:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13376:2:10"
																		},
																		"nativeSrc": "13376:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:30:10"
																	},
																	"nativeSrc": "13373:117:10",
																	"nodeType": "YulIf",
																	"src": "13373:117:10"
																},
																{
																	"nativeSrc": "13504:98:10",
																	"nodeType": "YulAssignment",
																	"src": "13504:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13574:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13574:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13585:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13585:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13570:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13570:3:10"
																				},
																				"nativeSrc": "13570:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13570:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13594:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13594:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "13514:55:10",
																			"nodeType": "YulIdentifier",
																			"src": "13514:55:10"
																		},
																		"nativeSrc": "13514:88:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13514:88:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13504:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13504:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13622:312:10",
															"nodeType": "YulBlock",
															"src": "13622:312:10",
															"statements": [
																{
																	"nativeSrc": "13637:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13637:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13668:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13668:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13679:2:10",
																						"nodeType": "YulLiteral",
																						"src": "13679:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13664:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13664:3:10"
																				},
																				"nativeSrc": "13664:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13664:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13651:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "13651:12:10"
																		},
																		"nativeSrc": "13651:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13651:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13641:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13641:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13730:83:10",
																		"nodeType": "YulBlock",
																		"src": "13730:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13732:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "13732:77:10"
																					},
																					"nativeSrc": "13732:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "13732:79:10"
																				},
																				"nativeSrc": "13732:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "13732:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13702:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13702:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13710:18:10",
																				"nodeType": "YulLiteral",
																				"src": "13710:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13699:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13699:2:10"
																		},
																		"nativeSrc": "13699:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13699:30:10"
																	},
																	"nativeSrc": "13696:117:10",
																	"nodeType": "YulIf",
																	"src": "13696:117:10"
																},
																{
																	"nativeSrc": "13827:97:10",
																	"nodeType": "YulAssignment",
																	"src": "13827:97:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13896:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13896:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13907:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13907:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13892:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13892:3:10"
																				},
																				"nativeSrc": "13892:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13892:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13916:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13916:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "13837:54:10",
																			"nodeType": "YulIdentifier",
																			"src": "13837:54:10"
																		},
																		"nativeSrc": "13837:87:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13837:87:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13827:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13827:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12298:1643:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12480:9:10",
														"nodeType": "YulTypedName",
														"src": "12480:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12491:7:10",
														"nodeType": "YulTypedName",
														"src": "12491:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12503:6:10",
														"nodeType": "YulTypedName",
														"src": "12503:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12511:6:10",
														"nodeType": "YulTypedName",
														"src": "12511:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12519:6:10",
														"nodeType": "YulTypedName",
														"src": "12519:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12527:6:10",
														"nodeType": "YulTypedName",
														"src": "12527:6:10",
														"type": ""
													}
												],
												"src": "12298:1643:10"
											},
											{
												"body": {
													"nativeSrc": "14066:858:10",
													"nodeType": "YulBlock",
													"src": "14066:858:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "14112:83:10",
																"nodeType": "YulBlock",
																"src": "14112:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14114:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "14114:77:10"
																			},
																			"nativeSrc": "14114:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14114:79:10"
																		},
																		"nativeSrc": "14114:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14114:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14087:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14087:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14096:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14096:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14083:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14083:3:10"
																		},
																		"nativeSrc": "14083:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14083:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14108:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14079:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:10"
																},
																"nativeSrc": "14079:32:10",
																"nodeType": "YulFunctionCall",
																"src": "14079:32:10"
															},
															"nativeSrc": "14076:119:10",
															"nodeType": "YulIf",
															"src": "14076:119:10"
														},
														{
															"nativeSrc": "14205:117:10",
															"nodeType": "YulBlock",
															"src": "14205:117:10",
															"statements": [
																{
																	"nativeSrc": "14220:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14220:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14234:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14234:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14224:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14224:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14249:63:10",
																	"nodeType": "YulAssignment",
																	"src": "14249:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14284:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14284:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14295:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14295:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14280:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14280:3:10"
																				},
																				"nativeSrc": "14280:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14280:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14304:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14304:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14259:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "14259:20:10"
																		},
																		"nativeSrc": "14259:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14259:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14249:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14249:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14332:288:10",
															"nodeType": "YulBlock",
															"src": "14332:288:10",
															"statements": [
																{
																	"nativeSrc": "14347:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14347:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14378:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14378:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14389:2:10",
																						"nodeType": "YulLiteral",
																						"src": "14389:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14374:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14374:3:10"
																				},
																				"nativeSrc": "14374:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14374:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14361:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "14361:12:10"
																		},
																		"nativeSrc": "14361:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14361:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14351:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14351:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14440:83:10",
																		"nodeType": "YulBlock",
																		"src": "14440:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14442:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "14442:77:10"
																					},
																					"nativeSrc": "14442:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "14442:79:10"
																				},
																				"nativeSrc": "14442:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "14442:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14412:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14412:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14420:18:10",
																				"nodeType": "YulLiteral",
																				"src": "14420:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14409:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14409:2:10"
																		},
																		"nativeSrc": "14409:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14409:30:10"
																	},
																	"nativeSrc": "14406:117:10",
																	"nodeType": "YulIf",
																	"src": "14406:117:10"
																},
																{
																	"nativeSrc": "14537:73:10",
																	"nodeType": "YulAssignment",
																	"src": "14537:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14582:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14582:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14593:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14593:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14578:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14578:3:10"
																				},
																				"nativeSrc": "14578:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14578:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14602:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14602:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "14547:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "14547:30:10"
																		},
																		"nativeSrc": "14547:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14547:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14537:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14537:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14630:287:10",
															"nodeType": "YulBlock",
															"src": "14630:287:10",
															"statements": [
																{
																	"nativeSrc": "14645:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14645:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14676:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14676:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14687:2:10",
																						"nodeType": "YulLiteral",
																						"src": "14687:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14672:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14672:3:10"
																				},
																				"nativeSrc": "14672:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14672:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14659:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "14659:12:10"
																		},
																		"nativeSrc": "14659:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14659:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14649:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14649:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14738:83:10",
																		"nodeType": "YulBlock",
																		"src": "14738:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14740:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "14740:77:10"
																					},
																					"nativeSrc": "14740:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "14740:79:10"
																				},
																				"nativeSrc": "14740:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "14740:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14710:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14710:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14718:18:10",
																				"nodeType": "YulLiteral",
																				"src": "14718:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14707:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14707:2:10"
																		},
																		"nativeSrc": "14707:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14707:30:10"
																	},
																	"nativeSrc": "14704:117:10",
																	"nodeType": "YulIf",
																	"src": "14704:117:10"
																},
																{
																	"nativeSrc": "14835:72:10",
																	"nodeType": "YulAssignment",
																	"src": "14835:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14879:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14879:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14890:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14890:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14875:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14875:3:10"
																				},
																				"nativeSrc": "14875:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14875:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14899:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14899:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "14845:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "14845:29:10"
																		},
																		"nativeSrc": "14845:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14845:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14835:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14835:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "13947:977:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14020:9:10",
														"nodeType": "YulTypedName",
														"src": "14020:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14031:7:10",
														"nodeType": "YulTypedName",
														"src": "14031:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14043:6:10",
														"nodeType": "YulTypedName",
														"src": "14043:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14051:6:10",
														"nodeType": "YulTypedName",
														"src": "14051:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14059:6:10",
														"nodeType": "YulTypedName",
														"src": "14059:6:10",
														"type": ""
													}
												],
												"src": "13947:977:10"
											},
											{
												"body": {
													"nativeSrc": "14958:152:10",
													"nodeType": "YulBlock",
													"src": "14958:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14975:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14975:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14978:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14978:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14968:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14968:6:10"
																},
																"nativeSrc": "14968:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14968:88:10"
															},
															"nativeSrc": "14968:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14968:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15072:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15072:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15075:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15075:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:10"
																},
																"nativeSrc": "15065:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15065:15:10"
															},
															"nativeSrc": "15065:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15065:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15096:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15096:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15099:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15099:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15089:6:10"
																},
																"nativeSrc": "15089:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15089:15:10"
															},
															"nativeSrc": "15089:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15089:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14930:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14930:180:10"
											},
											{
												"body": {
													"nativeSrc": "15158:146:10",
													"nodeType": "YulBlock",
													"src": "15158:146:10",
													"statements": [
														{
															"nativeSrc": "15168:23:10",
															"nodeType": "YulAssignment",
															"src": "15168:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15189:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15189:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15173:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "15173:15:10"
																},
																"nativeSrc": "15173:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15173:18:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15168:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15168:1:10"
																}
															]
														},
														{
															"nativeSrc": "15200:23:10",
															"nodeType": "YulAssignment",
															"src": "15200:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15221:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15221:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15205:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "15205:15:10"
																},
																"nativeSrc": "15205:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15205:18:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15200:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15200:1:10"
																}
															]
														},
														{
															"nativeSrc": "15232:16:10",
															"nodeType": "YulAssignment",
															"src": "15232:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15243:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15243:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15246:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15246:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15239:3:10"
																},
																"nativeSrc": "15239:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15239:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15232:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15232:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15275:22:10",
																"nodeType": "YulBlock",
																"src": "15275:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15277:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15277:16:10"
																			},
																			"nativeSrc": "15277:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15277:18:10"
																		},
																		"nativeSrc": "15277:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15277:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "15264:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15264:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15269:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15269:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15261:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15261:2:10"
																},
																"nativeSrc": "15261:13:10",
																"nodeType": "YulFunctionCall",
																"src": "15261:13:10"
															},
															"nativeSrc": "15258:39:10",
															"nodeType": "YulIf",
															"src": "15258:39:10"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "15116:188:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15145:1:10",
														"nodeType": "YulTypedName",
														"src": "15145:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15148:1:10",
														"nodeType": "YulTypedName",
														"src": "15148:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15154:3:10",
														"nodeType": "YulTypedName",
														"src": "15154:3:10",
														"type": ""
													}
												],
												"src": "15116:188:10"
											},
											{
												"body": {
													"nativeSrc": "15338:152:10",
													"nodeType": "YulBlock",
													"src": "15338:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15355:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15355:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15358:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15358:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15348:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15348:6:10"
																},
																"nativeSrc": "15348:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15348:88:10"
															},
															"nativeSrc": "15348:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15348:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15452:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15452:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15455:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15455:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15445:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15445:6:10"
																},
																"nativeSrc": "15445:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15445:15:10"
															},
															"nativeSrc": "15445:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15445:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15476:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15476:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15479:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15479:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15469:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15469:6:10"
																},
																"nativeSrc": "15469:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15469:15:10"
															},
															"nativeSrc": "15469:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15469:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15310:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15310:180:10"
											},
											{
												"body": {
													"nativeSrc": "15561:53:10",
													"nodeType": "YulBlock",
													"src": "15561:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15578:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15578:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15601:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15601:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15583:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "15583:17:10"
																		},
																		"nativeSrc": "15583:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15583:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15571:6:10"
																},
																"nativeSrc": "15571:37:10",
																"nodeType": "YulFunctionCall",
																"src": "15571:37:10"
															},
															"nativeSrc": "15571:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "15571:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15496:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15549:5:10",
														"nodeType": "YulTypedName",
														"src": "15549:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15556:3:10",
														"nodeType": "YulTypedName",
														"src": "15556:3:10",
														"type": ""
													}
												],
												"src": "15496:118:10"
											},
											{
												"body": {
													"nativeSrc": "15685:53:10",
													"nodeType": "YulBlock",
													"src": "15685:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15702:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15702:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15725:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15725:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15707:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "15707:17:10"
																		},
																		"nativeSrc": "15707:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15707:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15695:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15695:6:10"
																},
																"nativeSrc": "15695:37:10",
																"nodeType": "YulFunctionCall",
																"src": "15695:37:10"
															},
															"nativeSrc": "15695:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "15695:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "15620:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15673:5:10",
														"nodeType": "YulTypedName",
														"src": "15673:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15680:3:10",
														"nodeType": "YulTypedName",
														"src": "15680:3:10",
														"type": ""
													}
												],
												"src": "15620:118:10"
											},
											{
												"body": {
													"nativeSrc": "15870:206:10",
													"nodeType": "YulBlock",
													"src": "15870:206:10",
													"statements": [
														{
															"nativeSrc": "15880:26:10",
															"nodeType": "YulAssignment",
															"src": "15880:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15892:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15892:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15903:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15888:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15888:3:10"
																},
																"nativeSrc": "15888:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15888:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15880:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15880:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15960:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15960:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15973:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15973:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15984:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15984:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15969:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15969:3:10"
																		},
																		"nativeSrc": "15969:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15969:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15916:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15916:43:10"
																},
																"nativeSrc": "15916:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15916:71:10"
															},
															"nativeSrc": "15916:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15916:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16041:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16041:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16054:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16065:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16065:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16050:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16050:3:10"
																		},
																		"nativeSrc": "16050:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16050:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15997:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15997:43:10"
																},
																"nativeSrc": "15997:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15997:72:10"
															},
															"nativeSrc": "15997:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15997:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15744:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15834:9:10",
														"nodeType": "YulTypedName",
														"src": "15834:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15846:6:10",
														"nodeType": "YulTypedName",
														"src": "15846:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15854:6:10",
														"nodeType": "YulTypedName",
														"src": "15854:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15865:4:10",
														"nodeType": "YulTypedName",
														"src": "15865:4:10",
														"type": ""
													}
												],
												"src": "15744:332:10"
											},
											{
												"body": {
													"nativeSrc": "16141:40:10",
													"nodeType": "YulBlock",
													"src": "16141:40:10",
													"statements": [
														{
															"nativeSrc": "16152:22:10",
															"nodeType": "YulAssignment",
															"src": "16152:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16168:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16168:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16162:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "16162:5:10"
																},
																"nativeSrc": "16162:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16162:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16152:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16152:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "16082:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16124:5:10",
														"nodeType": "YulTypedName",
														"src": "16124:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16134:6:10",
														"nodeType": "YulTypedName",
														"src": "16134:6:10",
														"type": ""
													}
												],
												"src": "16082:99:10"
											},
											{
												"body": {
													"nativeSrc": "16283:73:10",
													"nodeType": "YulBlock",
													"src": "16283:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16300:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16300:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16305:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16305:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16293:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16293:6:10"
																},
																"nativeSrc": "16293:19:10",
																"nodeType": "YulFunctionCall",
																"src": "16293:19:10"
															},
															"nativeSrc": "16293:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "16293:19:10"
														},
														{
															"nativeSrc": "16321:29:10",
															"nodeType": "YulAssignment",
															"src": "16321:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16340:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16340:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16345:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16345:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16336:3:10"
																},
																"nativeSrc": "16336:14:10",
																"nodeType": "YulFunctionCall",
																"src": "16336:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16321:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "16321:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "16187:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16255:3:10",
														"nodeType": "YulTypedName",
														"src": "16255:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16260:6:10",
														"nodeType": "YulTypedName",
														"src": "16260:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16271:11:10",
														"nodeType": "YulTypedName",
														"src": "16271:11:10",
														"type": ""
													}
												],
												"src": "16187:169:10"
											},
											{
												"body": {
													"nativeSrc": "16424:184:10",
													"nodeType": "YulBlock",
													"src": "16424:184:10",
													"statements": [
														{
															"nativeSrc": "16434:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16434:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "16443:1:10",
																"nodeType": "YulLiteral",
																"src": "16443:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16438:1:10",
																	"nodeType": "YulTypedName",
																	"src": "16438:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16503:63:10",
																"nodeType": "YulBlock",
																"src": "16503:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "16528:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "16528:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "16533:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "16533:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16524:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "16524:3:10"
																					},
																					"nativeSrc": "16524:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "16524:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "16547:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "16547:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "16552:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "16552:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16543:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "16543:3:10"
																							},
																							"nativeSrc": "16543:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "16543:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "16537:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "16537:5:10"
																					},
																					"nativeSrc": "16537:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "16537:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16517:6:10"
																			},
																			"nativeSrc": "16517:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16517:39:10"
																		},
																		"nativeSrc": "16517:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16517:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16464:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16464:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16467:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16467:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16461:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16461:2:10"
																},
																"nativeSrc": "16461:13:10",
																"nodeType": "YulFunctionCall",
																"src": "16461:13:10"
															},
															"nativeSrc": "16453:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16475:19:10",
																"nodeType": "YulBlock",
																"src": "16475:19:10",
																"statements": [
																	{
																		"nativeSrc": "16477:15:10",
																		"nodeType": "YulAssignment",
																		"src": "16477:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16486:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "16486:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16489:2:10",
																					"nodeType": "YulLiteral",
																					"src": "16489:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16482:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "16482:3:10"
																			},
																			"nativeSrc": "16482:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16482:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16477:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "16477:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16457:3:10",
																"nodeType": "YulBlock",
																"src": "16457:3:10",
																"statements": []
															},
															"src": "16453:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "16586:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "16586:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16591:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16591:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16582:3:10"
																		},
																		"nativeSrc": "16582:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16582:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16600:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16600:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16575:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16575:6:10"
																},
																"nativeSrc": "16575:27:10",
																"nodeType": "YulFunctionCall",
																"src": "16575:27:10"
															},
															"nativeSrc": "16575:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "16575:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "16362:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16406:3:10",
														"nodeType": "YulTypedName",
														"src": "16406:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "16411:3:10",
														"nodeType": "YulTypedName",
														"src": "16411:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16416:6:10",
														"nodeType": "YulTypedName",
														"src": "16416:6:10",
														"type": ""
													}
												],
												"src": "16362:246:10"
											},
											{
												"body": {
													"nativeSrc": "16706:285:10",
													"nodeType": "YulBlock",
													"src": "16706:285:10",
													"statements": [
														{
															"nativeSrc": "16716:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16716:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16763:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16763:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16730:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "16730:32:10"
																},
																"nativeSrc": "16730:39:10",
																"nodeType": "YulFunctionCall",
																"src": "16730:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16720:6:10",
																	"nodeType": "YulTypedName",
																	"src": "16720:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16778:78:10",
															"nodeType": "YulAssignment",
															"src": "16778:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16849:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16785:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16785:58:10"
																},
																"nativeSrc": "16785:71:10",
																"nodeType": "YulFunctionCall",
																"src": "16785:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16778:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16778:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16904:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16904:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16911:4:10",
																				"nodeType": "YulLiteral",
																				"src": "16911:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16900:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16900:3:10"
																		},
																		"nativeSrc": "16900:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16900:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16918:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16918:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16923:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16923:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16865:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "16865:34:10"
																},
																"nativeSrc": "16865:65:10",
																"nodeType": "YulFunctionCall",
																"src": "16865:65:10"
															},
															"nativeSrc": "16865:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "16865:65:10"
														},
														{
															"nativeSrc": "16939:46:10",
															"nodeType": "YulAssignment",
															"src": "16939:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16950:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16950:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16977:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16977:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16955:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "16955:21:10"
																		},
																		"nativeSrc": "16955:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16955:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16946:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16946:3:10"
																},
																"nativeSrc": "16946:39:10",
																"nodeType": "YulFunctionCall",
																"src": "16946:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16939:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16939:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16614:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16687:5:10",
														"nodeType": "YulTypedName",
														"src": "16687:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16694:3:10",
														"nodeType": "YulTypedName",
														"src": "16694:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16702:3:10",
														"nodeType": "YulTypedName",
														"src": "16702:3:10",
														"type": ""
													}
												],
												"src": "16614:377:10"
											},
											{
												"body": {
													"nativeSrc": "17143:277:10",
													"nodeType": "YulBlock",
													"src": "17143:277:10",
													"statements": [
														{
															"nativeSrc": "17153:26:10",
															"nodeType": "YulAssignment",
															"src": "17153:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17165:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17165:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17176:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17176:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17161:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17161:3:10"
																},
																"nativeSrc": "17161:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17161:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17153:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17153:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17233:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17233:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17246:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17246:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17257:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17257:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17242:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17242:3:10"
																		},
																		"nativeSrc": "17242:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17242:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17189:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17189:43:10"
																},
																"nativeSrc": "17189:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17189:71:10"
															},
															"nativeSrc": "17189:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17189:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17281:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17281:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17292:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17277:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17277:3:10"
																		},
																		"nativeSrc": "17277:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17277:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17301:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17301:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17307:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17307:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17297:3:10"
																		},
																		"nativeSrc": "17297:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17297:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17270:6:10"
																},
																"nativeSrc": "17270:48:10",
																"nodeType": "YulFunctionCall",
																"src": "17270:48:10"
															},
															"nativeSrc": "17270:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "17270:48:10"
														},
														{
															"nativeSrc": "17327:86:10",
															"nodeType": "YulAssignment",
															"src": "17327:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17399:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17399:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17408:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17408:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17335:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "17335:63:10"
																},
																"nativeSrc": "17335:78:10",
																"nodeType": "YulFunctionCall",
																"src": "17335:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17327:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17327:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16997:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17107:9:10",
														"nodeType": "YulTypedName",
														"src": "17107:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17119:6:10",
														"nodeType": "YulTypedName",
														"src": "17119:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17127:6:10",
														"nodeType": "YulTypedName",
														"src": "17127:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17138:4:10",
														"nodeType": "YulTypedName",
														"src": "17138:4:10",
														"type": ""
													}
												],
												"src": "16997:423:10"
											},
											{
												"body": {
													"nativeSrc": "17604:367:10",
													"nodeType": "YulBlock",
													"src": "17604:367:10",
													"statements": [
														{
															"nativeSrc": "17614:27:10",
															"nodeType": "YulAssignment",
															"src": "17614:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17626:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17626:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17637:3:10",
																		"nodeType": "YulLiteral",
																		"src": "17637:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17622:3:10"
																},
																"nativeSrc": "17622:19:10",
																"nodeType": "YulFunctionCall",
																"src": "17622:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17614:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17614:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17695:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17695:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17708:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17719:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17719:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17704:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17704:3:10"
																		},
																		"nativeSrc": "17704:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17704:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17651:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17651:43:10"
																},
																"nativeSrc": "17651:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17651:71:10"
															},
															"nativeSrc": "17651:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17651:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17772:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17772:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17785:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17785:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17796:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17796:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17781:3:10"
																		},
																		"nativeSrc": "17781:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17781:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "17732:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "17732:39:10"
																},
																"nativeSrc": "17732:68:10",
																"nodeType": "YulFunctionCall",
																"src": "17732:68:10"
															},
															"nativeSrc": "17732:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "17732:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17854:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17854:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17867:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17867:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17878:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17878:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17863:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17863:3:10"
																		},
																		"nativeSrc": "17863:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17863:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17810:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17810:43:10"
																},
																"nativeSrc": "17810:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17810:72:10"
															},
															"nativeSrc": "17810:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17810:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17936:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17936:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17949:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17960:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17960:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17945:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17945:3:10"
																		},
																		"nativeSrc": "17945:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17945:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17892:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17892:43:10"
																},
																"nativeSrc": "17892:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17892:72:10"
															},
															"nativeSrc": "17892:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17892:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "17426:545:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17552:9:10",
														"nodeType": "YulTypedName",
														"src": "17552:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17564:6:10",
														"nodeType": "YulTypedName",
														"src": "17564:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17572:6:10",
														"nodeType": "YulTypedName",
														"src": "17572:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17580:6:10",
														"nodeType": "YulTypedName",
														"src": "17580:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17588:6:10",
														"nodeType": "YulTypedName",
														"src": "17588:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17599:4:10",
														"nodeType": "YulTypedName",
														"src": "17599:4:10",
														"type": ""
													}
												],
												"src": "17426:545:10"
											},
											{
												"body": {
													"nativeSrc": "18075:124:10",
													"nodeType": "YulBlock",
													"src": "18075:124:10",
													"statements": [
														{
															"nativeSrc": "18085:26:10",
															"nodeType": "YulAssignment",
															"src": "18085:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18097:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18097:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18093:3:10"
																},
																"nativeSrc": "18093:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18093:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18085:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18165:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18165:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18189:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18189:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18174:3:10"
																		},
																		"nativeSrc": "18174:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18174:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18121:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18121:43:10"
																},
																"nativeSrc": "18121:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18121:71:10"
															},
															"nativeSrc": "18121:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18121:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "17977:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18047:9:10",
														"nodeType": "YulTypedName",
														"src": "18047:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18059:6:10",
														"nodeType": "YulTypedName",
														"src": "18059:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18070:4:10",
														"nodeType": "YulTypedName",
														"src": "18070:4:10",
														"type": ""
													}
												],
												"src": "17977:222:10"
											},
											{
												"body": {
													"nativeSrc": "18319:34:10",
													"nodeType": "YulBlock",
													"src": "18319:34:10",
													"statements": [
														{
															"nativeSrc": "18329:18:10",
															"nodeType": "YulAssignment",
															"src": "18329:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "18344:3:10",
																"nodeType": "YulIdentifier",
																"src": "18344:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18329:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "18329:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18205:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18291:3:10",
														"nodeType": "YulTypedName",
														"src": "18291:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18296:6:10",
														"nodeType": "YulTypedName",
														"src": "18296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18307:11:10",
														"nodeType": "YulTypedName",
														"src": "18307:11:10",
														"type": ""
													}
												],
												"src": "18205:148:10"
											},
											{
												"body": {
													"nativeSrc": "18465:108:10",
													"nodeType": "YulBlock",
													"src": "18465:108:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18487:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18487:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18495:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18495:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18483:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18483:3:10"
																		},
																		"nativeSrc": "18483:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18483:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18499:66:10",
																		"nodeType": "YulLiteral",
																		"src": "18499:66:10",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18476:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18476:6:10"
																},
																"nativeSrc": "18476:90:10",
																"nodeType": "YulFunctionCall",
																"src": "18476:90:10"
															},
															"nativeSrc": "18476:90:10",
															"nodeType": "YulExpressionStatement",
															"src": "18476:90:10"
														}
													]
												},
												"name": "store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
												"nativeSrc": "18359:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18457:6:10",
														"nodeType": "YulTypedName",
														"src": "18457:6:10",
														"type": ""
													}
												],
												"src": "18359:214:10"
											},
											{
												"body": {
													"nativeSrc": "18743:238:10",
													"nodeType": "YulBlock",
													"src": "18743:238:10",
													"statements": [
														{
															"nativeSrc": "18753:92:10",
															"nodeType": "YulAssignment",
															"src": "18753:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18837:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18837:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18842:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18842:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18760:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "18760:76:10"
																},
																"nativeSrc": "18760:85:10",
																"nodeType": "YulFunctionCall",
																"src": "18760:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18753:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18753:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18943:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18943:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																	"nativeSrc": "18854:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18854:88:10"
																},
																"nativeSrc": "18854:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18854:93:10"
															},
															"nativeSrc": "18854:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18854:93:10"
														},
														{
															"nativeSrc": "18956:19:10",
															"nodeType": "YulAssignment",
															"src": "18956:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18967:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18967:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18972:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18972:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18963:3:10"
																},
																"nativeSrc": "18963:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18963:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18956:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18956:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18579:402:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18731:3:10",
														"nodeType": "YulTypedName",
														"src": "18731:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18739:3:10",
														"nodeType": "YulTypedName",
														"src": "18739:3:10",
														"type": ""
													}
												],
												"src": "18579:402:10"
											},
											{
												"body": {
													"nativeSrc": "19097:280:10",
													"nodeType": "YulBlock",
													"src": "19097:280:10",
													"statements": [
														{
															"nativeSrc": "19107:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19107:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19154:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19154:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19121:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "19121:32:10"
																},
																"nativeSrc": "19121:39:10",
																"nodeType": "YulFunctionCall",
																"src": "19121:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19111:6:10",
																	"nodeType": "YulTypedName",
																	"src": "19111:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19169:96:10",
															"nodeType": "YulAssignment",
															"src": "19169:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19253:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19253:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19258:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19258:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19176:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "19176:76:10"
																},
																"nativeSrc": "19176:89:10",
																"nodeType": "YulFunctionCall",
																"src": "19176:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19169:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19169:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19313:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "19313:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19320:4:10",
																				"nodeType": "YulLiteral",
																				"src": "19320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19309:3:10"
																		},
																		"nativeSrc": "19309:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19309:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19327:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19327:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19332:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19332:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19274:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "19274:34:10"
																},
																"nativeSrc": "19274:65:10",
																"nodeType": "YulFunctionCall",
																"src": "19274:65:10"
															},
															"nativeSrc": "19274:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "19274:65:10"
														},
														{
															"nativeSrc": "19348:23:10",
															"nodeType": "YulAssignment",
															"src": "19348:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19359:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19359:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19364:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19364:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19355:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19355:3:10"
																},
																"nativeSrc": "19355:16:10",
																"nodeType": "YulFunctionCall",
																"src": "19355:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19348:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19348:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18987:390:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19078:5:10",
														"nodeType": "YulTypedName",
														"src": "19078:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19085:3:10",
														"nodeType": "YulTypedName",
														"src": "19085:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19093:3:10",
														"nodeType": "YulTypedName",
														"src": "19093:3:10",
														"type": ""
													}
												],
												"src": "18987:390:10"
											},
											{
												"body": {
													"nativeSrc": "19668:416:10",
													"nodeType": "YulBlock",
													"src": "19668:416:10",
													"statements": [
														{
															"nativeSrc": "19679:155:10",
															"nodeType": "YulAssignment",
															"src": "19679:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19830:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19830:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19686:142:10",
																	"nodeType": "YulIdentifier",
																	"src": "19686:142:10"
																},
																"nativeSrc": "19686:148:10",
																"nodeType": "YulFunctionCall",
																"src": "19686:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19679:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19679:3:10"
																}
															]
														},
														{
															"nativeSrc": "19844:102:10",
															"nodeType": "YulAssignment",
															"src": "19844:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19933:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19933:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19942:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19942:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19851:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "19851:81:10"
																},
																"nativeSrc": "19851:95:10",
																"nodeType": "YulFunctionCall",
																"src": "19851:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19844:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19844:3:10"
																}
															]
														},
														{
															"nativeSrc": "19956:102:10",
															"nodeType": "YulAssignment",
															"src": "19956:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20045:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20045:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20054:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20054:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19963:81:10",
																	"nodeType": "YulIdentifier",
																	"src": "19963:81:10"
																},
																"nativeSrc": "19963:95:10",
																"nodeType": "YulFunctionCall",
																"src": "19963:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19956:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19956:3:10"
																}
															]
														},
														{
															"nativeSrc": "20068:10:10",
															"nodeType": "YulAssignment",
															"src": "20068:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "20075:3:10",
																"nodeType": "YulIdentifier",
																"src": "20075:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20068:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20068:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19383:701:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19639:3:10",
														"nodeType": "YulTypedName",
														"src": "19639:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19645:6:10",
														"nodeType": "YulTypedName",
														"src": "19645:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19653:6:10",
														"nodeType": "YulTypedName",
														"src": "19653:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19664:3:10",
														"nodeType": "YulTypedName",
														"src": "19664:3:10",
														"type": ""
													}
												],
												"src": "19383:701:10"
											},
											{
												"body": {
													"nativeSrc": "20118:152:10",
													"nodeType": "YulBlock",
													"src": "20118:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20135:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20135:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20138:77:10",
																		"nodeType": "YulLiteral",
																		"src": "20138:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20128:6:10"
																},
																"nativeSrc": "20128:88:10",
																"nodeType": "YulFunctionCall",
																"src": "20128:88:10"
															},
															"nativeSrc": "20128:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "20128:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20232:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20232:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20235:4:10",
																		"nodeType": "YulLiteral",
																		"src": "20235:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20225:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20225:6:10"
																},
																"nativeSrc": "20225:15:10",
																"nodeType": "YulFunctionCall",
																"src": "20225:15:10"
															},
															"nativeSrc": "20225:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "20225:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20256:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20256:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20259:4:10",
																		"nodeType": "YulLiteral",
																		"src": "20259:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20249:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20249:6:10"
																},
																"nativeSrc": "20249:15:10",
																"nodeType": "YulFunctionCall",
																"src": "20249:15:10"
															},
															"nativeSrc": "20249:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "20249:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20090:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "20090:180:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 26)\n        store_literal_in_memory_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4(pos)\n        end := add(pos, 26)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FF4BB4B EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x883A6C75 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x95E0E0C9 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH1 0x1B DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x1B DUP2 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x105 JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH2 0x178 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x135 JUMPI PUSH2 0x134 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x150 JUMPI PUSH2 0x14F PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16B JUMPI PUSH2 0x16A PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B4 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C6 JUMPI PUSH2 0x1C5 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E1 JUMPI PUSH2 0x1E0 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP3 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x710C6BEC3CF443B5AFBDA9FF86716F3A0D00DB3DDAEE6CC493C93BE240533E12 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0xECF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x116 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE DUP4 PUSH2 0x451 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 PUSH2 0x2CC DUP6 PUSH2 0xAD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH32 0x29BD5E82392230298810019D37E60FC402505ADB5AFA0F05072474634FCCA380 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x305 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466 PUSH1 0x1 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x350 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x370 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x408 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 MLOAD SWAP1 POP PUSH2 0x460 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x472 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x49E DUP5 PUSH2 0x55A JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x54F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x4FB JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5B6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5F3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5E9 JUMPI PUSH2 0x5E8 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x622 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x64B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x641 JUMPI PUSH2 0x640 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x670 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x693 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x10F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6A2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x6C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73B PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH2 0x747 DUP3 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x765 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH2 0x76F DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79C PUSH2 0x797 DUP5 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH2 0x7C3 DUP5 DUP3 DUP6 PUSH2 0x77C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7DF JUMPI PUSH2 0x7DE PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x78A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH2 0x829 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0x836 DUP5 DUP3 DUP6 ADD PUSH2 0x7CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x83F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x885 PUSH0 DUP4 ADD DUP7 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x892 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x89F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8FF DUP3 PUSH2 0x8D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x942 PUSH2 0x93D DUP5 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI DUP1 PUSH2 0x97A DUP9 DUP3 PUSH2 0x91C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x967 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x930 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA02 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1D DUP2 PUSH2 0x9F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA35 PUSH2 0xA30 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA81 JUMPI DUP1 PUSH2 0xA6D DUP9 DUP3 PUSH2 0xA0F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA5A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAAF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH2 0xB06 DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB25 PUSH2 0xB20 DUP5 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB40 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH2 0xB4C DUP5 DUP3 DUP6 PUSH2 0x77C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB78 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB93 PUSH2 0xB8E DUP5 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFD JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDA PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xBE8 DUP10 DUP3 PUSH2 0xB54 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBB8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC4E JUMPI PUSH2 0xC4D PUSH2 0x6D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC71 PUSH2 0xC6C DUP5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC94 JUMPI PUSH2 0xC93 PUSH2 0x8D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xCC6 DUP10 DUP3 PUSH2 0x7CB JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC96 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x6BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD09 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD29 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xD53 DUP8 DUP3 DUP9 ADD PUSH2 0x998 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xD80 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xDAD DUP8 DUP3 DUP9 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xDDA DUP8 DUP3 DUP9 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0A DUP7 DUP3 DUP8 ADD PUSH2 0x91C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xE37 DUP7 DUP3 DUP8 ADD PUSH2 0xB54 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST PUSH2 0xE64 DUP7 DUP3 DUP8 ADD PUSH2 0x7CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEA5 DUP3 PUSH2 0x857 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB0 DUP4 PUSH2 0x857 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0xEC9 JUMPI PUSH2 0xEC8 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF2D PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0xF3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF5D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF8D DUP3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF97 DUP2 DUP6 PUSH2 0xF4B JUMP JUMPDEST SWAP4 POP PUSH2 0xFA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST PUSH2 0xFB0 DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFE0 DUP2 DUP5 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xFFC PUSH0 DUP4 ADD DUP8 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x1009 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1016 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x1023 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103F PUSH0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1083 PUSH1 0x1A DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH2 0x108E DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 DUP3 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x10AD DUP2 DUP6 PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH2 0x10BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10D3 DUP3 PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DF DUP3 DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EB DUP3 DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xCF TLOAD SWAP3 0xC2 LOG4 CALLVALUE MUL DUP16 SWAP11 0xC5 PC SLT 0xED POP 0xD5 0xFB SWAP10 SWAP5 0xE6 0xB9 0xDE SWAP2 REVERT BLOCKHASH 0xBD 0x1F MSTORE8 PUSH24 0xF7111664736F6C6343000818003300000000000000000000 ",
							"sourceMap": "143:2623:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:759;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;281:473;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;762:599;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1867:759;1942:9;1953;1964:7;2046:2;2031:4;:11;:17;2023:26;;;;;;2251:2;2245:4;2241:13;2235:20;2230:25;;2353:2;2347:4;2343:13;2337:20;2332:25;;2454:2;2448:4;2444:13;2438:20;2435:1;2430:29;2425:34;;2541:2;2537:1;:6;;;2533:46;;;2565:2;2560:7;;;;;:::i;:::-;;;2533:46;2604:2;2599:1;:7;;;:18;;;;2615:2;2610:1;:7;;;2599:18;2591:27;;;;;;1867:759;;;;;:::o;281:473::-;460:9;455:292;479:8;:15;475:1;:19;455:292;;;577:54;593:8;602:1;593:11;;;;;;;;:::i;:::-;;;;;;;;606:7;614:1;606:10;;;;;;;;:::i;:::-;;;;;;;;618:9;628:1;618:12;;;;;;;;:::i;:::-;;;;;;;;577:15;:54::i;:::-;646:9;;;;;;;;;;:14;;;661:8;670:1;661:11;;;;;;;;:::i;:::-;;;;;;;;674:5;680:1;674:8;;;;;;;;:::i;:::-;;;;;;;;646:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:32;711:8;720:1;711:11;;;;;;;;:::i;:::-;;;;;;;;724:7;732:1;724:10;;;;;;;;:::i;:::-;;;;;;;;703:32;;;;;;;:::i;:::-;;;;;;;;496:3;;;;;;;455:292;;;;281:473;;;;:::o;762:599::-;897:15;915:23;933:4;915:17;:23::i;:::-;897:41;;995:9;1006;1017:7;1028:20;1038:9;1028;:20::i;:::-;994:54;;;;;;1201:16;1209:1;1212;1215;1201:16;;;;;;;;:::i;:::-;;;;;;;;1233:36;1241:27;1251:7;1260:1;1263;1266;1241:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:36;;;;;;:::i;:::-;;;;;;;;1285:13;1293:4;1285:13;;;;;;:::i;:::-;;;;;;;;1325:27;1335:7;1344:1;1347;1350;1325:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:35;;:4;:35;;;1309:44;;;;;;886:475;;;;762:599;;;:::o;1369:490::-;1455:7;1575:14;1598:4;1592:18;1575:35;;1763:27;1780:9;1763:16;:27::i;:::-;1813:4;1669:167;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1641:210;;;;;;1621:230;;;1369:490;;;:::o;637:698:5:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;12214:916:6:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:307::-;1357:4;1447:18;1439:6;1436:30;1433:56;;;1469:18;;:::i;:::-;1433:56;1507:29;1529:6;1507:29;:::i;:::-;1499:37;;1591:4;1585;1581:15;1573:23;;1296:307;;;:::o;1609:146::-;1706:6;1701:3;1696;1683:30;1747:1;1738:6;1733:3;1729:16;1722:27;1609:146;;;:::o;1761:423::-;1838:5;1863:65;1879:48;1920:6;1879:48;:::i;:::-;1863:65;:::i;:::-;1854:74;;1951:6;1944:5;1937:21;1989:4;1982:5;1978:16;2027:3;2018:6;2013:3;2009:16;2006:25;2003:112;;;2034:79;;:::i;:::-;2003:112;2124:54;2171:6;2166:3;2161;2124:54;:::i;:::-;1844:340;1761:423;;;;;:::o;2203:338::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:78;2531:3;2523:6;2516:4;2508:6;2504:17;2457:78;:::i;:::-;2448:87;;2264:277;2203:338;;;;:::o;2547:507::-;2615:6;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2818:1;2807:9;2803:17;2790:31;2848:18;2840:6;2837:30;2834:117;;;2870:79;;:::i;:::-;2834:117;2975:62;3029:7;3020:6;3009:9;3005:22;2975:62;:::i;:::-;2965:72;;2761:286;2547:507;;;;:::o;3060:77::-;3097:7;3126:5;3115:16;;3060:77;;;:::o;3143:118::-;3230:24;3248:5;3230:24;:::i;:::-;3225:3;3218:37;3143:118;;:::o;3267:86::-;3302:7;3342:4;3335:5;3331:16;3320:27;;3267:86;;;:::o;3359:112::-;3442:22;3458:5;3442:22;:::i;:::-;3437:3;3430:35;3359:112;;:::o;3477:434::-;3622:4;3660:2;3649:9;3645:18;3637:26;;3673:71;3741:1;3730:9;3726:17;3717:6;3673:71;:::i;:::-;3754:72;3822:2;3811:9;3807:18;3798:6;3754:72;:::i;:::-;3836:68;3900:2;3889:9;3885:18;3876:6;3836:68;:::i;:::-;3477:434;;;;;;:::o;3917:311::-;3994:4;4084:18;4076:6;4073:30;4070:56;;;4106:18;;:::i;:::-;4070:56;4156:4;4148:6;4144:17;4136:25;;4216:4;4210;4206:15;4198:23;;3917:311;;;:::o;4234:117::-;4343:1;4340;4333:12;4357:126;4394:7;4434:42;4427:5;4423:54;4412:65;;4357:126;;;:::o;4489:96::-;4526:7;4555:24;4573:5;4555:24;:::i;:::-;4544:35;;4489:96;;;:::o;4591:122::-;4664:24;4682:5;4664:24;:::i;:::-;4657:5;4654:35;4644:63;;4703:1;4700;4693:12;4644:63;4591:122;:::o;4719:139::-;4765:5;4803:6;4790:20;4781:29;;4819:33;4846:5;4819:33;:::i;:::-;4719:139;;;;:::o;4881:710::-;4977:5;5002:81;5018:64;5075:6;5018:64;:::i;:::-;5002:81;:::i;:::-;4993:90;;5103:5;5132:6;5125:5;5118:21;5166:4;5159:5;5155:16;5148:23;;5219:4;5211:6;5207:17;5199:6;5195:30;5248:3;5240:6;5237:15;5234:122;;;5267:79;;:::i;:::-;5234:122;5382:6;5365:220;5399:6;5394:3;5391:15;5365:220;;;5474:3;5503:37;5536:3;5524:10;5503:37;:::i;:::-;5498:3;5491:50;5570:4;5565:3;5561:14;5554:21;;5441:144;5425:4;5420:3;5416:14;5409:21;;5365:220;;;5369:21;4983:608;;4881:710;;;;;:::o;5614:370::-;5685:5;5734:3;5727:4;5719:6;5715:17;5711:27;5701:122;;5742:79;;:::i;:::-;5701:122;5859:6;5846:20;5884:94;5974:3;5966:6;5959:4;5951:6;5947:17;5884:94;:::i;:::-;5875:103;;5691:293;5614:370;;;;:::o;5990:311::-;6067:4;6157:18;6149:6;6146:30;6143:56;;;6179:18;;:::i;:::-;6143:56;6229:4;6221:6;6217:17;6209:25;;6289:4;6283;6279:15;6271:23;;5990:311;;;:::o;6307:77::-;6344:7;6373:5;6362:16;;6307:77;;;:::o;6390:122::-;6463:24;6481:5;6463:24;:::i;:::-;6456:5;6453:35;6443:63;;6502:1;6499;6492:12;6443:63;6390:122;:::o;6518:139::-;6564:5;6602:6;6589:20;6580:29;;6618:33;6645:5;6618:33;:::i;:::-;6518:139;;;;:::o;6680:710::-;6776:5;6801:81;6817:64;6874:6;6817:64;:::i;:::-;6801:81;:::i;:::-;6792:90;;6902:5;6931:6;6924:5;6917:21;6965:4;6958:5;6954:16;6947:23;;7018:4;7010:6;7006:17;6998:6;6994:30;7047:3;7039:6;7036:15;7033:122;;;7066:79;;:::i;:::-;7033:122;7181:6;7164:220;7198:6;7193:3;7190:15;7164:220;;;7273:3;7302:37;7335:3;7323:10;7302:37;:::i;:::-;7297:3;7290:50;7369:4;7364:3;7360:14;7353:21;;7240:144;7224:4;7219:3;7215:14;7208:21;;7164:220;;;7168:21;6782:608;;6680:710;;;;;:::o;7413:370::-;7484:5;7533:3;7526:4;7518:6;7514:17;7510:27;7500:122;;7541:79;;:::i;:::-;7500:122;7658:6;7645:20;7683:94;7773:3;7765:6;7758:4;7750:6;7746:17;7683:94;:::i;:::-;7674:103;;7490:293;7413:370;;;;:::o;7789:321::-;7876:4;7966:18;7958:6;7955:30;7952:56;;;7988:18;;:::i;:::-;7952:56;8038:4;8030:6;8026:17;8018:25;;8098:4;8092;8088:15;8080:23;;7789:321;;;:::o;8116:308::-;8178:4;8268:18;8260:6;8257:30;8254:56;;;8290:18;;:::i;:::-;8254:56;8328:29;8350:6;8328:29;:::i;:::-;8320:37;;8412:4;8406;8402:15;8394:23;;8116:308;;;:::o;8430:425::-;8508:5;8533:66;8549:49;8591:6;8549:49;:::i;:::-;8533:66;:::i;:::-;8524:75;;8622:6;8615:5;8608:21;8660:4;8653:5;8649:16;8698:3;8689:6;8684:3;8680:16;8677:25;8674:112;;;8705:79;;:::i;:::-;8674:112;8795:54;8842:6;8837:3;8832;8795:54;:::i;:::-;8514:341;8430:425;;;;;:::o;8875:340::-;8931:5;8980:3;8973:4;8965:6;8961:17;8957:27;8947:122;;8988:79;;:::i;:::-;8947:122;9105:6;9092:20;9130:79;9205:3;9197:6;9190:4;9182:6;9178:17;9130:79;:::i;:::-;9121:88;;8937:278;8875:340;;;;:::o;9237:945::-;9343:5;9368:91;9384:74;9451:6;9384:74;:::i;:::-;9368:91;:::i;:::-;9359:100;;9479:5;9508:6;9501:5;9494:21;9542:4;9535:5;9531:16;9524:23;;9595:4;9587:6;9583:17;9575:6;9571:30;9624:3;9616:6;9613:15;9610:122;;;9643:79;;:::i;:::-;9610:122;9758:6;9741:435;9775:6;9770:3;9767:15;9741:435;;;9864:3;9851:17;9900:18;9887:11;9884:35;9881:122;;;9922:79;;:::i;:::-;9881:122;10046:11;10038:6;10034:24;10084:47;10127:3;10115:10;10084:47;:::i;:::-;10079:3;10072:60;10161:4;10156:3;10152:14;10145:21;;9817:359;;9801:4;9796:3;9792:14;9785:21;;9741:435;;;9745:21;9349:833;;9237:945;;;;;:::o;10204:390::-;10285:5;10334:3;10327:4;10319:6;10315:17;10311:27;10301:122;;10342:79;;:::i;:::-;10301:122;10459:6;10446:20;10484:104;10584:3;10576:6;10569:4;10561:6;10557:17;10484:104;:::i;:::-;10475:113;;10291:303;10204:390;;;;:::o;10600:320::-;10686:4;10776:18;10768:6;10765:30;10762:56;;;10798:18;;:::i;:::-;10762:56;10848:4;10840:6;10836:17;10828:25;;10908:4;10902;10898:15;10890:23;;10600:320;;;:::o;10941:942::-;11046:5;11071:90;11087:73;11153:6;11087:73;:::i;:::-;11071:90;:::i;:::-;11062:99;;11181:5;11210:6;11203:5;11196:21;11244:4;11237:5;11233:16;11226:23;;11297:4;11289:6;11285:17;11277:6;11273:30;11326:3;11318:6;11315:15;11312:122;;;11345:79;;:::i;:::-;11312:122;11460:6;11443:434;11477:6;11472:3;11469:15;11443:434;;;11566:3;11553:17;11602:18;11589:11;11586:35;11583:122;;;11624:79;;:::i;:::-;11583:122;11748:11;11740:6;11736:24;11786:46;11828:3;11816:10;11786:46;:::i;:::-;11781:3;11774:59;11862:4;11857:3;11853:14;11846:21;;11519:358;;11503:4;11498:3;11494:14;11487:21;;11443:434;;;11447:21;11052:831;;10941:942;;;;;:::o;11904:388::-;11984:5;12033:3;12026:4;12018:6;12014:17;12010:27;12000:122;;12041:79;;:::i;:::-;12000:122;12158:6;12145:20;12183:103;12282:3;12274:6;12267:4;12259:6;12255:17;12183:103;:::i;:::-;12174:112;;11990:302;11904:388;;;;:::o;12298:1643::-;12503:6;12511;12519;12527;12576:3;12564:9;12555:7;12551:23;12547:33;12544:120;;;12583:79;;:::i;:::-;12544:120;12731:1;12720:9;12716:17;12703:31;12761:18;12753:6;12750:30;12747:117;;;12783:79;;:::i;:::-;12747:117;12888:78;12958:7;12949:6;12938:9;12934:22;12888:78;:::i;:::-;12878:88;;12674:302;13043:2;13032:9;13028:18;13015:32;13074:18;13066:6;13063:30;13060:117;;;13096:79;;:::i;:::-;13060:117;13201:78;13271:7;13262:6;13251:9;13247:22;13201:78;:::i;:::-;13191:88;;12986:303;13356:2;13345:9;13341:18;13328:32;13387:18;13379:6;13376:30;13373:117;;;13409:79;;:::i;:::-;13373:117;13514:88;13594:7;13585:6;13574:9;13570:22;13514:88;:::i;:::-;13504:98;;13299:313;13679:2;13668:9;13664:18;13651:32;13710:18;13702:6;13699:30;13696:117;;;13732:79;;:::i;:::-;13696:117;13837:87;13916:7;13907:6;13896:9;13892:22;13837:87;:::i;:::-;13827:97;;13622:312;12298:1643;;;;;;;:::o;13947:977::-;14043:6;14051;14059;14108:2;14096:9;14087:7;14083:23;14079:32;14076:119;;;14114:79;;:::i;:::-;14076:119;14234:1;14259:53;14304:7;14295:6;14284:9;14280:22;14259:53;:::i;:::-;14249:63;;14205:117;14389:2;14378:9;14374:18;14361:32;14420:18;14412:6;14409:30;14406:117;;;14442:79;;:::i;:::-;14406:117;14547:63;14602:7;14593:6;14582:9;14578:22;14547:63;:::i;:::-;14537:73;;14332:288;14687:2;14676:9;14672:18;14659:32;14718:18;14710:6;14707:30;14704:117;;;14740:79;;:::i;:::-;14704:117;14845:62;14899:7;14890:6;14879:9;14875:22;14845:62;:::i;:::-;14835:72;;14630:287;13947:977;;;;;:::o;14930:180::-;14978:77;14975:1;14968:88;15075:4;15072:1;15065:15;15099:4;15096:1;15089:15;15116:188;15154:3;15173:18;15189:1;15173:18;:::i;:::-;15168:23;;15205:18;15221:1;15205:18;:::i;:::-;15200:23;;15246:1;15243;15239:9;15232:16;;15269:4;15264:3;15261:13;15258:39;;;15277:18;;:::i;:::-;15258:39;15116:188;;;;:::o;15310:180::-;15358:77;15355:1;15348:88;15455:4;15452:1;15445:15;15479:4;15476:1;15469:15;15496:118;15583:24;15601:5;15583:24;:::i;:::-;15578:3;15571:37;15496:118;;:::o;15620:::-;15707:24;15725:5;15707:24;:::i;:::-;15702:3;15695:37;15620:118;;:::o;15744:332::-;15865:4;15903:2;15892:9;15888:18;15880:26;;15916:71;15984:1;15973:9;15969:17;15960:6;15916:71;:::i;:::-;15997:72;16065:2;16054:9;16050:18;16041:6;15997:72;:::i;:::-;15744:332;;;;;:::o;16082:99::-;16134:6;16168:5;16162:12;16152:22;;16082:99;;;:::o;16187:169::-;16271:11;16305:6;16300:3;16293:19;16345:4;16340:3;16336:14;16321:29;;16187:169;;;;:::o;16362:246::-;16443:1;16453:113;16467:6;16464:1;16461:13;16453:113;;;16552:1;16547:3;16543:11;16537:18;16533:1;16528:3;16524:11;16517:39;16489:2;16486:1;16482:10;16477:15;;16453:113;;;16600:1;16591:6;16586:3;16582:16;16575:27;16424:184;16362:246;;;:::o;16614:377::-;16702:3;16730:39;16763:5;16730:39;:::i;:::-;16785:71;16849:6;16844:3;16785:71;:::i;:::-;16778:78;;16865:65;16923:6;16918:3;16911:4;16904:5;16900:16;16865:65;:::i;:::-;16955:29;16977:6;16955:29;:::i;:::-;16950:3;16946:39;16939:46;;16706:285;16614:377;;;;:::o;16997:423::-;17138:4;17176:2;17165:9;17161:18;17153:26;;17189:71;17257:1;17246:9;17242:17;17233:6;17189:71;:::i;:::-;17307:9;17301:4;17297:20;17292:2;17281:9;17277:18;17270:48;17335:78;17408:4;17399:6;17335:78;:::i;:::-;17327:86;;16997:423;;;;;:::o;17426:545::-;17599:4;17637:3;17626:9;17622:19;17614:27;;17651:71;17719:1;17708:9;17704:17;17695:6;17651:71;:::i;:::-;17732:68;17796:2;17785:9;17781:18;17772:6;17732:68;:::i;:::-;17810:72;17878:2;17867:9;17863:18;17854:6;17810:72;:::i;:::-;17892;17960:2;17949:9;17945:18;17936:6;17892:72;:::i;:::-;17426:545;;;;;;;:::o;17977:222::-;18070:4;18108:2;18097:9;18093:18;18085:26;;18121:71;18189:1;18178:9;18174:17;18165:6;18121:71;:::i;:::-;17977:222;;;;:::o;18205:148::-;18307:11;18344:3;18329:18;;18205:148;;;;:::o;18359:214::-;18499:66;18495:1;18487:6;18483:14;18476:90;18359:214;:::o;18579:402::-;18739:3;18760:85;18842:2;18837:3;18760:85;:::i;:::-;18753:92;;18854:93;18943:3;18854:93;:::i;:::-;18972:2;18967:3;18963:12;18956:19;;18579:402;;;:::o;18987:390::-;19093:3;19121:39;19154:5;19121:39;:::i;:::-;19176:89;19258:6;19253:3;19176:89;:::i;:::-;19169:96;;19274:65;19332:6;19327:3;19320:4;19313:5;19309:16;19274:65;:::i;:::-;19364:6;19359:3;19355:16;19348:23;;19097:280;18987:390;;;;:::o;19383:701::-;19664:3;19686:148;19830:3;19686:148;:::i;:::-;19679:155;;19851:95;19942:3;19933:6;19851:95;:::i;:::-;19844:102;;19963:95;20054:3;20045:6;19963:95;:::i;:::-;19956:102;;20075:3;20068:10;;19383:701;;;;;:::o;20090:180::-;20138:77;20135:1;20128:88;20235:4;20232:1;20225:15;20259:4;20256:1;20249:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "888400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"mint(address[],uint256[],string[],bytes[])": "infinite",
								"signTransaction(address,string,bytes)": "infinite",
								"splitSign(bytes)": "infinite"
							},
							"internal": {
								"getEthSignMsgHash(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 203,
									"end": 273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 261,
									"end": 264,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 248,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 248,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 239,
									"end": 265,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 265,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 265,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 203,
									"end": 273,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 2766,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200dcf5c92c2a434028f9ac55812ed50d5fb9994e6b9de91fd40bd1f5377f7111664736f6c63430008180033",
									".code": [
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "2FF4BB4B"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "883A6C75"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "95E0E0C9"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 2766,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1867,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1867,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1867,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 762,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 762,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1962,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2048,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2048,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2023,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2251,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2255,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2230,
											"end": 2255,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2230,
											"end": 2255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2355,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2457,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2458,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2459,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2579,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2533,
											"end": 2579,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2560,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2579,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2533,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2591,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 460,
											"end": 469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 747,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 455,
											"end": 747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 479,
											"end": 487,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 479,
											"end": 494,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 475,
											"end": 494,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 455,
											"end": 747,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 455,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 455,
											"end": 747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 577,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 593,
											"end": 601,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 602,
											"end": 603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 593,
											"end": 604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 593,
											"end": 604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 606,
											"end": 613,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 614,
											"end": 615,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 606,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 606,
											"end": 616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 628,
											"end": 629,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 618,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 618,
											"end": 630,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 577,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 577,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 631,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 577,
											"end": 631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 660,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 661,
											"end": 669,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 670,
											"end": 671,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 661,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 661,
											"end": 672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 679,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 682,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 646,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 646,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "710C6BEC3CF443B5AFBDA9FF86716F3A0D00DB3DDAEE6CC493C93BE240533E12"
										},
										{
											"begin": 711,
											"end": 719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 720,
											"end": 721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 711,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 722,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 732,
											"end": 733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 724,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 724,
											"end": 734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 703,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 703,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 735,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 455,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 455,
											"end": 747,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 455,
											"end": 747,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 455,
											"end": 747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 455,
											"end": 747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 281,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 897,
											"end": 912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 933,
											"end": 937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 915,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 915,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 915,
											"end": 938,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 915,
											"end": 938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 897,
											"end": 938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 897,
											"end": 938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 995,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1038,
											"end": 1047,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1028,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1048,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1028,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "29BD5E82392230298810019D37E60FC402505ADB5AFA0F05072474634FCCA380"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "PUSH",
											"source": 9,
											"value": "690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 1258,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1233,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1269,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "PUSH",
											"source": 9,
											"value": "690C22A325937E3625A470A9F14C15683846660270FB112EA5C93A7EA9DE7466"
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1285,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1298,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1325,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1321,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1352,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1309,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1859,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1369,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1602,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1763,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1790,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1763,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1669,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1851,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 6,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 6,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 6,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1466,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1469,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1507,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1755,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1609,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1713,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1744,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1736,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1838,
											"end": 1843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1879,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1879,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1927,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1879,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1863,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1928,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1863,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 1958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1993,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2009,
											"end": 2025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2115,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2003,
											"end": 2115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2034,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2034,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2113,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2034,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2115,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2003,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2164,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2124,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2124,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 2184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2315,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2531,
											"end": 2534,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2457,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2457,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2821,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2870,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2975,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 3047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 3054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3060,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3261,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3143,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3230,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3254,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3230,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3353,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3267,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3347,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3359,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3458,
											"end": 3463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3442,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3464,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3442,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3430,
											"end": 3465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3649,
											"end": 3658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3726,
											"end": 3743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3673,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3744,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3673,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3754,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3754,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3754,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3754,
											"end": 3826,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3754,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3836,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3904,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3836,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4228,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3917,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4103,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4070,
											"end": 4126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4106,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 4070,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4228,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4351,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4234,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4345,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4483,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4357,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4412,
											"end": 4477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4412,
											"end": 4477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4585,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 4489,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4555,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4713,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 4591,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4682,
											"end": 4687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 4664,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4689,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4781,
											"end": 4810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4781,
											"end": 4810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 4819,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5018,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 5018,
											"end": 5082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5082,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5018,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5002,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5083,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5002,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5108,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5224,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5251,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5252,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5356,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5234,
											"end": 5356,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5267,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5267,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5346,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5267,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5356,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5234,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5406,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5503,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5540,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5503,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5575,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5441,
											"end": 5585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5365,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 5591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5701,
											"end": 5823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5742,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5742,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5821,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5742,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5823,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5701,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 5866,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5884,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5978,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5884,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6301,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5990,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6175,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6176,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6143,
											"end": 6199,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6179,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6199,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6143,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6234,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6512,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 6390,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6463,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6487,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 6463,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6456,
											"end": 6461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6488,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6492,
											"end": 6504,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6443,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6645,
											"end": 6650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 6618,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6651,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6618,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6817,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6874,
											"end": 6880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6881,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6817,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6801,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6882,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6801,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6917,
											"end": 6938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7023,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7050,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7051,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7155,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7033,
											"end": 7155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7066,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7155,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7033,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7198,
											"end": 7204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 7302,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7339,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7302,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7373,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7364,
											"end": 7367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7360,
											"end": 7374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7374,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7215,
											"end": 7229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7164,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 7390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 7390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7518,
											"end": 7524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7514,
											"end": 7531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7537,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7500,
											"end": 7622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7541,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7541,
											"end": 7620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7541,
											"end": 7620,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7541,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7622,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7500,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7756,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 7683,
											"end": 7777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7777,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7683,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7490,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8110,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 7789,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 7985,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7952,
											"end": 8008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7988,
											"end": 8006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8008,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7952,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8038,
											"end": 8042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8030,
											"end": 8036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8043,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8424,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8116,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8260,
											"end": 8266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8287,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8310,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8254,
											"end": 8310,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8290,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8310,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8254,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8350,
											"end": 8356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 8328,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8357,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8328,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8320,
											"end": 8357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8320,
											"end": 8357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8549,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8591,
											"end": 8597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8549,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8598,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8549,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8533,
											"end": 8599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8599,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8533,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8608,
											"end": 8629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8653,
											"end": 8658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8687,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8677,
											"end": 8702,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8674,
											"end": 8786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8786,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8674,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8842,
											"end": 8848,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8837,
											"end": 8840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8835,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8795,
											"end": 8849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8849,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8795,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8514,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8931,
											"end": 8936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8977,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8965,
											"end": 8971,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 8978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8984,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8947,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8947,
											"end": 9069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8988,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 8988,
											"end": 9067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9067,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8988,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8947,
											"end": 9069,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8947,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9092,
											"end": 9112,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9205,
											"end": 9208,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9182,
											"end": 9188,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9130,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8937,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9451,
											"end": 9457,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 9384,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9384,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 9368,
											"end": 9459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9459,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9368,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9359,
											"end": 9459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9359,
											"end": 9459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 9514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 9515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9542,
											"end": 9546,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9535,
											"end": 9540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9531,
											"end": 9547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9524,
											"end": 9547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9524,
											"end": 9547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9595,
											"end": 9599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9583,
											"end": 9600,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9627,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9613,
											"end": 9628,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9732,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 9610,
											"end": 9732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 9643,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 9643,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9722,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 9643,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9732,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 9610,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9770,
											"end": 9773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9767,
											"end": 9782,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9864,
											"end": 9867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9887,
											"end": 9898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9884,
											"end": 9919,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9922,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 9922,
											"end": 10001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 10001,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9922,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10046,
											"end": 10057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10044,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10115,
											"end": 10125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 10084,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10131,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 10084,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 10176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 10176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9805,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9796,
											"end": 9799,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9792,
											"end": 9806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 9806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 9806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 9741,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 10182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10285,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10331,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10319,
											"end": 10325,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10338,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10301,
											"end": 10423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 10342,
											"end": 10421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10423,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10301,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10466,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10484,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10584,
											"end": 10587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10576,
											"end": 10582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10569,
											"end": 10573,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10561,
											"end": 10567,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10484,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10484,
											"end": 10588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10484,
											"end": 10588,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10484,
											"end": 10588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10475,
											"end": 10588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10475,
											"end": 10588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10204,
											"end": 10594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10920,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 10600,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10795,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10762,
											"end": 10818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10798,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10818,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10762,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10908,
											"end": 10912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10902,
											"end": 10906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10920,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10600,
											"end": 10920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11071,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11087,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11087,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 11087,
											"end": 11160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11087,
											"end": 11160,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 11087,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 11071,
											"end": 11161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11161,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11071,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11186,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11216,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11196,
											"end": 11217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11237,
											"end": 11242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11233,
											"end": 11249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11285,
											"end": 11302,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 11283,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11330,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11312,
											"end": 11434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11312,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11312,
											"end": 11434,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11345,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 11345,
											"end": 11424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11424,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11345,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11312,
											"end": 11434,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11312,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11570,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11602,
											"end": 11620,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11589,
											"end": 11600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11621,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11705,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 11583,
											"end": 11705,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 11624,
											"end": 11703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 11583,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11759,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11746,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 11828,
											"end": 11831,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 11786,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11832,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 11786,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 11784,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11774,
											"end": 11833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11866,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11857,
											"end": 11860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11853,
											"end": 11867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11867,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 11877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 11877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11503,
											"end": 11507,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11498,
											"end": 11501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 11443,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11447,
											"end": 11468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11984,
											"end": 11989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12033,
											"end": 12036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12030,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12018,
											"end": 12024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12014,
											"end": 12031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12010,
											"end": 12037,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12000,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12000,
											"end": 12122,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 12041,
											"end": 12120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12000,
											"end": 12122,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12000,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12145,
											"end": 12165,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12183,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12255,
											"end": 12272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12183,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 12183,
											"end": 12286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12183,
											"end": 12286,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 12183,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12174,
											"end": 12286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12174,
											"end": 12286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11990,
											"end": 12292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12519,
											"end": 12525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12527,
											"end": 12533,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12576,
											"end": 12579,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12564,
											"end": 12573,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12555,
											"end": 12562,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12551,
											"end": 12574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12580,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12664,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 12544,
											"end": 12664,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 12583,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 12583,
											"end": 12662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12662,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 12583,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12664,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 12544,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12731,
											"end": 12732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12716,
											"end": 12733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12734,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12753,
											"end": 12759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12750,
											"end": 12780,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12864,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 12747,
											"end": 12864,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 12783,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 12783,
											"end": 12862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12862,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 12783,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12864,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 12747,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12888,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 12958,
											"end": 12965,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12949,
											"end": 12955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 12947,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12934,
											"end": 12956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12888,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 12888,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12888,
											"end": 12966,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 12888,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12878,
											"end": 12966,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12878,
											"end": 12966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13043,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13032,
											"end": 13041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13015,
											"end": 13047,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13066,
											"end": 13072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13063,
											"end": 13093,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13177,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 13060,
											"end": 13177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13096,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13096,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 13096,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13096,
											"end": 13175,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13096,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13177,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 13060,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13201,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 13271,
											"end": 13278,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13262,
											"end": 13268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13260,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13247,
											"end": 13269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13201,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 13201,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13201,
											"end": 13279,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 13201,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13279,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13345,
											"end": 13354,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13328,
											"end": 13360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 13387,
											"end": 13405,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13379,
											"end": 13385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13376,
											"end": 13406,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13373,
											"end": 13490,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13373,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 13373,
											"end": 13490,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13409,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 13409,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13488,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13409,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13373,
											"end": 13490,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 13373,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13514,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13594,
											"end": 13601,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13574,
											"end": 13583,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13514,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 13514,
											"end": 13602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13514,
											"end": 13602,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13514,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13602,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13602,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13679,
											"end": 13681,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13668,
											"end": 13677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13651,
											"end": 13683,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 13710,
											"end": 13728,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13702,
											"end": 13708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13699,
											"end": 13729,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 13696,
											"end": 13813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 13732,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 13732,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13811,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 13732,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13813,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 13696,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13837,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 13916,
											"end": 13923,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13907,
											"end": 13913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13896,
											"end": 13905,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13892,
											"end": 13914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13837,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 13837,
											"end": 13924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13837,
											"end": 13924,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 13837,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13827,
											"end": 13924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13827,
											"end": 13924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13622,
											"end": 13934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 13941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14043,
											"end": 14049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14110,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14083,
											"end": 14106,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14111,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 14114,
											"end": 14193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 14304,
											"end": 14311,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14295,
											"end": 14301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14293,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14280,
											"end": 14302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14259,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 14259,
											"end": 14312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14259,
											"end": 14312,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 14259,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14249,
											"end": 14312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14391,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14393,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14412,
											"end": 14418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14439,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14406,
											"end": 14523,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14406,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14406,
											"end": 14523,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 14442,
											"end": 14521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 14442,
											"end": 14521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14521,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 14442,
											"end": 14521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14406,
											"end": 14523,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14406,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 14602,
											"end": 14609,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14591,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14578,
											"end": 14600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 14547,
											"end": 14610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 14547,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14687,
											"end": 14689,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14676,
											"end": 14685,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14691,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14737,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14821,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14704,
											"end": 14821,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 14740,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 14740,
											"end": 14819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14819,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 14740,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14821,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14704,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14845,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 14899,
											"end": 14906,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14890,
											"end": 14896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14879,
											"end": 14888,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14875,
											"end": 14897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14845,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 14845,
											"end": 14907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14845,
											"end": 14907,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 14845,
											"end": 14907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14835,
											"end": 14907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14835,
											"end": 14907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13947,
											"end": 14924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15110,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 14930,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14978,
											"end": 15055,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15075,
											"end": 15079,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15072,
											"end": 15073,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15065,
											"end": 15080,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15089,
											"end": 15104,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15154,
											"end": 15157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 15189,
											"end": 15190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 15173,
											"end": 15191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15168,
											"end": 15191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15168,
											"end": 15191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 15221,
											"end": 15222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 15205,
											"end": 15223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15223,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 15205,
											"end": 15223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15223,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15232,
											"end": 15248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15232,
											"end": 15248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 15264,
											"end": 15267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15274,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15297,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15258,
											"end": 15297,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 15277,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 15277,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15295,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 15277,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15297,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15258,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15310,
											"end": 15490,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 15310,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15358,
											"end": 15435,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15355,
											"end": 15356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15459,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15452,
											"end": 15453,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15445,
											"end": 15460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15479,
											"end": 15483,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15476,
											"end": 15477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15484,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15614,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 15496,
											"end": 15614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 15601,
											"end": 15606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 15583,
											"end": 15607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15607,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 15583,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15578,
											"end": 15581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15571,
											"end": 15608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15738,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 15620,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15707,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 15725,
											"end": 15730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15707,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 15707,
											"end": 15731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15707,
											"end": 15731,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 15707,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15695,
											"end": 15732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15865,
											"end": 15869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15905,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15892,
											"end": 15901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15880,
											"end": 15906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15880,
											"end": 15906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15916,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 15984,
											"end": 15985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15973,
											"end": 15982,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15969,
											"end": 15986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15960,
											"end": 15966,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15916,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 15916,
											"end": 15987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15916,
											"end": 15987,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 15916,
											"end": 15987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 16065,
											"end": 16067,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16050,
											"end": 16068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16041,
											"end": 16047,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 15997,
											"end": 16069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16069,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 15997,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15744,
											"end": 16076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16181,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 16082,
											"end": 16181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16134,
											"end": 16140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16168,
											"end": 16173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16162,
											"end": 16174,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16152,
											"end": 16174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16152,
											"end": 16174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16271,
											"end": 16282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16305,
											"end": 16311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16300,
											"end": 16303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16345,
											"end": 16349,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16340,
											"end": 16343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16336,
											"end": 16350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16608,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 16362,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16467,
											"end": 16473,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16464,
											"end": 16465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16461,
											"end": 16474,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16543,
											"end": 16554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16537,
											"end": 16555,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16533,
											"end": 16534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16531,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16524,
											"end": 16535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16517,
											"end": 16556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16489,
											"end": 16491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16486,
											"end": 16487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16482,
											"end": 16492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16477,
											"end": 16492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16477,
											"end": 16492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 16453,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16591,
											"end": 16597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16586,
											"end": 16589,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16582,
											"end": 16598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16575,
											"end": 16602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16424,
											"end": 16608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16730,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 16763,
											"end": 16768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16730,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 16730,
											"end": 16769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16730,
											"end": 16769,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 16730,
											"end": 16769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 16849,
											"end": 16855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16844,
											"end": 16847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 16785,
											"end": 16856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16856,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16865,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 16923,
											"end": 16929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16918,
											"end": 16921,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16904,
											"end": 16909,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16900,
											"end": 16916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16865,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 16865,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16865,
											"end": 16930,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 16865,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 16977,
											"end": 16983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 16955,
											"end": 16984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 16953,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16946,
											"end": 16985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 16985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 16985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16706,
											"end": 16991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17176,
											"end": 17178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17165,
											"end": 17174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 17257,
											"end": 17258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17246,
											"end": 17255,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17239,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 17189,
											"end": 17260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17260,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 17189,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17307,
											"end": 17316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17301,
											"end": 17305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17297,
											"end": 17317,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17292,
											"end": 17294,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17281,
											"end": 17290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17318,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 17408,
											"end": 17412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17405,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 17335,
											"end": 17413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17413,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 17335,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17637,
											"end": 17640,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17626,
											"end": 17635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17641,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17614,
											"end": 17641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17614,
											"end": 17641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17651,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17708,
											"end": 17717,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17704,
											"end": 17721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17695,
											"end": 17701,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17651,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 17651,
											"end": 17722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17651,
											"end": 17722,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 17651,
											"end": 17722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17732,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 17796,
											"end": 17798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17785,
											"end": 17794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17772,
											"end": 17778,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17732,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 17732,
											"end": 17800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17732,
											"end": 17800,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 17732,
											"end": 17800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17810,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 17878,
											"end": 17880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17863,
											"end": 17881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17854,
											"end": 17860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17810,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 17810,
											"end": 17882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17810,
											"end": 17882,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 17810,
											"end": 17882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17892,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 17960,
											"end": 17962,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17949,
											"end": 17958,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17945,
											"end": 17963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17936,
											"end": 17942,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17892,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 17892,
											"end": 17964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17892,
											"end": 17964,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 17892,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18070,
											"end": 18074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18097,
											"end": 18106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18093,
											"end": 18111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18085,
											"end": 18111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18085,
											"end": 18111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18121,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 18189,
											"end": 18190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18178,
											"end": 18187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18174,
											"end": 18191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18165,
											"end": 18171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18121,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 18121,
											"end": 18192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18121,
											"end": 18192,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 18121,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18307,
											"end": 18318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18344,
											"end": 18347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18329,
											"end": 18347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18329,
											"end": 18347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18573,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 18359,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18499,
											"end": 18565,
											"name": "PUSH",
											"source": 10,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A000000000000"
										},
										{
											"begin": 18495,
											"end": 18496,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18487,
											"end": 18493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18981,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 18579,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18739,
											"end": 18742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18760,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 18842,
											"end": 18844,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 18837,
											"end": 18840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18760,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 18760,
											"end": 18845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18760,
											"end": 18845,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 18760,
											"end": 18845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18753,
											"end": 18845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18753,
											"end": 18845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 18943,
											"end": 18946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 18854,
											"end": 18947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 18854,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 18974,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 18967,
											"end": 18970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18963,
											"end": 18975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18956,
											"end": 18975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18956,
											"end": 18975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19093,
											"end": 19096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19121,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 19154,
											"end": 19159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 19121,
											"end": 19160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19160,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 19121,
											"end": 19160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19176,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 19258,
											"end": 19264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19253,
											"end": 19256,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19176,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 19176,
											"end": 19265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19176,
											"end": 19265,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 19176,
											"end": 19265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19169,
											"end": 19265,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19169,
											"end": 19265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19274,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 19332,
											"end": 19338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19330,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19320,
											"end": 19324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19313,
											"end": 19318,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19309,
											"end": 19325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19274,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 19274,
											"end": 19339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19274,
											"end": 19339,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 19274,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19364,
											"end": 19370,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19359,
											"end": 19362,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19097,
											"end": 19377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19664,
											"end": 19667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19686,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 19830,
											"end": 19833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19686,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 19686,
											"end": 19834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19686,
											"end": 19834,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 19686,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19679,
											"end": 19834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 19942,
											"end": 19945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 19939,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 19851,
											"end": 19946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19851,
											"end": 19946,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 19851,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19844,
											"end": 19946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19844,
											"end": 19946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 20054,
											"end": 20057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20045,
											"end": 20051,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 19963,
											"end": 20058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20058,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 19963,
											"end": 20058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19956,
											"end": 20058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19956,
											"end": 20058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20075,
											"end": 20078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20068,
											"end": 20078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20068,
											"end": 20078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19383,
											"end": 20084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20090,
											"end": 20270,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 20090,
											"end": 20270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20138,
											"end": 20215,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20135,
											"end": 20136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20128,
											"end": 20216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20235,
											"end": 20239,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 20232,
											"end": 20233,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20225,
											"end": 20240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20259,
											"end": 20263,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20256,
											"end": 20257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20249,
											"end": 20264,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/contracts/SoonToken.sol",
								"src/contracts/metaTransacion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"mint(address[],uint256[],string[],bytes[])": "883a6c75",
							"signTransaction(address,string,bytes)": "95e0e0c9",
							"splitSign(bytes)": "2ff4bb4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CA\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"event02\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"event03\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"evnet01\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"token\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"message\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signature\",\"type\":\"bytes[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"signTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sign\",\"type\":\"bytes\"}],\"name\":\"splitSign\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/metaTransacion.sol\":\"MetaTransaction\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/contracts/SoonToken.sol\":{\"keccak256\":\"0x0ce5d1fdee9cf884bad206c38024177e91a10a42bf1b21b5ca877b009c404e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304624e6eadbcc3c3c4625e5a7cc4813c1581afb145fd6083d9be7f0e67262b9\",\"dweb:/ipfs/QmZyb3d7BdtHVN8HCGpYDd9eAet4z6Db99HDDiErvfg3pu\"]},\"src/contracts/metaTransacion.sol\":{\"keccak256\":\"0x4bf6e46055f0c0e827296c40dd462cd7fb3bc7376757beb4c60aa2765fdece81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bbe61842f3b1c4172fe559be5b9baf1806c4f16e5ac5b72bf3a5538a26e4de2\",\"dweb:/ipfs/QmYS6K57cD3gnMaGGajqwkUZD8mQzL3V1e9zhhNRDptypJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2233,
								"contract": "src/contracts/metaTransacion.sol:MetaTransaction",
								"label": "soonToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(SoonToken)2226"
							}
						],
						"types": {
							"t_contract(SoonToken)2226": {
								"encoding": "inplace",
								"label": "contract SoonToken",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2094
						],
						"SignedMath": [
							2199
						],
						"Strings": [
							1040
						]
					},
					"id": 1041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 2095,
							"src": "127:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2094,
										"src": "135:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 2200,
							"src": "165:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 790,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2199,
										"src": "173:10:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1040,
							"linearizedBaseContracts": [
								1040
							],
							"name": "Strings",
							"nameLocation": "259:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 795,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "273:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 793,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "335:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 796,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:5",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 805,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "520:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:5"
									},
									"src": "470:66:5"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "708:627:5",
										"statements": [
											{
												"id": 851,
												"nodeType": "UncheckedBlock",
												"src": "718:611:5",
												"statements": [
													{
														"assignments": [
															814
														],
														"declarations": [
															{
																"constant": false,
																"id": 814,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "742:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 813,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 821,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "770:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 815,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "759:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2094_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1914,
																	"src": "759:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:5"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "794:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 822,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 828,
														"initialValue": {
															"arguments": [
																{
																	"id": 826,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "828:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 824,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:5"
													},
													{
														"assignments": [
															830
														],
														"declarations": [
															{
																"constant": false,
																"id": 830,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 851,
																"src": "849:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 831,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:5"
													},
													{
														"AST": {
															"nativeSrc": "930:67:5",
															"nodeType": "YulBlock",
															"src": "930:67:5",
															"statements": [
																{
																	"nativeSrc": "948:35:5",
																	"nodeType": "YulAssignment",
																	"src": "948:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:5",
																						"nodeType": "YulLiteral",
																						"src": "971:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:5"
																				},
																				"nativeSrc": "967:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:5"
																		},
																		"nativeSrc": "955:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:5",
																"valueSize": 1
															},
															{
																"declaration": 814,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:5",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:5",
																"valueSize": 1
															}
														],
														"id": 832,
														"nodeType": "InlineAssembly",
														"src": "921:76:5"
													},
													{
														"body": {
															"id": 847,
															"nodeType": "Block",
															"src": "1023:269:5",
															"statements": [
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:5",
																		"subExpression": {
																			"id": 834,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "1041:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:5",
																		"nodeType": "YulBlock",
																		"src": "1124:86:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:5",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:5"
																									},
																									"nativeSrc": "1164:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:5"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:5"
																							},
																							"nativeSrc": "1159:32:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:5"
																					},
																					"nativeSrc": "1146:46:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:5"
																				},
																				"nativeSrc": "1146:46:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 795,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 830,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 808,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 837,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:5"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1227:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1260:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 846,
																	"nodeType": "IfStatement",
																	"src": "1256:21:5",
																	"trueBody": {
																		"id": 845,
																		"nodeType": "Break",
																		"src": "1272:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 848,
														"nodeType": "WhileStatement",
														"src": "1010:282:5"
													},
													{
														"expression": {
															"id": 849,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "1312:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 812,
														"id": 850,
														"nodeType": "Return",
														"src": "1305:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:5"
									},
									"scope": 1040,
									"src": "637:698:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1511:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "1542:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:5",
															"trueExpression": {
																"hexValue": "2d",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1588:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 871,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "1573:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2199_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:5",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2198,
																		"src": "1573:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 870,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1564:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 861,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:5",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 860,
												"id": 877,
												"nodeType": "Return",
												"src": "1521:75:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1459:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 855,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1496:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:5"
									},
									"scope": 1040,
									"src": "1435:168:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1782:100:5",
										"statements": [
											{
												"id": 897,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "1835:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 891,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "1854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 889,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2094,
																				"src": "1842:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2094_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2036,
																			"src": "1842:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 887,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	899,
																	982,
																	1002
																],
																"referencedDeclaration": 982,
																"src": "1823:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 886,
														"id": 896,
														"nodeType": "Return",
														"src": "1816:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1729:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1767:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:5"
									},
									"scope": 1040,
									"src": "1708:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2095:435:5",
										"statements": [
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "2105:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"id": 911,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 902,
													"src": "2126:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:5"
											},
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "2141:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 913,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 918,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "2177:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 915,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:5"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 924,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2198:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 926,
														"indexExpression": {
															"hexValue": "30",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:5"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 930,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2223:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 932,
														"indexExpression": {
															"hexValue": "31",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:5"
											},
											{
												"body": {
													"id": 964,
													"nodeType": "Block",
													"src": "2293:95:5",
													"statements": [
														{
															"expression": {
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 950,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "2307:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 952,
																	"indexExpression": {
																		"id": 951,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "2314:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 953,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "2319:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 957,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 954,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "2330:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:5"
														},
														{
															"expression": {
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 960,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2361:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 944,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2281:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"initializationExpression": {
													"assignments": [
														937
													],
													"declarations": [
														{
															"constant": false,
															"id": 937,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 965,
															"src": "2253:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 936,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 943,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 939,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "2269:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:5",
														"subExpression": {
															"id": 947,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2290:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 949,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2401:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "2397:96:5",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "2418:75:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "2468:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 971,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "2475:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 969,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "2439:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "2432:50:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2516:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 976,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 980,
												"nodeType": "Return",
												"src": "2502:21:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2026:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2041:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:5"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2080:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:5"
									},
									"scope": 1040,
									"src": "2005:525:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "2762:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 995,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "2807:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 993,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 998,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2815:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 990,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															899,
															982,
															1002
														],
														"referencedDeclaration": 982,
														"src": "2779:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 989,
												"id": 1000,
												"nodeType": "Return",
												"src": "2772:58:5"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "2710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:5"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "2747:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:5"
									},
									"scope": 1040,
									"src": "2689:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2992:104:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1014,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "3015:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1012,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "3034:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1026,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "3063:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1024,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1023,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "3086:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1029,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1037,
												"nodeType": "Return",
												"src": "3002:87:5"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2929:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2946:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:5"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2986:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:5"
									},
									"scope": 1040,
									"src": "2914:182:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1041,
							"src": "251:2847:5",
							"usedErrors": [
								805
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2094
						]
					},
					"id": 2095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1042,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1043,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2094,
							"linearizedBaseContracts": [
								2094
							],
							"name": "Math",
							"nameLocation": "211:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:6",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1046,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:6"
									},
									"src": "277:29:6"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1051,
									"members": [
										{
											"id": 1047,
											"name": "Floor",
											"nameLocation": "336:5:6",
											"nodeType": "EnumValue",
											"src": "336:5:6"
										},
										{
											"id": 1048,
											"name": "Ceil",
											"nameLocation": "379:4:6",
											"nodeType": "EnumValue",
											"src": "379:4:6"
										},
										{
											"id": 1049,
											"name": "Trunc",
											"nameLocation": "421:5:6",
											"nodeType": "EnumValue",
											"src": "421:5:6"
										},
										{
											"id": 1050,
											"name": "Expand",
											"nameLocation": "451:6:6",
											"nodeType": "EnumValue",
											"src": "451:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:6",
									"nodeType": "EnumDefinition",
									"src": "312:169:6"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "661:140:6",
										"statements": [
											{
												"id": 1081,
												"nodeType": "UncheckedBlock",
												"src": "671:124:6",
												"statements": [
													{
														"assignments": [
															1064
														],
														"declarations": [
															{
																"constant": false,
																"id": 1064,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1081,
																"src": "695:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1063,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "707:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1066,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "711:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1076,
														"nodeType": "IfStatement",
														"src": "726:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1062,
															"id": 1075,
															"nodeType": "Return",
															"src": "737:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1078,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1079,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1062,
														"id": 1080,
														"nodeType": "Return",
														"src": "768:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "646:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:6"
									},
									"scope": 2094,
									"src": "585:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "984:113:6",
										"statements": [
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "994:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1022:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1096,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1026:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1102,
														"nodeType": "IfStatement",
														"src": "1018:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1094,
															"id": 1101,
															"nodeType": "Return",
															"src": "1029:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1104,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "1074:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1105,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1107,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1094,
														"id": 1108,
														"nodeType": "Return",
														"src": "1060:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "924:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:6"
									},
									"scope": 2094,
									"src": "908:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1283:417:6",
										"statements": [
											{
												"id": 1151,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1551:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "1547:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1122,
															"id": 1129,
															"nodeType": "Return",
															"src": "1559:16:6"
														}
													},
													{
														"assignments": [
															1132
														],
														"declarations": [
															{
																"constant": false,
																"id": 1132,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1151,
																"src": "1589:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1136,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1134,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "1624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1138,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "1628:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "1620:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1122,
															"id": 1145,
															"nodeType": "Return",
															"src": "1636:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1148,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "1681:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1149,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1122,
														"id": 1150,
														"nodeType": "Return",
														"src": "1667:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:6"
									},
									"scope": 2094,
									"src": "1207:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "1887:114:6",
										"statements": [
											{
												"id": 1179,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "1925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1172,
														"nodeType": "IfStatement",
														"src": "1921:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1170,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1164,
															"id": 1171,
															"nodeType": "Return",
															"src": "1933:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1174,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "1978:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1175,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "1982:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1164,
														"id": 1178,
														"nodeType": "Return",
														"src": "1964:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1827:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1872:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1878:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:6"
									},
									"scope": 2094,
									"src": "1811:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "2198:114:6",
										"statements": [
											{
												"id": 1207,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2236:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1200,
														"nodeType": "IfStatement",
														"src": "2232:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1192,
															"id": 1199,
															"nodeType": "Return",
															"src": "2244:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1202,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "2289:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1203,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "2293:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1205,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1192,
														"id": 1206,
														"nodeType": "Return",
														"src": "2275:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:6"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:6"
									},
									"scope": 2094,
									"src": "2122:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "2449:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2466:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1220,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "2478:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:6",
													"trueExpression": {
														"id": 1222,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2474:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1225,
												"nodeType": "Return",
												"src": "2459:20:6"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:6"
									},
									"scope": 2094,
									"src": "2382:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2624:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1237,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1238,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2645:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "2653:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:6",
													"trueExpression": {
														"id": 1240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "2649:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1243,
												"nodeType": "Return",
												"src": "2634:20:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2570:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2581:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2615:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:6"
									},
									"scope": 2094,
									"src": "2557:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2845:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "2900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1256,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "2904:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "2910:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1260,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "2914:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1254,
												"id": 1266,
												"nodeType": "Return",
												"src": "2892:28:6"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2802:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2836:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:6"
									},
									"scope": 2094,
									"src": "2774:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "3219:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "3233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "3229:127:6",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "3241:115:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1281,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "3340:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1282,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3344:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1277,
															"id": 1284,
															"nodeType": "Return",
															"src": "3333:12:6"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "3444:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1291,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "3458:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1300,
												"nodeType": "Return",
												"src": "3437:35:6"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3165:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3176:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3210:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:6"
									},
									"scope": 2094,
									"src": "3148:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "3901:4018:6",
										"statements": [
											{
												"id": 1426,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:6",
												"statements": [
													{
														"assignments": [
															1315
														],
														"declarations": [
															{
																"constant": false,
																"id": 1315,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "4232:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1319,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1316,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "4248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1317,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "4252:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:6"
													},
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "4312:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1322,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:6"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:6",
															"nodeType": "YulBlock",
															"src": "4392:122:6",
															"statements": [
																{
																	"nativeSrc": "4410:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:6"
																				},
																				"nativeSrc": "4433:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		},
																		"nativeSrc": "4420:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:6",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:6",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:6"
																				},
																				"nativeSrc": "4486:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1305,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1307,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:6",
																"valueSize": 1
															}
														],
														"id": 1323,
														"nodeType": "InlineAssembly",
														"src": "4383:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "4591:368:6",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "4607:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1327,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "4925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1328,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "4933:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1313,
																	"id": 1330,
																	"nodeType": "Return",
																	"src": "4918:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "5065:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1334,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1340,
														"nodeType": "IfStatement",
														"src": "5061:88:6",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "5087:62:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1336,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "5112:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1338,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:6"
																}
															]
														}
													},
													{
														"assignments": [
															1342
														],
														"declarations": [
															{
																"constant": false,
																"id": 1342,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "5404:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1343,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:6"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:6",
															"nodeType": "YulBlock",
															"src": "5444:291:6",
															"statements": [
																{
																	"nativeSrc": "5513:38:6",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:6"
																		},
																		"nativeSrc": "5526:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:6",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:6"
																				},
																				"nativeSrc": "5653:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:6"
																		},
																		"nativeSrc": "5642:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:6",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:6"
																		},
																		"nativeSrc": "5700:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1342,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1305,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1307,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:6",
																"valueSize": 1
															}
														],
														"id": 1344,
														"nodeType": "InlineAssembly",
														"src": "5435:300:6"
													},
													{
														"assignments": [
															1346
														],
														"declarations": [
															{
																"constant": false,
																"id": 1346,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "5939:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "5954:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1349,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "5973:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:6"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:6",
															"nodeType": "YulBlock",
															"src": "6008:362:6",
															"statements": [
																{
																	"nativeSrc": "6073:37:6",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:6"
																		},
																		"nativeSrc": "6088:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:6",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:6"
																		},
																		"nativeSrc": "6186:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:6",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:6"
																						},
																						"nativeSrc": "6333:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:6"
																				},
																				"nativeSrc": "6329:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:6"
																		},
																		"nativeSrc": "6325:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1309,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:6",
																"valueSize": 1
															}
														],
														"id": 1354,
														"nodeType": "InlineAssembly",
														"src": "5999:371:6"
													},
													{
														"expression": {
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1355,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "6436:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "6445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1357,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "6453:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:6"
													},
													{
														"assignments": [
															1362
														],
														"declarations": [
															{
																"constant": false,
																"id": 1362,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "6775:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1369,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1364,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "6798:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:6"
													},
													{
														"expression": {
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1370,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1372,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7046:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1373,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1377,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:6"
													},
													{
														"expression": {
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1378,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7100:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1380,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7115:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1381,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1385,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:6"
													},
													{
														"expression": {
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1386,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1388,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1389,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1393,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:6"
													},
													{
														"expression": {
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1394,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1396,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7255:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1397,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7269:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1401,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:6"
													},
													{
														"expression": {
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1402,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7310:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1404,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7325:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1405,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7339:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1409,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:6"
													},
													{
														"expression": {
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1410,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7381:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1412,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7396:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1413,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7410:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1417,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:6"
													},
													{
														"expression": {
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "7851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "7860:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1420,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "7868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1423,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:6"
													},
													{
														"expression": {
															"id": 1424,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "7896:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1313,
														"id": 1425,
														"nodeType": "Return",
														"src": "7889:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:6"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3885:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:6"
									},
									"scope": 2094,
									"src": "3803:4116:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "8161:192:6",
										"statements": [
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "8171:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"id": 1446,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "8195:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1447,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "8198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1448,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "8201:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1428,
															1471
														],
														"referencedDeclaration": 1428,
														"src": "8188:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1452,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "8244:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1051",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1051",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1451,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "8227:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1455,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "8264:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1456,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "8267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1457,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "8270:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1454,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "8223:101:6",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "8288:36:6",
													"statements": [
														{
															"expression": {
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1462,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "8302:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1465,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1468,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1444,
													"src": "8340:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1469,
												"nodeType": "Return",
												"src": "8333:13:6"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8067:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8078:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8089:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8110:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "8110:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "8110:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:6"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "8152:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:6"
									},
									"scope": 2094,
									"src": "8051:302:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "8644:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "8658:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "8654:45:6",
												"trueBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "8666:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1478,
															"id": 1483,
															"nodeType": "Return",
															"src": "8680:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "9378:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1490,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "9406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1489,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1750,
																			1785
																		],
																		"referencedDeclaration": 1750,
																		"src": "9401:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1494,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:6"
											},
											{
												"id": 1581,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:6",
												"statements": [
													{
														"expression": {
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1497,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9839:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1498,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9849:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1499,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9858:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1500,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9862:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1503,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1507,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:6"
													},
													{
														"expression": {
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1508,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9888:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1509,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9898:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1510,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1511,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9911:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1514,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1518,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:6"
													},
													{
														"expression": {
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1519,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1520,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9947:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1521,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "9956:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1522,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "9960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1525,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1529,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:6"
													},
													{
														"expression": {
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "9986:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1531,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9996:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1532,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10005:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1533,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10009:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1536,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1540,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:6"
													},
													{
														"expression": {
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10035:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1542,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10045:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1543,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10054:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1544,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10058:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1547,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1551,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:6"
													},
													{
														"expression": {
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10084:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1553,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10094:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1554,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10103:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1555,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10107:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1562,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:6"
													},
													{
														"expression": {
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "10133:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1564,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "10143:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1565,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "10152:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1566,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "10156:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1569,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1573,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "10193:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1576,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "10201:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1577,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "10205:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1574,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "10189:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1478,
														"id": 1580,
														"nodeType": "Return",
														"src": "10182:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "8601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:6"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "8635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:6"
									},
									"scope": 2094,
									"src": "8587:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "10405:164:6",
										"statements": [
											{
												"id": 1616,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:6",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1616,
																"src": "10439:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1599,
														"initialValue": {
															"arguments": [
																{
																	"id": 1597,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "10461:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1596,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1583,
																	1618
																],
																"referencedDeclaration": 1583,
																"src": "10456:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "10484:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1602,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1589,
																						"src": "10511:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1601,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "10494:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1604,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "10524:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1605,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "10533:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1607,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "10542:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1613,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1615,
														"nodeType": "Return",
														"src": "10477:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10354:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "10354:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "10354:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:6"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "10396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:6"
									},
									"scope": 2094,
									"src": "10329:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "10760:922:6",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1749,
														"src": "10770:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1629,
												"initialValue": {
													"hexValue": "30",
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:6"
											},
											{
												"id": 1746,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "10826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1644,
														"nodeType": "IfStatement",
														"src": "10822:99:6",
														"trueBody": {
															"id": 1643,
															"nodeType": "Block",
															"src": "10844:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "10862:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1638,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:6"
																},
																{
																	"expression": {
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1639,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "10893:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1642,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "10938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "10934:96:6",
														"trueBody": {
															"id": 1658,
															"nodeType": "Block",
															"src": "10955:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "10973:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1653,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:6"
																},
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11047:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1674,
														"nodeType": "IfStatement",
														"src": "11043:96:6",
														"trueBody": {
															"id": 1673,
															"nodeType": "Block",
															"src": "11064:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11082:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1668,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:6"
																},
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11112:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11156:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1689,
														"nodeType": "IfStatement",
														"src": "11152:96:6",
														"trueBody": {
															"id": 1688,
															"nodeType": "Block",
															"src": "11173:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11191:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1683,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:6"
																},
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11221:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11265:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "11261:93:6",
														"trueBody": {
															"id": 1703,
															"nodeType": "Block",
															"src": "11281:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11299:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1698,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:6"
																},
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11328:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11371:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1719,
														"nodeType": "IfStatement",
														"src": "11367:93:6",
														"trueBody": {
															"id": 1718,
															"nodeType": "Block",
															"src": "11387:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11405:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1713,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:6"
																},
																{
																	"expression": {
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11434:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1717,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11477:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1734,
														"nodeType": "IfStatement",
														"src": "11473:93:6",
														"trueBody": {
															"id": 1733,
															"nodeType": "Block",
															"src": "11493:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "11511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1728,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:6"
																},
																{
																	"expression": {
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11540:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1732,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11583:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1745,
														"nodeType": "IfStatement",
														"src": "11579:64:6",
														"trueBody": {
															"id": 1744,
															"nodeType": "Block",
															"src": "11599:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11617:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1743,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1747,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "11669:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1748,
												"nodeType": "Return",
												"src": "11662:13:6"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "10713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:6"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "10751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:6"
									},
									"scope": 2094,
									"src": "10699:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "11915:168:6",
										"statements": [
											{
												"id": 1783,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:6",
												"statements": [
													{
														"assignments": [
															1762
														],
														"declarations": [
															{
																"constant": false,
																"id": 1762,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1783,
																"src": "11949:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1766,
														"initialValue": {
															"arguments": [
																{
																	"id": 1764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "11971:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1763,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1750,
																	1785
																],
																"referencedDeclaration": 1750,
																"src": "11966:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "11998:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1769,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "12025:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1768,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "12008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1772,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1762,
																						"src": "12043:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1774,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "12052:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1760,
														"id": 1782,
														"nodeType": "Return",
														"src": "11991:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11864:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1755,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1754,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "11864:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "11864:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:6"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "11906:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:6"
									},
									"scope": 2094,
									"src": "11835:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "12276:854:6",
										"statements": [
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1913,
														"src": "12286:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"hexValue": "30",
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:6"
											},
											{
												"id": 1910,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1797,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12342:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "12338:103:6",
														"trueBody": {
															"id": 1812,
															"nodeType": "Block",
															"src": "12361:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12379:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1807,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:6"
																},
																{
																	"expression": {
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1808,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12414:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1811,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1830,
														"nodeType": "IfStatement",
														"src": "12454:103:6",
														"trueBody": {
															"id": 1829,
															"nodeType": "Block",
															"src": "12477:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1819,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12495:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1824,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:6"
																},
																{
																	"expression": {
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12530:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1828,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12574:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1847,
														"nodeType": "IfStatement",
														"src": "12570:103:6",
														"trueBody": {
															"id": 1846,
															"nodeType": "Block",
															"src": "12593:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1841,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:6"
																},
																{
																	"expression": {
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12646:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1845,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12690:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1864,
														"nodeType": "IfStatement",
														"src": "12686:100:6",
														"trueBody": {
															"id": 1863,
															"nodeType": "Block",
															"src": "12708:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12726:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1858,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:6"
																},
																{
																	"expression": {
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12760:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12803:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1881,
														"nodeType": "IfStatement",
														"src": "12799:100:6",
														"trueBody": {
															"id": 1880,
															"nodeType": "Block",
															"src": "12821:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12839:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:6"
																},
																{
																	"expression": {
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12873:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1879,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "12916:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "12912:100:6",
														"trueBody": {
															"id": 1897,
															"nodeType": "Block",
															"src": "12934:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12952:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:6"
																},
																{
																	"expression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12986:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "13029:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "13025:66:6",
														"trueBody": {
															"id": 1908,
															"nodeType": "Block",
															"src": "13047:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "13065:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1911,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1794,
													"src": "13117:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1912,
												"nodeType": "Return",
												"src": "13110:13:6"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "12229:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:6"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "12267:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:6"
									},
									"scope": 2094,
									"src": "12214:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "13365:170:6",
										"statements": [
											{
												"id": 1947,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:6",
												"statements": [
													{
														"assignments": [
															1926
														],
														"declarations": [
															{
																"constant": false,
																"id": 1926,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1947,
																"src": "13399:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1930,
														"initialValue": {
															"arguments": [
																{
																	"id": 1928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "13422:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1927,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1914,
																	1949
																],
																"referencedDeclaration": 1914,
																"src": "13416:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "13449:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1933,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1920,
																						"src": "13476:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1932,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "13459:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1936,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1926,
																						"src": "13495:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1938,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1917,
																					"src": "13504:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1924,
														"id": 1946,
														"nodeType": "Return",
														"src": "13442:76:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1918,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "13314:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "13314:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:6"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "13356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:6"
									},
									"scope": 2094,
									"src": "13284:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "13855:600:6",
										"statements": [
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "13865:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"hexValue": "30",
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:6"
											},
											{
												"id": 2032,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "13921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1975,
														"nodeType": "IfStatement",
														"src": "13917:98:6",
														"trueBody": {
															"id": 1974,
															"nodeType": "Block",
															"src": "13939:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "13957:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1969,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:6"
																},
																{
																	"expression": {
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1970,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13988:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1973,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1976,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "14028:95:6",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "14049:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1981,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14067:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1984,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:6"
																},
																{
																	"expression": {
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14097:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14140:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2005,
														"nodeType": "IfStatement",
														"src": "14136:95:6",
														"trueBody": {
															"id": 2004,
															"nodeType": "Block",
															"src": "14157:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1996,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14175:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1999,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:6"
																},
																{
																	"expression": {
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14205:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2003,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14248:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2020,
														"nodeType": "IfStatement",
														"src": "14244:95:6",
														"trueBody": {
															"id": 2019,
															"nodeType": "Block",
															"src": "14265:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "14283:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2014,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:6"
																},
																{
																	"expression": {
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14313:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2018,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "14356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "14352:64:6",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "14372:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14390:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2033,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1958,
													"src": "14442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1956,
												"id": 2034,
												"nodeType": "Return",
												"src": "14435:13:6"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:6"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13846:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:6"
									},
									"scope": 2094,
									"src": "13792:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "14692:177:6",
										"statements": [
											{
												"id": 2072,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:6",
												"statements": [
													{
														"assignments": [
															2048
														],
														"declarations": [
															{
																"constant": false,
																"id": 2048,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2072,
																"src": "14726:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2052,
														"initialValue": {
															"arguments": [
																{
																	"id": 2050,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "14750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2049,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2036,
																	2074
																],
																"referencedDeclaration": 2036,
																"src": "14743:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "14777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2055,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2042,
																						"src": "14804:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1051",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2054,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "14787:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1051_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2057,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2060,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2058,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2048,
																									"src": "14823:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2059,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2061,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2063,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2039,
																					"src": "14838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2071,
														"nodeType": "Return",
														"src": "14770:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14626:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14641:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2040,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "14641:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "14641:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:6"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "14683:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:6"
									},
									"scope": 2094,
									"src": "14610:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "15067:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "15090:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1051",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1051",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2091,
												"nodeType": "Return",
												"src": "15077:31:6"
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "15019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1051",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2076,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1051,
														"src": "15019:8:6"
													},
													"referencedDeclaration": 1051,
													"src": "15019:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1051",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:6"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "15061:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:6"
									},
									"scope": 2094,
									"src": "14993:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "203:14914:6",
							"usedErrors": [
								1046
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2199
						]
					},
					"id": 2200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2097,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2199,
							"linearizedBaseContracts": [
								2199
							],
							"name": "SignedMath",
							"nameLocation": "224:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "376:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "393:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "397:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "405:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:7",
													"trueExpression": {
														"id": 2110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "401:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2113,
												"nodeType": "Return",
												"src": "386:20:7"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "325:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2099,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "335:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:7"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "368:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:7"
									},
									"scope": 2199,
									"src": "312:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "555:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2125,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2126,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "576:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2129,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "584:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:7",
													"trueExpression": {
														"id": 2128,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "580:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2124,
												"id": 2131,
												"nodeType": "Return",
												"src": "565:20:7"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "504:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2117,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "514:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:7"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "547:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:7"
									},
									"scope": 2199,
									"src": "491:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "797:162:7",
										"statements": [
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2176,
														"src": "859:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2143,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2145,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "871:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2146,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2138,
																	"src": "875:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2149,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "882:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2150,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "886:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2152,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2155,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2158,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "911:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2163,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2144,
																						"src": "931:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2161,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2159,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2168,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "945:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2169,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "949:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2171,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2175,
												"nodeType": "Return",
												"src": "904:48:7"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "746:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2135,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "756:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2137,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:7"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "789:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:7"
									},
									"scope": 2199,
									"src": "729:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "1103:158:7",
										"statements": [
											{
												"id": 2196,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2187,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "1228:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:7",
																		"subExpression": {
																			"id": 2191,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "1242:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:7",
																	"trueExpression": {
																		"id": 2190,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "1237:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2184,
														"id": 2195,
														"nodeType": "Return",
														"src": "1213:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1061:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:7"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1094:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:7"
									},
									"scope": 2199,
									"src": "1048:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2200,
							"src": "216:1047:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:7"
				},
				"id": 7
			},
			"src/contracts/SoonToken.sol": {
				"ast": {
					"absolutePath": "src/contracts/SoonToken.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SoonToken": [
							2226
						]
					},
					"id": 2227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2227,
							"sourceUnit": 652,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2203,
										"name": "ERC20",
										"nameLocations": [
											"142:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "142:5:8"
									},
									"id": 2204,
									"nodeType": "InheritanceSpecifier",
									"src": "142:5:8"
								}
							],
							"canonicalName": "SoonToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2226,
							"linearizedBaseContracts": [
								2226,
								651,
								41,
								755,
								729,
								785
							],
							"name": "SoonToken",
							"nameLocation": "129:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "195:2:8",
										"statements": []
									},
									"id": 2212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536f6f6e546f6b656e",
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "175:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9336fd9daa0aa0bfacbded71263679a1affabb78fd0dc6e00b84149fae1a41da",
														"typeString": "literal_string \"SoonToken\""
													},
													"value": "SoonToken"
												},
												{
													"hexValue": "53544b",
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "188:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
														"typeString": "literal_string \"STK\""
													},
													"value": "STK"
												}
											],
											"id": 2209,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2206,
												"name": "ERC20",
												"nameLocations": [
													"169:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "169:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "169:25:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:8"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:0:8"
									},
									"scope": 2226,
									"src": "155:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "254:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "271:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "275:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "265:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "265:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "265:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "214:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "227:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "219:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "239:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "231:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:28:8"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:8"
									},
									"scope": 2226,
									"src": "205:85:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2227,
							"src": "120:173:8",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:262:8"
				},
				"id": 8
			},
			"src/contracts/metaTransacion.sol": {
				"ast": {
					"absolutePath": "src/contracts/metaTransacion.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Math": [
							2094
						],
						"MetaTransaction": [
							2448
						],
						"SignedMath": [
							2199
						],
						"SoonToken": [
							2226
						],
						"Strings": [
							1040
						]
					},
					"id": 2449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2449,
							"sourceUnit": 1041,
							"src": "61:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/SoonToken.sol",
							"file": "./SoonToken.sol",
							"id": 2230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2449,
							"sourceUnit": 2227,
							"src": "114:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MetaTransaction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2448,
							"linearizedBaseContracts": [
								2448
							],
							"name": "MetaTransaction",
							"nameLocation": "152:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2233,
									"mutability": "mutable",
									"name": "soonToken",
									"nameLocation": "185:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2448,
									"src": "175:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_SoonToken_$2226",
										"typeString": "contract SoonToken"
									},
									"typeName": {
										"id": 2232,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2231,
											"name": "SoonToken",
											"nameLocations": [
												"175:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2226,
											"src": "175:9:9"
										},
										"referencedDeclaration": 2226,
										"src": "175:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SoonToken_$2226",
											"typeString": "contract SoonToken"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "228:45:9",
										"statements": [
											{
												"expression": {
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2238,
														"name": "soonToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "239:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SoonToken_$2226",
															"typeString": "contract SoonToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2240,
																"name": "_CA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "261:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2239,
															"name": "SoonToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "251:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SoonToken_$2226_$",
																"typeString": "type(contract SoonToken)"
															}
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "251:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SoonToken_$2226",
															"typeString": "contract SoonToken"
														}
													},
													"src": "239:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SoonToken_$2226",
														"typeString": "contract SoonToken"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "239:26:9"
											}
										]
									},
									"id": 2245,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "_CA",
												"nameLocation": "223:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "215:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:13:9"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:0:9"
									},
									"scope": 2448,
									"src": "203:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "444:310:9",
										"statements": [
											{
												"body": {
													"id": 2303,
													"nodeType": "Block",
													"src": "501:246:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2272,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "593:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2274,
																		"indexExpression": {
																			"id": 2273,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "602:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "593:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2275,
																			"name": "message",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "606:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 2277,
																		"indexExpression": {
																			"id": 2276,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "614:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "606:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2278,
																			"name": "signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "618:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 2280,
																		"indexExpression": {
																			"id": 2279,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "628:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "618:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2271,
																	"name": "signTransaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "577:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory,bytes memory)"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "577:54:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2282,
															"nodeType": "ExpressionStatement",
															"src": "577:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2286,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "661:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2288,
																		"indexExpression": {
																			"id": 2287,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "670:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "661:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "674:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2291,
																		"indexExpression": {
																			"id": 2290,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "680:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "674:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2283,
																		"name": "soonToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "646:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SoonToken_$2226",
																			"typeString": "contract SoonToken"
																		}
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "656:4:9",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2225,
																	"src": "646:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "646:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2293,
															"nodeType": "ExpressionStatement",
															"src": "646:37:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2295,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "711:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2297,
																		"indexExpression": {
																			"id": 2296,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "720:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "711:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2298,
																			"name": "message",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "724:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 2300,
																		"indexExpression": {
																			"id": 2299,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "732:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "724:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2294,
																	"name": "evnet01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "703:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory)"
																	}
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "703:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2302,
															"nodeType": "EmitStatement",
															"src": "698:37:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2264,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "475:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2265,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "479:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "488:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "479:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"initializationExpression": {
													"assignments": [
														2261
													],
													"declarations": [
														{
															"constant": false,
															"id": 2261,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "468:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2304,
															"src": "460:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2260,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "460:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2263,
													"initialValue": {
														"hexValue": "30",
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "472:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "460:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "496:3:9",
														"subExpression": {
															"id": 2268,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "496:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2270,
													"nodeType": "ExpressionStatement",
													"src": "496:3:9"
												},
												"nodeType": "ForStatement",
												"src": "455:292:9"
											}
										]
									},
									"functionSelector": "883a6c75",
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "290:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "322:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "305:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2246,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "305:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2247,
													"nodeType": "ArrayTypeName",
													"src": "305:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "355:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "341:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2249,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "341:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2250,
													"nodeType": "ArrayTypeName",
													"src": "341:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "387:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "371:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2252,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "371:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2253,
													"nodeType": "ArrayTypeName",
													"src": "371:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "420:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "405:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2255,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "405:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2256,
													"nodeType": "ArrayTypeName",
													"src": "405:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:142:9"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:9"
									},
									"scope": 2448,
									"src": "281:473:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "886:475:9",
										"statements": [
											{
												"assignments": [
													2316
												],
												"declarations": [
													{
														"constant": false,
														"id": 2316,
														"mutability": "mutable",
														"name": "ethSign",
														"nameLocation": "905:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "897:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2315,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "897:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2320,
												"initialValue": {
													"arguments": [
														{
															"id": 2318,
															"name": "_msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "933:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2317,
														"name": "getEthSignMsgHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "915:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "897:41:9"
											},
											{
												"assignments": [
													2322,
													2324,
													2326
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1003:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "995:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2321,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "995:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2324,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1014:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "1006:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2323,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1006:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2326,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1023:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "1017:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2325,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1017:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"arguments": [
														{
															"id": 2328,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "1038:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2327,
														"name": "splitSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2429,
														"src": "1028:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "994:54:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2332,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "1209:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2333,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "1212:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2334,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "1215:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2331,
														"name": "event02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "1201:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint8_$returns$__$",
															"typeString": "function (bytes32,bytes32,uint8)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "EmitStatement",
												"src": "1196:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2339,
																	"name": "ethSign",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "1251:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2340,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "1260:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2341,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "1263:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2342,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "1266:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2338,
																"name": "ecrecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967290,
																"src": "1241:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1241:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2337,
														"name": "event03",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2447,
														"src": "1233:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "EmitStatement",
												"src": "1228:41:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2347,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "1293:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2346,
														"name": "event03",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2447,
														"src": "1285:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "EmitStatement",
												"src": "1280:18:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2351,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "1317:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2353,
																		"name": "ethSign",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2316,
																		"src": "1335:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2354,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2326,
																		"src": "1344:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2355,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "1347:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2356,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2324,
																		"src": "1350:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2352,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "1325:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1325:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1317:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1309:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "1309:44:9"
											}
										]
									},
									"functionSelector": "95e0e0c9",
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signTransaction",
									"nameLocation": "771:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "805:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "797:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "_msg",
												"nameLocation": "834:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "820:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "862:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "849:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "849:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:92:9"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:0:9"
									},
									"scope": 2448,
									"src": "762:599:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "1464:395:9",
										"statements": [
											{
												"assignments": [
													2370
												],
												"declarations": [
													{
														"constant": false,
														"id": 2370,
														"mutability": "mutable",
														"name": "msgLength",
														"nameLocation": "1580:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 2389,
														"src": "1575:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2369,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1575:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2376,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2373,
																"name": "_msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "1598:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1592:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 2371,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1592:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1592:11:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1604:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1592:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1575:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1708:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"id": 2383,
																			"name": "msgLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2370,
																			"src": "1780:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2381,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1040,
																			"src": "1763:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$1040_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1771:8:9",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 853,
																		"src": "1763:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1763:27:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2385,
																	"name": "_msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2364,
																	"src": "1813:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2378,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1669:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1673:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1669:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1669:167:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2377,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1641:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:210:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2368,
												"id": 2388,
												"nodeType": "Return",
												"src": "1621:230:9"
											}
										]
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignMsgHash",
									"nameLocation": "1378:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "_msg",
												"nameLocation": "1420:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "1406:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1406:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:36:9"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "1455:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:9:9"
									},
									"scope": 2448,
									"src": "1369:490:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "1973:653:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2402,
																	"name": "sign",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "2031:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2036:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2031:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2046:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "2031:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2023:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "2023:26:9"
											},
											{
												"AST": {
													"nativeSrc": "2144:326:9",
													"nodeType": "YulBlock",
													"src": "2144:326:9",
													"statements": [
														{
															"nativeSrc": "2230:25:9",
															"nodeType": "YulAssignment",
															"src": "2230:25:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sign",
																				"nativeSrc": "2245:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2245:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2251:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2251:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2241:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:9"
																		},
																		"nativeSrc": "2241:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:13:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2235:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2235:5:9"
																},
																"nativeSrc": "2235:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2235:20:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2230:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2230:1:9"
																}
															]
														},
														{
															"nativeSrc": "2332:25:9",
															"nodeType": "YulAssignment",
															"src": "2332:25:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sign",
																				"nativeSrc": "2347:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2347:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2353:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2353:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2343:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:9"
																		},
																		"nativeSrc": "2343:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2343:13:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2337:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2337:5:9"
																},
																"nativeSrc": "2337:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2337:20:9"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nativeSrc": "2332:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2332:1:9"
																}
															]
														},
														{
															"nativeSrc": "2425:34:9",
															"nodeType": "YulAssignment",
															"src": "2425:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sign",
																						"nativeSrc": "2448:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2448:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2454:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2454:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2444:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2444:3:9"
																				},
																				"nativeSrc": "2444:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2444:13:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2438:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2438:5:9"
																		},
																		"nativeSrc": "2438:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2438:20:9"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nativeSrc": "2430:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2430:4:9"
																},
																"nativeSrc": "2430:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2430:29:9"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nativeSrc": "2425:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2425:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2395,
														"isOffset": false,
														"isSlot": false,
														"src": "2230:1:9",
														"valueSize": 1
													},
													{
														"declaration": 2397,
														"isOffset": false,
														"isSlot": false,
														"src": "2332:1:9",
														"valueSize": 1
													},
													{
														"declaration": 2392,
														"isOffset": false,
														"isSlot": false,
														"src": "2245:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2392,
														"isOffset": false,
														"isSlot": false,
														"src": "2347:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2392,
														"isOffset": false,
														"isSlot": false,
														"src": "2448:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2399,
														"isOffset": false,
														"isSlot": false,
														"src": "2425:1:9",
														"valueSize": 1
													}
												],
												"id": 2408,
												"nodeType": "InlineAssembly",
												"src": "2135:335:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2409,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "2537:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3237",
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2541:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_27_by_1",
															"typeString": "int_const 27"
														},
														"value": "27"
													},
													"src": "2537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "2533:46:9",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "2545:34:9",
													"statements": [
														{
															"expression": {
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2412,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "2560:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3237",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2565:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "2560:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2415,
															"nodeType": "ExpressionStatement",
															"src": "2560:7:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2419,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "2599:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3237",
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2604:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "2599:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "2610:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3238",
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2615:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"src": "2610:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2599:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2591:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2591:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "2591:27:9"
											}
										]
									},
									"functionSelector": "2ff4bb4b",
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSign",
									"nameLocation": "1876:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "sign",
												"nameLocation": "1909:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1896:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1896:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:35:9"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1950:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1942:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1961:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1953:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1970:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1964:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1964:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:31:9"
									},
									"scope": 2448,
									"src": "1867:759:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "710c6bec3cf443b5afbda9ff86716f3a0d00db3ddaee6cc493c93be240533e12",
									"id": 2435,
									"name": "evnet01",
									"nameLocation": "2640:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2656:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2648:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nameLocation": "2669:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2662:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2662:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:27:9"
									},
									"src": "2634:41:9"
								},
								{
									"anonymous": false,
									"eventSelector": "29bd5e82392230298810019d37e60fc402505adb5afa0f05072474634fcca380",
									"id": 2443,
									"name": "event02",
									"nameLocation": "2687:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"indexed": false,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2703:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2695:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"indexed": false,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2714:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2706:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2438,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"indexed": false,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2723:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "2717:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2440,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2717:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:31:9"
									},
									"src": "2681:45:9"
								},
								{
									"anonymous": false,
									"eventSelector": "690c22a325937e3625a470a9f14c15683846660270fb112ea5c93a7ea9de7466",
									"id": 2447,
									"name": "event03",
									"nameLocation": "2738:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2754:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "2746:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:17:9"
									},
									"src": "2732:31:9"
								}
							],
							"scope": 2449,
							"src": "143:2623:9",
							"usedErrors": [],
							"usedEvents": [
								2435,
								2443,
								2447
							]
						}
					],
					"src": "33:2735:9"
				},
				"id": 9
			}
		}
	}
}